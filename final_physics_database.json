{
  "metadata": {
    "title": "Physics Database - No Classical Mechanics",
    "version": "3.0",
    "total_laws": 400,
    "total_constants": 25,
    "creation_date": "2025-01-13",
    "description": "All physics equations except Classical Mechanics",
    "cleaning_stats": {
      "original_count": 661,
      "removed_problematic": 2,
      "fixed_names": 214,
      "fixed_variables": 1,
      "removed_duplicates": 0,
      "final_count": 659
    },
    "validation": {
      "total_laws": 659,
      "parse_success": 659,
      "has_variables": 658,
      "has_sympy_repr": 659,
      "branches": {
        "Thermodynamics": 73,
        "Electromagnetism": 137,
        "Quantum Mechanics": 48,
        "Atomic and Nuclear Physics": 24,
        "Relativity": 26,
        "Optics": 43,
        "Statistical Mechanics": 12,
        "Fluid Mechanics": 6,
        "Condensed Matter Physics": 5,
        "Astrophysics": 8,
        "Fluid Dynamics": 18
      },
      "avg_equation_length": 16.22003034901366,
      "unique_names": 638
    },
    "cleaning_info": {
      "cleaned_date": "2025-07-16T21:04:36.085477",
      "cleaner_version": "2.0",
      "total_modifications": 213
    },
    "reorganization": {
      "date": "2025-07-17T17:54:57.564338",
      "version": "4.0",
      "description": "Reorganized Modern Physics and Nuclear Physics into more specific categories",
      "stats": {
        "Modern Physics": {
          "Electromagnetism": 16,
          "Atomic and Nuclear Physics": 18,
          "Relativity": 10,
          "Optics": 8,
          "Quantum Mechanics": 12,
          "Classical Mechanics": 6,
          "Condensed Matter Physics": 5,
          "Astrophysics": 8
        },
        "Nuclear Physics": {
          "Atomic and Nuclear Physics": 6
        }
      },
      "total_moved": 89
    }
  },
  "constants": [
    {
      "symbol": "π",
      "name": "Pi",
      "value": "3.14159265359",
      "unit": "dimensionless",
      "category": "Mechanics",
      "source": "constants.json"
    },
    {
      "symbol": "c<sub>0</sub>",
      "name": "Vacuum speed of light",
      "value": "2.99792458*10^8",
      "unit": "meter per second",
      "category": "Quantum mechanics",
      "source": "constants.json"
    },
    {
      "symbol": "G<sub>N</sub>",
      "name": "Newtonian constant of gravitation",
      "value": "6.673*10^-11",
      "unit": "cubic meter per kilogram square second",
      "category": "Mechanics",
      "source": "constants.json"
    },
    {
      "symbol": "h",
      "name": "Planck constant",
      "value": "6.626069*10^-34",
      "unit": "joule second",
      "category": "Quantum mechanics",
      "source": "constants.json"
    },
    {
      "symbol": "μ<sub>0</sub>",
      "name": "Magnetic constant",
      "value": "4*3.14159265359*10^-7",
      "unit": "newton per square meter",
      "category": "Electromagnetism",
      "source": "constants.json"
    },
    {
      "symbol": "ε<sub>0</sub>",
      "name": "Electric constant",
      "value": "8.854188*10^-12",
      "unit": "farad per meter",
      "category": "Electromagnetism",
      "source": "constants.json"
    },
    {
      "symbol": "T<sub>a</sub>",
      "name": "Absolute zero",
      "value": "0",
      "unit": "kelvin",
      "category": "Thermodynamics",
      "source": "constants.json"
    },
    {
      "symbol": "u",
      "name": "Unified atomic mass unit",
      "value": "1.660540*10^-27",
      "unit": "kilogram",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "N<sub>A</sub>",
      "name": "Avogadro constant",
      "value": "6.022142*10^23",
      "unit": "per mole",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "k",
      "name": "Boltzmann constant",
      "value": "1.380650*10^-23",
      "unit": "joule per kelvin",
      "category": "Thermodynamics",
      "source": "constants.json"
    },
    {
      "symbol": "λ<sub>C</sub>",
      "name": "Compton wavelength of an electron",
      "value": "2.426310^-12",
      "unit": "meter",
      "category": "Quantum mechanics",
      "source": "constants.json"
    },
    {
      "symbol": "F<sub>A</sub>",
      "name": "Faraday constant",
      "value": "9.648534*10^4",
      "unit": "ampere second per mole",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "N<sub>L</sub>",
      "name": "Loschmidt constant",
      "value": "2.686778*10^25",
      "unit": "per cubic meter",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "R<sub>H</sub>",
      "name": "Rydberg constant",
      "value": "1.097373*10^7",
      "unit": "per meter",
      "category": "Electromagnetism",
      "source": "constants.json"
    },
    {
      "symbol": "R<sub>y</sub>",
      "name": "Rydberg frequency",
      "value": "3.289841*10^15",
      "unit": "hertz",
      "category": "Electromagnetism",
      "source": "constants.json"
    },
    {
      "symbol": "σ<sub>B</sub>",
      "name": "Stefan-Boltzmann constant",
      "value": "5.670400*10^-8",
      "unit": "watt per square meter kelvin",
      "category": "Thermodynamics",
      "source": "constants.json"
    },
    {
      "symbol": "R<sub>0</sub>",
      "name": "Gas constant",
      "value": "8.314472",
      "unit": "joule per kelvin mole",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "b<sub>energy</sub>",
      "name": "Wien displacement law constant",
      "value": "2.897769*10^-3",
      "unit": "meter kelvin",
      "category": "Quantum mechanics",
      "source": "constants.json"
    },
    {
      "symbol": "V<sub>0</sub>",
      "name": "Molar volume of an ideal gas",
      "value": "22.414",
      "unit": "liter per mole",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "g<sub>0</sub>",
      "name": "Standard acceleration of gravity",
      "value": "9.80665*10^-2",
      "unit": "meter per square second",
      "category": "Mechanics",
      "source": "constants.json"
    },
    {
      "symbol": "T<sub>0</sub>",
      "name": "Standard temperature",
      "value": "273.15",
      "unit": "kelvin",
      "category": "Thermodynamics",
      "source": "constants.json"
    },
    {
      "symbol": "e",
      "name": "Elementary charge",
      "value": "1.60217646*10^-19",
      "unit": "coulomb",
      "category": "Electromagnetism",
      "source": "constants.json"
    },
    {
      "symbol": "m<sub>e</sub>",
      "name": "Electron mass",
      "value": "9.10938188*10^-31",
      "unit": "kilogram",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "m<sub>n</sub>",
      "name": "Neutron mass",
      "value": "1.67492716*10^-27",
      "unit": "kilogram",
      "category": "Chemical physics",
      "source": "constants.json"
    },
    {
      "symbol": "m<sub>p</sub>",
      "name": "Proton mass",
      "value": "1.67262158*10^-27",
      "unit": "kilogram",
      "category": "Chemical physics",
      "source": "constants.json"
    }
  ],
  "laws": [
    {
      "id": "adv_0117",
      "name": "Fluid Pressure - Hydrostatic",
      "equation": "F / A",
      "equation_hash": "aff816696d7de5df",
      "branch": "Thermodynamics",
      "category": "Hydrostatic",
      "difficulty": "beginner",
      "description": "Fluid Pressure in Hydrostatic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "F",
        "A"
      ],
      "sympy_repr": "F/A"
    },
    {
      "id": "adv_0000",
      "name": "Electric Force - Electrostatics",
      "equation": "k * q_1 * q_2 / r^2",
      "equation_hash": "7bb048ab69ddd012",
      "branch": "Electromagnetism",
      "category": "Electrostatics",
      "difficulty": "intermediate",
      "description": "Electric Force in Electrostatics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "q_2",
        "k_e",
        "r",
        "q_1"
      ],
      "sympy_repr": "2*k_e*q_1*q_2/r",
      "cleaning_metadata": {
        "original_variables": [
          "q_2",
          "k_boltzmann",
          "r",
          "q_1"
        ],
        "replacements": {
          "k_boltzmann": "k_e"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0001",
      "name": "Electric Force - Electrostatics (πεq)",
      "equation": "1 / (4 * π * ε_0) * q_1 * q_2 / r^2",
      "equation_hash": "bfee3cd555922c73",
      "branch": "Electromagnetism",
      "category": "Electrostatics",
      "difficulty": "advanced",
      "description": "Electric Force in Electrostatics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "q_2",
        "e",
        "r",
        "q_1",
        "epsilon_0"
      ],
      "sympy_repr": "q_1*q_2/(2*pi*epsilon_0*e*r)",
      "cleaning_metadata": {
        "original_variables": [
          "q_2",
          "e",
          "r",
          "q_1",
          "_chargepsilon_0"
        ],
        "replacements": {
          "_chargepsilon_0": "epsilon_0"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0002",
      "name": "Electric Force - Electrostatics (v3)",
      "equation": "q * E",
      "equation_hash": "fcd9df232c9b2d72",
      "branch": "Electromagnetism",
      "category": "Electrostatics",
      "difficulty": "beginner",
      "description": "Electric Force in Electrostatics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "q_charge"
      ],
      "sympy_repr": "E*q_charge",
      "cleaning_metadata": {
        "original_variables": [
          "q"
        ],
        "replacements": {
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0003",
      "name": "Electric Field - Point Charge",
      "equation": "k * q / r^2",
      "equation_hash": "55e2ef4fa53c3676",
      "branch": "Electromagnetism",
      "category": "Point Charge",
      "difficulty": "intermediate",
      "description": "Electric Field in Point Charge",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "k_e",
        "r",
        "q_charge"
      ],
      "sympy_repr": "2*k_e*q_charge/r",
      "cleaning_metadata": {
        "original_variables": [
          "k_boltzmann",
          "r",
          "q"
        ],
        "replacements": {
          "k_boltzmann": "k_e",
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0004",
      "name": "Electric Field - Point Charge (Fqt)",
      "equation": "F / q_test",
      "equation_hash": "9e4b052bbab517d5",
      "branch": "Electromagnetism",
      "category": "Point Charge",
      "difficulty": "intermediate",
      "description": "Electric Field in Point Charge",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "q_te_chargest",
        "F"
      ],
      "sympy_repr": "F/q_te_chargest"
    },
    {
      "id": "adv_0005",
      "name": "Electric Field - Point Charge (gra)",
      "equation": "- grad(V)",
      "equation_hash": "a6e9838a8191aeff",
      "branch": "Electromagnetism",
      "category": "Point Charge",
      "difficulty": "beginner",
      "description": "Electric Field in Point Charge",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "V_voltage",
        "grad"
      ],
      "sympy_repr": "-V_voltage*grad",
      "cleaning_metadata": {
        "original_variables": [
          "V",
          "grad"
        ],
        "replacements": {
          "V": "V_voltage"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0006",
      "name": "Electric Field - Parallel Plates",
      "equation": "σ / ε_0",
      "equation_hash": "970eef6af71bbe2a",
      "branch": "Electromagnetism",
      "category": "Parallel Plates",
      "difficulty": "beginner",
      "description": "Electric Field in Parallel Plates",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "sigma",
        "epsilon_0"
      ],
      "sympy_repr": "epsilon_0*sigma/e",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "sigma",
          "_chargepsilon_0"
        ],
        "replacements": {
          "_chargepsilon_0": "epsilon_0"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0007",
      "name": "Electric Field - Parallel Plates (v2)",
      "equation": "V / d",
      "equation_hash": "393645ed2f061d50",
      "branch": "Electromagnetism",
      "category": "Parallel Plates",
      "difficulty": "beginner",
      "description": "Electric Field in Parallel Plates",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d",
        "V_voltage"
      ],
      "sympy_repr": "V_voltage/d",
      "cleaning_metadata": {
        "original_variables": [
          "d",
          "V"
        ],
        "replacements": {
          "V": "V_voltage"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0008",
      "name": "Electric Potential - Point Charge",
      "equation": "k * q / r",
      "equation_hash": "98676f4db22f7fba",
      "branch": "Electromagnetism",
      "category": "Point Charge",
      "difficulty": "beginner",
      "description": "Electric Potential in Point Charge",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "k_e",
        "r",
        "q_charge"
      ],
      "sympy_repr": "k_e*q_charge/r",
      "cleaning_metadata": {
        "original_variables": [
          "k_boltzmann",
          "r",
          "q"
        ],
        "replacements": {
          "k_boltzmann": "k_e",
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0009",
      "name": "Electric Potential - Point Charge (Uqt)",
      "equation": "U / q_test",
      "equation_hash": "88210fe034c483f8",
      "branch": "Electromagnetism",
      "category": "Point Charge",
      "difficulty": "intermediate",
      "description": "Electric Potential in Point Charge",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "U",
        "q_te_chargest"
      ],
      "sympy_repr": "U/q_te_chargest"
    },
    {
      "id": "adv_0010",
      "name": "Electric Potential - Uniform Field",
      "equation": "- E * d",
      "equation_hash": "5207f28725f67835",
      "branch": "Electromagnetism",
      "category": "Uniform Field",
      "difficulty": "beginner",
      "description": "Electric Potential in Uniform Field",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d"
      ],
      "sympy_repr": "-E*d"
    },
    {
      "id": "adv_0011",
      "name": "Electric Potential - Uniform Field (v2)",
      "equation": "W / q",
      "equation_hash": "6eaf9ee1adff4171",
      "branch": "Electromagnetism",
      "category": "Uniform Field",
      "difficulty": "beginner",
      "description": "Electric Potential in Uniform Field",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "W",
        "q_charge"
      ],
      "sympy_repr": "W/q_charge",
      "cleaning_metadata": {
        "original_variables": [
          "W",
          "q"
        ],
        "replacements": {
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0012",
      "name": "Capacitance - General",
      "equation": "Q / V",
      "equation_hash": "accdffda303a7759",
      "branch": "Electromagnetism",
      "category": "General",
      "difficulty": "beginner",
      "description": "Capacitance in General",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "Q",
        "V"
      ],
      "sympy_repr": "Eq(Q, V)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0013",
      "name": "Capacitance - General (εAd)",
      "equation": "ε_0 * A / d",
      "equation_hash": "8537cf9fbb2c2de4",
      "branch": "Electromagnetism",
      "category": "General",
      "difficulty": "intermediate",
      "description": "Capacitance in General",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d",
        "e",
        "epsilon_0",
        "A"
      ],
      "sympy_repr": "A*epsilon_0*e/d",
      "cleaning_metadata": {
        "original_variables": [
          "d",
          "e",
          "_chargepsilon_0",
          "A"
        ],
        "replacements": {
          "_chargepsilon_0": "epsilon_0"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0014",
      "name": "Capacitance - General (πεR)",
      "equation": "4 * π * ε_0 * R",
      "equation_hash": "01f59dea2fdee837",
      "branch": "Electromagnetism",
      "category": "General",
      "difficulty": "intermediate",
      "description": "Capacitance in General",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "R_gas",
        "e",
        "epsilon_0"
      ],
      "sympy_repr": "4*pi*R_gas*epsilon_0*e",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "e",
          "_chargepsilon_0"
        ],
        "replacements": {
          "_chargepsilon_0": "epsilon_0"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0015",
      "name": "Magnetic Force - Lorentz Force",
      "equation": "q * v * B * sin(θ)",
      "equation_hash": "dc250ad2ae0bc4f4",
      "branch": "Electromagnetism",
      "category": "Lorentz Force",
      "difficulty": "intermediate",
      "description": "Magnetic Force in Lorentz Force",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "q",
        "θ",
        "v"
      ],
      "sympy_repr": "B*q*v*sin(θ)"
    },
    {
      "id": "adv_0016",
      "name": "Magnetic Force - Lorentz Force (qEv)",
      "equation": "q * (E + v × B)",
      "equation_hash": "62187fe240d32995",
      "branch": "Electromagnetism",
      "category": "Lorentz Force",
      "difficulty": "intermediate",
      "description": "Magnetic Force in Lorentz Force",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "q",
        "v"
      ],
      "sympy_repr": "q*(B*v + E)"
    },
    {
      "id": "adv_0017",
      "name": "Magnetic Force - Current in Magnetic Field",
      "equation": "I * L * B * sin(θ)",
      "equation_hash": "828ed9644ebfc45d",
      "branch": "Electromagnetism",
      "category": "Current in Magnetic Field",
      "difficulty": "intermediate",
      "description": "Magnetic Force in Current in Magnetic Field",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "θ",
        "L"
      ],
      "sympy_repr": "I*B*L*sin(θ)"
    },
    {
      "id": "adv_0018",
      "name": "Magnetic Force - Current in Magnetic Field (Idl)",
      "equation": "I * ∫(dl × B)",
      "equation_hash": "2d3f7753f0d9f6f5",
      "branch": "Electromagnetism",
      "category": "Current in Magnetic Field",
      "difficulty": "intermediate",
      "description": "Magnetic Force in Current in Magnetic Field",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "integral",
        "dl"
      ],
      "sympy_repr": "I*B*dl*integral",
      "cleaning_metadata": {
        "original_variables": [
          "B",
          "inte_chargegrate_charge",
          "dl"
        ],
        "replacements": {
          "inte_chargegrate_charge": "integral"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0019",
      "name": "Magnetic Field - Biot-Savart Law",
      "equation": "μ_0 * I / (2 * π * r)",
      "equation_hash": "5bd31274bead1003",
      "branch": "Electromagnetism",
      "category": "Biot-Savart Law",
      "difficulty": "intermediate",
      "description": "Magnetic Field in Biot-Savart Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "mu_0",
        "r"
      ],
      "sympy_repr": "I*mu_0/(2*pi*r)"
    },
    {
      "id": "adv_0020",
      "name": "Magnetic Field - Biot-Savart Law (μIR)",
      "equation": "μ_0 * I / (2 * R)",
      "equation_hash": "38a6f35ed9a7cf89",
      "branch": "Electromagnetism",
      "category": "Biot-Savart Law",
      "difficulty": "intermediate",
      "description": "Magnetic Field in Biot-Savart Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "R_gas",
        "mu_0"
      ],
      "sympy_repr": "I*mu_0/(2*R_gas)"
    },
    {
      "id": "adv_0021",
      "name": "Magnetic Field - Biot-Savart Law (μnI)",
      "equation": "μ_0 * n * I",
      "equation_hash": "0806e07487d286f4",
      "branch": "Electromagnetism",
      "category": "Biot-Savart Law",
      "difficulty": "intermediate",
      "description": "Magnetic Field in Biot-Savart Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "mu_0",
        "n"
      ],
      "sympy_repr": "I*mu_0*n"
    },
    {
      "id": "adv_0022",
      "name": "Electromagnetic Induction - Faraday's Law",
      "equation": "- dΦ_B / dt",
      "equation_hash": "f4bd6bcf03614078",
      "branch": "Electromagnetism",
      "category": "Faraday's Law",
      "difficulty": "intermediate",
      "description": "Electromagnetic Induction in Faraday's Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "dPh_planc_lightk_boltzmanni_B",
        "dt"
      ],
      "sympy_repr": "-dPh_planc_lightk_boltzmanni_B/dt"
    },
    {
      "id": "adv_0023",
      "name": "Electromagnetic Induction - Faraday's Law (NdΦ)",
      "equation": "- N * dΦ_B / dt",
      "equation_hash": "ff0223403d5ffc4b",
      "branch": "Electromagnetism",
      "category": "Faraday's Law",
      "difficulty": "intermediate",
      "description": "Electromagnetic Induction in Faraday's Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "dt",
        "dΦ_B",
        "N"
      ],
      "sympy_repr": "Eq(dt, dΦ_B)"
    },
    {
      "id": "adv_0024",
      "name": "Electromagnetic Induction - Faraday's Law (BLv)",
      "equation": "B * L * v",
      "equation_hash": "f307ab6d012dbafc",
      "branch": "Electromagnetism",
      "category": "Faraday's Law",
      "difficulty": "beginner",
      "description": "Electromagnetic Induction in Faraday's Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "v",
        "L"
      ],
      "sympy_repr": "B*L*v"
    },
    {
      "id": "adv_0025",
      "name": "Self-Inductance - Solenoid",
      "equation": "μ_0 * n^2 * A * l",
      "equation_hash": "020126bbc56458b8",
      "branch": "Electromagnetism",
      "category": "Solenoid",
      "difficulty": "intermediate",
      "description": "Self-Inductance in Solenoid",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "l",
        "mu_0",
        "n",
        "A"
      ],
      "sympy_repr": "2*A*l*mu_0*n",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0026",
      "name": "Self-Inductance - Solenoid (μNA)",
      "equation": "μ_0 * N^2 * A / l",
      "equation_hash": "30cad576c1df0354",
      "branch": "Electromagnetism",
      "category": "Solenoid",
      "difficulty": "intermediate",
      "description": "Self-Inductance in Solenoid",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "l",
        "_0",
        "N2",
        "A"
      ],
      "sympy_repr": "A*N2*_0/l",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0027",
      "name": "AC Circuit Power - RMS Values",
      "equation": "V_rms * I_rms * cos(φ)",
      "equation_hash": "2a804a5dde9452b1",
      "branch": "Electromagnetism",
      "category": "RMS Values",
      "difficulty": "intermediate",
      "description": "AC Circuit Power in RMS Values",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "phi",
        "V_rms",
        "I_rms",
        "c",
        "_lightos"
      ],
      "sympy_repr": "I_rms*V_rms*_lightos*c*phi",
      "cleaning_metadata": {
        "original_variables": [
          "ph_planc_lightk_boltzmanni",
          "V_rms",
          "I_rms",
          "c",
          "_lightos"
        ],
        "replacements": {
          "ph_planc_lightk_boltzmanni": "phi"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0028",
      "name": "AC Circuit Power - RMS Values (Irm)",
      "equation": "I_rms^2 * R",
      "equation_hash": "01a06b0324c59392",
      "branch": "Electromagnetism",
      "category": "RMS Values",
      "difficulty": "intermediate",
      "description": "AC Circuit Power in RMS Values",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "R_gas",
        "I_rms"
      ],
      "sympy_repr": "2*I_rms*R_gas",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0029",
      "name": "AC Circuit Power - RMS Values (Vma)",
      "equation": "V_max / sqrt(2)",
      "equation_hash": "55c9b68ac8962b76",
      "branch": "Electromagnetism",
      "category": "RMS Values",
      "difficulty": "intermediate",
      "description": "AC Circuit Power in RMS Values",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "V_m",
        "sqrt",
        "s",
        "ax"
      ],
      "sympy_repr": "V_m*ax*sqrt*t(2)/s",
      "cleaning_metadata": {
        "original_variables": [
          "V_m",
          "qr",
          "s",
          "ax"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0030",
      "name": "Impedance - AC Circuits",
      "equation": "sqrt(R^2 + (ω*L - 1/(ω*C))^2)",
      "equation_hash": "5cedfe76d76c3b7f",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "advanced",
      "description": "Impedance in AC Circuits",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "C",
        "L",
        "ω",
        "R"
      ],
      "sympy_repr": "sqrt(R**2 + (L*ω - 1/(C*ω))**2)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0031",
      "name": "Impedance - AC Circuits (v2)",
      "equation": "V / I",
      "equation_hash": "bdd973ea3aba7b5e",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "beginner",
      "description": "Impedance in AC Circuits",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "V"
      ],
      "sympy_repr": "-I*V",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0032",
      "name": "Impedance - AC Circuits (Rjω)",
      "equation": "R + j*(ω*L - 1/(ω*C))",
      "equation_hash": "48f106f477212386",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "intermediate",
      "description": "Impedance in AC Circuits",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "C",
        "L",
        "j",
        "R_gas",
        "omega"
      ],
      "sympy_repr": "R_gas + j*(L*omega - 1/(C*omega))",
      "cleaning_metadata": {
        "original_variables": [
          "C",
          "L",
          "j",
          "R_gas",
          "ome_chargega"
        ],
        "replacements": {
          "ome_chargega": "omega"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0033",
      "name": "Thermal Energy - Heat Transfer",
      "equation": "m * c * ΔT",
      "equation_hash": "2033c02d13e4f20d",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Thermal Energy in Heat Transfer",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "Delta_T",
        "c",
        "m"
      ],
      "sympy_repr": "Delta_T*c*c*m",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "De_chargeltaT",
          "_light",
          "m"
        ],
        "replacements": {
          "De_chargeltaT": "Delta_T",
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0034",
      "name": "Thermal Energy - Heat Transfer (QkA)",
      "equation": "Q = k * A * ΔT / d",
      "equation_hash": "66e0cdb80673633c",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Thermal Energy in Heat Transfer",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "Q",
        "k_thermal",
        "A"
      ],
      "sympy_repr": "Eq(Q, k_thermal)",
      "cleaning_metadata": {
        "original_variables": [
          "Q",
          "k",
          "A"
        ],
        "replacements": {
          "k": "k_thermal"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0035",
      "name": "Thermal Energy - Heat Transfer (σAT)",
      "equation": "σ * A * T^4",
      "equation_hash": "46009778a9ef32f3",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Thermal Energy in Heat Transfer",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "sigma",
        "T_temp",
        "A"
      ],
      "sympy_repr": "4*A*T_temp*sigma",
      "cleaning_metadata": {
        "original_variables": [
          "sigma",
          "T",
          "A"
        ],
        "replacements": {
          "T": "T_temp"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0036",
      "name": "Entropy - Thermodynamic",
      "equation": "k_B * ln(Ω)",
      "equation_hash": "d62771a05e419ec9",
      "branch": "Thermodynamics",
      "category": "Thermodynamic",
      "difficulty": "intermediate",
      "description": "Entropy in Thermodynamic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "k_B",
        "l"
      ],
      "sympy_repr": "k_B*l*n()"
    },
    {
      "id": "adv_0037",
      "name": "Entropy - Thermodynamic (dQT)",
      "equation": "∫(dQ / T)",
      "equation_hash": "90a8c80b54d3754e",
      "branch": "Thermodynamics",
      "category": "Thermodynamic",
      "difficulty": "beginner",
      "description": "Entropy in Thermodynamic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "integral",
        "dQ",
        "T"
      ],
      "sympy_repr": "dQ*integral/T",
      "cleaning_metadata": {
        "original_variables": [
          "inte_chargegrate_charge",
          "dQ",
          "T"
        ],
        "replacements": {
          "inte_chargegrate_charge": "integral"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0038",
      "name": "Entropy - Thermodynamic (nRl)",
      "equation": "n * R * ln(V_f / V_i)",
      "equation_hash": "277f1fbc094a8b42",
      "branch": "Thermodynamics",
      "category": "Thermodynamic",
      "difficulty": "intermediate",
      "description": "Entropy in Thermodynamic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "l",
        "n",
        "R",
        "V_i",
        "V_f"
      ],
      "sympy_repr": "R*l*n*n(V_f/V_i)"
    },
    {
      "id": "adv_0039",
      "name": "Gas Pressure - Ideal Gas",
      "equation": "n * R * T / V",
      "equation_hash": "01445afe2f3e300f",
      "branch": "Thermodynamics",
      "category": "Ideal Gas",
      "difficulty": "intermediate",
      "description": "Gas Pressure in Ideal Gas",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "R",
        "V_volume",
        "T",
        "n"
      ],
      "sympy_repr": "R*T*n/V_volume",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "V",
          "T",
          "n"
        ],
        "replacements": {
          "R_gas": "R",
          "V": "V_volume"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0040",
      "name": "Gas Pressure - Ideal Gas (ρRT)",
      "equation": "ρ * R * T / M",
      "equation_hash": "0bfafd0dcd1e6265",
      "branch": "Thermodynamics",
      "category": "Ideal Gas",
      "difficulty": "intermediate",
      "description": "Gas Pressure in Ideal Gas",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "R",
        "M",
        "T",
        "rho"
      ],
      "sympy_repr": "R*T*rho/M",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "M",
          "T",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "R_gas": "R",
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0041",
      "name": "Gas Pressure - Ideal Gas (nEa)",
      "equation": "2/3 * n * E_avg",
      "equation_hash": "827d508f481f7d6a",
      "branch": "Thermodynamics",
      "category": "Ideal Gas",
      "difficulty": "intermediate",
      "description": "Gas Pressure in Ideal Gas",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "E_avg",
        "n"
      ],
      "sympy_repr": "2*E_avg*n/3"
    },
    {
      "id": "adv_0042",
      "name": "Gas Pressure - Van der Waals",
      "equation": "(P + a/V^2) * (V - b) = R * T",
      "equation_hash": "6c56e3e7d5081ef8",
      "branch": "Thermodynamics",
      "category": "Van der Waals",
      "difficulty": "advanced",
      "description": "Gas Pressure in Van der Waals",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "R",
        "V_volume",
        "b",
        "T",
        "a",
        "P_pressure"
      ],
      "sympy_repr": "Eq((P_pressure + 2*a/V_volume)*(V_volume - b), R*T)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "V",
          "b",
          "T",
          "a",
          "P"
        ],
        "replacements": {
          "R_gas": "R",
          "V": "V_volume",
          "P": "P_pressure"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0043",
      "name": "Heat Engine Efficiency - Carnot Engine",
      "equation": "1 - T_c / T_h",
      "equation_hash": "dcd60292bd842150",
      "branch": "Thermodynamics",
      "category": "Carnot Engine",
      "difficulty": "intermediate",
      "description": "Heat Engine Efficiency in Carnot Engine",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "T_h_planc_lightk_boltzmann",
        "T_c_light"
      ],
      "sympy_repr": "-T_c_light/T_h_planc_lightk_boltzmann + 1"
    },
    {
      "id": "adv_0044",
      "name": "Heat Engine Efficiency - Carnot Engine (WQh)",
      "equation": "W / Q_h",
      "equation_hash": "2330685e1559116b",
      "branch": "Thermodynamics",
      "category": "Carnot Engine",
      "difficulty": "beginner",
      "description": "Heat Engine Efficiency in Carnot Engine",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "W",
        "Q_h_planc_lightk_boltzmann"
      ],
      "sympy_repr": "W/Q_h_planc_lightk_boltzmann"
    },
    {
      "id": "adv_0045",
      "name": "Heat Engine Efficiency - Carnot Engine (QhQ)",
      "equation": "(Q_h - Q_c) / Q_h",
      "equation_hash": "4d6c8abdd0d04ece",
      "branch": "Thermodynamics",
      "category": "Carnot Engine",
      "difficulty": "intermediate",
      "description": "Heat Engine Efficiency in Carnot Engine",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "Q_c_light",
        "Q_h_planc_lightk_boltzmann"
      ],
      "sympy_repr": "(-Q_c_light + Q_h_planc_lightk_boltzmann)/Q_h_planc_lightk_boltzmann"
    },
    {
      "id": "adv_0046",
      "name": "Photon Energy - Quantum",
      "equation": "h * f",
      "equation_hash": "1e7774dc82f704b8",
      "branch": "Quantum Mechanics",
      "category": "Quantum",
      "difficulty": "beginner",
      "description": "Photon Energy in Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "f",
        "h"
      ],
      "sympy_repr": "f*h",
      "cleaning_metadata": {
        "original_variables": [
          "f",
          "h_planc_lightk_boltzmann"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0047",
      "name": "Photon Energy - Quantum (hcλ)",
      "equation": "h * c / λ",
      "equation_hash": "8051f0c54fd57071",
      "branch": "Quantum Mechanics",
      "category": "Quantum",
      "difficulty": "beginner",
      "description": "Photon Energy in Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "c",
        "h",
        "lambda"
      ],
      "sympy_repr": "c*c*h/lambda",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_light",
          "h_planc_lightk_boltzmann",
          "lamda"
        ],
        "replacements": {
          "_light": "c",
          "h_planc_lightk_boltzmann": "h",
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0048",
      "name": "Photon Energy - Quantum (v3)",
      "equation": "ℏ * ω",
      "equation_hash": "b5a6b52f68ca577e",
      "branch": "Quantum Mechanics",
      "category": "Quantum",
      "difficulty": "beginner",
      "description": "Photon Energy in Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "hbar",
        "omega"
      ],
      "sympy_repr": "hbar*omega",
      "cleaning_metadata": {
        "original_variables": [
          "h_planc_lightk_boltzmannbar",
          "ome_chargega"
        ],
        "replacements": {
          "h_planc_lightk_boltzmannbar": "hbar",
          "ome_chargega": "omega"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0049",
      "name": "de Broglie Wavelength - Matter Waves",
      "equation": "h / p",
      "equation_hash": "f86333516afd7bd1",
      "branch": "Quantum Mechanics",
      "category": "Matter Waves",
      "difficulty": "beginner",
      "description": "de Broglie Wavelength in Matter Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "p",
        "h"
      ],
      "sympy_repr": "h/p",
      "cleaning_metadata": {
        "original_variables": [
          "p",
          "h_planc_lightk_boltzmann"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0050",
      "name": "de Broglie Wavelength - Matter Waves (hmv)",
      "equation": "h / (m * v)",
      "equation_hash": "170490e6304626e5",
      "branch": "Quantum Mechanics",
      "category": "Matter Waves",
      "difficulty": "intermediate",
      "description": "de Broglie Wavelength in Matter Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v",
        "m",
        "h"
      ],
      "sympy_repr": "h/(m*v)",
      "cleaning_metadata": {
        "original_variables": [
          "v",
          "m",
          "h_planc_lightk_boltzmann"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0051",
      "name": "de Broglie Wavelength - Matter Waves (hsq)",
      "equation": "h / sqrt(2 * m * E_k)",
      "equation_hash": "ff600f43cfad2187",
      "branch": "Quantum Mechanics",
      "category": "Matter Waves",
      "difficulty": "intermediate",
      "description": "de Broglie Wavelength in Matter Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "E_k",
        "s",
        "sqrt",
        "h"
      ],
      "sympy_repr": "h*sqrt*t(2*E_k*m)/s",
      "cleaning_metadata": {
        "original_variables": [
          "m",
          "E_k",
          "s",
          "qr",
          "h"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0052",
      "name": "Uncertainty Principle - Heisenberg",
      "equation": "Δx * Δp ≥ ℏ / 2",
      "equation_hash": "2b0a927036f52d9e",
      "branch": "Quantum Mechanics",
      "category": "Heisenberg",
      "difficulty": "intermediate",
      "description": "Uncertainty Principle in Heisenberg",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "De_chargeltap",
        "De_chargeltax"
      ],
      "sympy_repr": "De_chargeltap*De_chargeltax"
    },
    {
      "id": "adv_0053",
      "name": "Uncertainty Principle - Heisenberg (ΔEΔ)",
      "equation": "ΔE * Δt ≥ ℏ / 2",
      "equation_hash": "38f6560a515c78c5",
      "branch": "Quantum Mechanics",
      "category": "Heisenberg",
      "difficulty": "intermediate",
      "description": "Uncertainty Principle in Heisenberg",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "De_chargeltaE",
        "De_chargeltat"
      ],
      "sympy_repr": "De_chargeltaE*De_chargeltat"
    },
    {
      "id": "adv_0054",
      "name": "Uncertainty Principle - Heisenberg (ΔLz)",
      "equation": "ΔL_z * Δφ ≥ ℏ / 2",
      "equation_hash": "df2e336b503ef535",
      "branch": "Quantum Mechanics",
      "category": "Heisenberg",
      "difficulty": "intermediate",
      "description": "Uncertainty Principle in Heisenberg",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "De_chargeltaL_z",
        "De_chargeltaph_planc_lightk_boltzmanni"
      ],
      "sympy_repr": "De_chargeltaL_z*De_chargeltaph_planc_lightk_boltzmanni"
    },
    {
      "id": "adv_0055",
      "name": "Fine Structure Constant - Fundamental",
      "equation": "e^2 / (4 * π * ε_0 * ℏ * c)",
      "equation_hash": "c76bbec9c216e361",
      "branch": "Atomic and Nuclear Physics",
      "category": "Fundamental",
      "difficulty": "advanced",
      "description": "Fine Structure Constant in Fundamental",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "hbar",
        "e",
        "c",
        "epsilon_0"
      ],
      "sympy_repr": "e/(2*pi*epsilon_0*c*c*hbar)",
      "cleaning_metadata": {
        "original_variables": [
          "_light",
          "h_planc_lightk_boltzmannbar",
          "_charge",
          "c",
          "_chargepsilon_0"
        ],
        "replacements": {
          "_light": "c",
          "h_planc_lightk_boltzmannbar": "hbar",
          "_charge": "e",
          "_chargepsilon_0": "epsilon_0"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0056",
      "name": "Fine Structure Constant - Fundamental (keℏ)",
      "equation": "k * e^2 / (ℏ * c)",
      "equation_hash": "6468831236407f41",
      "branch": "Atomic and Nuclear Physics",
      "category": "Fundamental",
      "difficulty": "intermediate",
      "description": "Fine Structure Constant in Fundamental",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "k_boltzmann",
        "c",
        "hbar",
        "e",
        "c"
      ],
      "sympy_repr": "2*e*e*k_boltzmann/(c*c*hbar)",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "k_boltzmann",
          "_light",
          "h_planc_lightk_boltzmannbar",
          "_charge",
          "c"
        ],
        "replacements": {
          "_light": "c",
          "h_planc_lightk_boltzmannbar": "hbar",
          "_charge": "e"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0057",
      "name": "Fine Structure Constant - Fundamental (v3)",
      "equation": "1 / 137.036",
      "equation_hash": "cca5b6a0b30779f9",
      "branch": "Atomic and Nuclear Physics",
      "category": "Fundamental",
      "difficulty": "intermediate",
      "description": "Fine Structure Constant in Fundamental",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [],
      "sympy_repr": "0.00729735252050556",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0058",
      "name": "Hydrogen Energy Levels - Bohr Model",
      "equation": "- 13.6 * eV / n^2",
      "equation_hash": "819e0b8236d8650c",
      "branch": "Atomic and Nuclear Physics",
      "category": "Bohr Model",
      "difficulty": "intermediate",
      "description": "Hydrogen Energy Levels in Bohr Model",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "n",
        "_chargeV"
      ],
      "sympy_repr": "-27.2*_chargeV*e/n",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0059",
      "name": "Hydrogen Energy Levels - Bohr Model (Ryh)",
      "equation": "- R_y * h * c / n^2",
      "equation_hash": "94d661b5e1999479",
      "branch": "Atomic and Nuclear Physics",
      "category": "Bohr Model",
      "difficulty": "intermediate",
      "description": "Hydrogen Energy Levels in Bohr Model",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "h",
        "n",
        "R_gas_y",
        "c"
      ],
      "sympy_repr": "-2*R_gas_y*c*c*h/n",
      "cleaning_metadata": {
        "original_variables": [
          "_light",
          "h_planc_lightk_boltzmann",
          "n",
          "R_gas_y",
          "c"
        ],
        "replacements": {
          "_light": "c",
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0060",
      "name": "Hydrogen Energy Levels - Bohr Model (mee)",
      "equation": "- m_e * e^4 / (8 * ε_0^2 * h^2 * n^2)",
      "equation_hash": "4b8e06aaaf2ed1a2",
      "branch": "Atomic and Nuclear Physics",
      "category": "Bohr Model",
      "difficulty": "advanced",
      "description": "Hydrogen Energy Levels in Bohr Model",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "h",
        "n",
        "e",
        "m_e",
        "epsilon_0"
      ],
      "sympy_repr": "-e*m_e/(16*epsilon_0*h*n)",
      "cleaning_metadata": {
        "original_variables": [
          "h_planc_lightk_boltzmann",
          "n",
          "_charge",
          "m_e_charge",
          "_chargepsilon_0"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h",
          "_charge": "e",
          "m_e_charge": "m_e",
          "_chargepsilon_0": "epsilon_0"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0061",
      "name": "Radioactive Decay - Exponential Decay",
      "equation": "N_0 * exp(-λ * t)",
      "equation_hash": "ac573a2046d85217",
      "branch": "Atomic and Nuclear Physics",
      "category": "Exponential Decay",
      "difficulty": "intermediate",
      "description": "Radioactive Decay in Exponential Decay",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "t",
        "lambda",
        "_chargexp",
        "N_0"
      ],
      "sympy_repr": "-N_0*_chargexp*e*lambda*t",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "t",
          "lamda",
          "_chargexp",
          "N_0"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Nuclear Physics"
    },
    {
      "id": "adv_0062",
      "name": "Radioactive Decay - Exponential Decay (Nex)",
      "equation": "N_0 * exp(-t / τ)",
      "equation_hash": "7f5fb279f4a3c189",
      "branch": "Atomic and Nuclear Physics",
      "category": "Exponential Decay",
      "difficulty": "intermediate",
      "description": "Radioactive Decay in Exponential Decay",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "t",
        "_chargexp",
        "N_0",
        "tau"
      ],
      "sympy_repr": "-N_0*_chargexp*e*t/tau",
      "original_branch": "Nuclear Physics"
    },
    {
      "id": "adv_0063",
      "name": "Radioactive Decay - Exponential Decay (Ntt)",
      "equation": "N_0 * (1/2)^(t / t_half)",
      "equation_hash": "3814871052158e8a",
      "branch": "Atomic and Nuclear Physics",
      "category": "Exponential Decay",
      "difficulty": "intermediate",
      "description": "Radioactive Decay in Exponential Decay",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "N_0",
        "t",
        "t_h_planc_lightk_boltzmannalf"
      ],
      "sympy_repr": "N_0*t/(2*t_h_planc_lightk_boltzmannalf)",
      "original_branch": "Nuclear Physics"
    },
    {
      "id": "adv_0064",
      "name": "Nuclear Binding Energy - Mass-Energy",
      "equation": "Δm * c^2",
      "equation_hash": "af9bfb606f4da167",
      "branch": "Atomic and Nuclear Physics",
      "category": "Mass-Energy",
      "difficulty": "beginner",
      "description": "Nuclear Binding Energy in Mass-Energy",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "De_chargeltam",
        "c"
      ],
      "sympy_repr": "2*De_chargeltam*c*c",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "De_chargeltam",
          "_light"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Nuclear Physics"
    },
    {
      "id": "adv_0065",
      "name": "Nuclear Binding Energy - Mass-Energy (Zmp)",
      "equation": "(Z * m_p + N * m_n - M_nucleus) * c^2",
      "equation_hash": "d3b6686f807083d5",
      "branch": "Atomic and Nuclear Physics",
      "category": "Mass-Energy",
      "difficulty": "advanced",
      "description": "Nuclear Binding Energy in Mass-Energy",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m_n",
        "N",
        "M_nucleus"
      ],
      "sympy_repr": "Eq(m_n, N)",
      "original_branch": "Nuclear Physics"
    },
    {
      "id": "adv_0066",
      "name": "Nuclear Binding Energy - Mass-Energy (BEA)",
      "equation": "B.E. / A",
      "equation_hash": "941699eef7ad011b",
      "branch": "Atomic and Nuclear Physics",
      "category": "Mass-Energy",
      "difficulty": "beginner",
      "description": "Nuclear Binding Energy in Mass-Energy",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "E",
        "B",
        "A"
      ],
      "sympy_repr": "Eq(E, B)",
      "original_branch": "Nuclear Physics"
    },
    {
      "id": "adv_0067",
      "name": "Relativistic Energy - Special Relativity",
      "equation": "γ * m * c^2",
      "equation_hash": "4e97b37aedc27f9c",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Relativistic Energy in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "m",
        "γ"
      ],
      "sympy_repr": "c**2*m*γ"
    },
    {
      "id": "adv_0068",
      "name": "Relativistic Energy - Special Relativity (sqr)",
      "equation": "sqrt((p * c)^2 + (m * c^2)^2)",
      "equation_hash": "cf5bca86c6821b6b",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "advanced",
      "description": "Relativistic Energy in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "m",
        "p"
      ],
      "sympy_repr": "sqrt(c**4*m**2 + c**2*p**2)"
    },
    {
      "id": "adv_0069",
      "name": "Relativistic Energy - Special Relativity (mcs)",
      "equation": "m * c^2 / sqrt(1 - v^2/c^2)",
      "equation_hash": "63fc3353aeffb278",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "advanced",
      "description": "Relativistic Energy in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v2",
        "m",
        "c2",
        "s",
        "sqrt"
      ],
      "sympy_repr": "c2*m*sqrt*t(1 - v2/c2)/s",
      "cleaning_metadata": {
        "original_variables": [
          "v2",
          "m",
          "c2",
          "s",
          "qr"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0070",
      "name": "Lorentz Factor - Special Relativity",
      "equation": "1 / sqrt(1 - v^2/c^2)",
      "equation_hash": "0d43d562e03aab7a",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Lorentz Factor in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v2",
        "sqrt",
        "c2",
        "s"
      ],
      "sympy_repr": "sqrt*t(1 - v2/c2)/s",
      "cleaning_metadata": {
        "original_variables": [
          "v2",
          "qr",
          "c2",
          "s"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0071",
      "name": "Lorentz Factor - Special Relativity (Emc)",
      "equation": "E / (m * c^2)",
      "equation_hash": "30faa81bc3862db0",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Lorentz Factor in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "c",
        "m"
      ],
      "sympy_repr": "E/(2*c*c*m)",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_light",
          "m"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0072",
      "name": "Lorentz Factor - Special Relativity (dtd)",
      "equation": "dt / dt_0",
      "equation_hash": "9a165055a3925453",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "beginner",
      "description": "Lorentz Factor in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "dt_0",
        "dt"
      ],
      "sympy_repr": "dt/dt_0"
    },
    {
      "id": "adv_0073",
      "name": "Doppler Shift - Relativistic",
      "equation": "f_0 * sqrt((1 + β)/(1 - β))",
      "equation_hash": "45fb95153d353626",
      "branch": "Relativity",
      "category": "Relativistic",
      "difficulty": "advanced",
      "description": "Doppler Shift in Relativistic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "f_0",
        "β"
      ],
      "sympy_repr": "f_0*sqrt((β + 1)/(1 - β))"
    },
    {
      "id": "adv_0074",
      "name": "Doppler Shift - Relativistic (fsq)",
      "equation": "f_0 * sqrt((1 - β)/(1 + β))",
      "equation_hash": "2fb94703e51bf9ab",
      "branch": "Relativity",
      "category": "Relativistic",
      "difficulty": "advanced",
      "description": "Doppler Shift in Relativistic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "f_0",
        "β"
      ],
      "sympy_repr": "f_0*sqrt((1 - β)/(β + 1))"
    },
    {
      "id": "adv_0075",
      "name": "Doppler Shift - Relativistic (fsq)",
      "equation": "f_0 * sqrt(1 - v^2/c^2) / (1 - v*cos(θ)/c)",
      "equation_hash": "dc465503927c21d4",
      "branch": "Relativity",
      "category": "Relativistic",
      "difficulty": "advanced",
      "description": "Doppler Shift in Relativistic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v2",
        "sqrt",
        "c2",
        "s",
        "v",
        "f_0"
      ],
      "sympy_repr": "f_0*sqrt*s*t(1 - v2/c2)/(-v*os() + 1)",
      "cleaning_metadata": {
        "original_variables": [
          "v2",
          "qr",
          "c2",
          "s",
          "v",
          "f_0"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0076",
      "name": "Schwarzschild Radius - General Relativity",
      "equation": "2 * G * M / c^2",
      "equation_hash": "5642429acca1921b",
      "branch": "Relativity",
      "category": "General Relativity",
      "difficulty": "intermediate",
      "description": "Schwarzschild Radius in General Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "M",
        "c",
        "G",
        "c",
        "_grav"
      ],
      "sympy_repr": "4*G*M*_grav*c/c",
      "cleaning_metadata": {
        "original_variables": [
          "M",
          "_light",
          "G",
          "c",
          "_grav"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0077",
      "name": "Schwarzschild Radius - General Relativity (MMs)",
      "equation": "2.95 * M / M_sun * km",
      "equation_hash": "829681615d1efc50",
      "branch": "Relativity",
      "category": "General Relativity",
      "difficulty": "intermediate",
      "description": "Schwarzschild Radius in General Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "M",
        "M_sun",
        "k_boltzmannm"
      ],
      "sympy_repr": "2.95*M*k_boltzmannm/M_sun",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0078",
      "name": "Wave Equation - Classical Waves",
      "equation": "∂²u/∂t² = v² * ∇²u",
      "equation_hash": "2cfd338ea33869ad",
      "branch": "Quantum Mechanics",
      "category": "Classical Waves",
      "difficulty": "intermediate",
      "description": "Wave Equation in Classical Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "nabla2",
        "v2",
        "diff2",
        "difft2",
        "u"
      ],
      "sympy_repr": "Eq(diff2*u/difft2, nabla2*u*v2)"
    },
    {
      "id": "adv_0079",
      "name": "Wave Equation - Classical Waves (Asi)",
      "equation": "A * sin(k*x - ω*t + φ)",
      "equation_hash": "d9cdbaaa83e6beb0",
      "branch": "Quantum Mechanics",
      "category": "Classical Waves",
      "difficulty": "intermediate",
      "description": "Wave Equation in Classical Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "x",
        "t",
        "A",
        "k",
        "ω",
        "φ"
      ],
      "sympy_repr": "A*sin(k*x - t*ω + φ)"
    },
    {
      "id": "adv_0080",
      "name": "Wave Equation - Classical Waves (vfλ)",
      "equation": "v = f * λ",
      "equation_hash": "822a810d82290b94",
      "branch": "Quantum Mechanics",
      "category": "Classical Waves",
      "difficulty": "beginner",
      "description": "Wave Equation in Classical Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v",
        "lambda",
        "f"
      ],
      "sympy_repr": "Eq(v, f*lambda)",
      "cleaning_metadata": {
        "original_variables": [
          "v",
          "lamda",
          "f"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0081",
      "name": "Interference - Young's Double Slit",
      "equation": "d * sin(θ) = m * λ",
      "equation_hash": "b953fa00c1058674",
      "branch": "Optics",
      "category": "Young's Double Slit",
      "difficulty": "intermediate",
      "description": "Interference in Young's Double Slit",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d",
        "m",
        "λ",
        "θ"
      ],
      "sympy_repr": "Eq(d*sin(θ), m*λ)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0082",
      "name": "Interference - Young's Double Slit (dsi)",
      "equation": "d * sin(θ) = (m + 1/2) * λ",
      "equation_hash": "ae832815670fa492",
      "branch": "Optics",
      "category": "Young's Double Slit",
      "difficulty": "advanced",
      "description": "Interference in Young's Double Slit",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d",
        "m",
        "λ",
        "θ"
      ],
      "sympy_repr": "Eq(d*sin(θ), λ*(m + 1/2))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0083",
      "name": "Interference - Young's Double Slit (λLd)",
      "equation": "λ * L / d",
      "equation_hash": "9ae9f801a5ba3825",
      "branch": "Optics",
      "category": "Young's Double Slit",
      "difficulty": "beginner",
      "description": "Interference in Young's Double Slit",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d",
        "L",
        "lambda"
      ],
      "sympy_repr": "L*lambda/d",
      "cleaning_metadata": {
        "original_variables": [
          "d",
          "L",
          "lamda"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0084",
      "name": "Diffraction - Single Slit",
      "equation": "a * sin(θ) = m * λ",
      "equation_hash": "a9a30d2814e3bfaf",
      "branch": "Optics",
      "category": "Single Slit",
      "difficulty": "intermediate",
      "description": "Diffraction in Single Slit",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "λ",
        "a",
        "θ"
      ],
      "sympy_repr": "Eq(a*sin(θ), m*λ)"
    },
    {
      "id": "adv_0085",
      "name": "Diffraction - Single Slit (sin)",
      "equation": "sin(θ) = 1.22 * λ / D",
      "equation_hash": "17b0ec4384f81789",
      "branch": "Optics",
      "category": "Single Slit",
      "difficulty": "intermediate",
      "description": "Diffraction in Single Slit",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "λ",
        "θ",
        "D"
      ],
      "sympy_repr": "Eq(sin(θ), 1.22*λ/D)"
    },
    {
      "id": "adv_0086",
      "name": "Refractive Index - Optics",
      "equation": "c / v",
      "equation_hash": "cde9c65cfb98b20a",
      "branch": "Optics",
      "category": "Optics",
      "difficulty": "beginner",
      "description": "Refractive Index in Optics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "c",
        "v"
      ],
      "sympy_repr": "c*c/v",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_light",
          "v"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0087",
      "name": "Refractive Index - Optics (sin)",
      "equation": "sin(θ_1) / sin(θ_2)",
      "equation_hash": "426196060a9ccdce",
      "branch": "Optics",
      "category": "Optics",
      "difficulty": "intermediate",
      "description": "Refractive Index in Optics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "θ_2",
        "θ_1"
      ],
      "sympy_repr": "sin(θ_1)/sin(θ_2)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0088",
      "name": "Refractive Index - Optics (λλm)",
      "equation": "λ_0 / λ_medium",
      "equation_hash": "582463f2d8da6603",
      "branch": "Optics",
      "category": "Optics",
      "difficulty": "intermediate",
      "description": "Refractive Index in Optics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "lamda_me_chargedium",
        "lamda_0"
      ],
      "sympy_repr": "lamda_0/lamda_me_chargedium",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0162",
      "name": "Thin Lens Equation",
      "equation": "1/f = 1/dₒ + 1/dᵢ",
      "equation_hash": "c44e503defbd3d62",
      "branch": "Optics",
      "category": "Lenses",
      "difficulty": "intermediate",
      "description": "Relationship between focal length and object/image distances",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "f",
        "do",
        "di"
      ],
      "sympy_repr": "Eq(1/f, 1/do + 1/di)"
    },
    {
      "id": "bal_0164",
      "name": "Lensmaker's Equation",
      "equation": "1/f = (n-1)(1/R₁ - 1/R₂)",
      "equation_hash": "45c761b220419255",
      "branch": "Optics",
      "category": "Lenses",
      "difficulty": "intermediate",
      "description": "Focal length in terms of lens geometry",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "f",
        "n",
        "R_gas2",
        "R_gas1"
      ],
      "sympy_repr": "Eq(1/f, (-1/R_gas2 + 1/R_gas1)*(n - 1))"
    },
    {
      "id": "bal_0166",
      "name": "Mirror Magnification",
      "equation": "M = -dᵢ/dₒ",
      "equation_hash": "0e20c2335801cdf4",
      "branch": "Optics",
      "category": "Mirrors",
      "difficulty": "beginner",
      "description": "Magnification of spherical mirror",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "M",
        "do",
        "di"
      ],
      "sympy_repr": "Eq(M, -di/do)"
    },
    {
      "id": "adv_0092",
      "name": "Polarization - Malus Law",
      "equation": "I_0 * cos²(θ)",
      "equation_hash": "39a8a71fe32a9216",
      "branch": "Optics",
      "category": "Malus Law",
      "difficulty": "intermediate",
      "description": "Polarization in Malus Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "_lightos2",
        "c",
        "theta",
        "I_0"
      ],
      "sympy_repr": "I_0*_lightos2*c*theta",
      "cleaning_metadata": {
        "original_variables": [
          "_lightos2",
          "c",
          "th_planc_lightk_boltzmanne_chargeta",
          "I_0"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0093",
      "name": "Polarization - Malus Law (Ico)",
      "equation": "I_0 * (1 + cos(2θ)) / 2",
      "equation_hash": "b40dbb6aae2489c0",
      "branch": "Optics",
      "category": "Malus Law",
      "difficulty": "intermediate",
      "description": "Polarization in Malus Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "_lightos",
        "theta",
        "I_0"
      ],
      "sympy_repr": "I_0*(2*_lightos*c*theta + 1)/2",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_lightos",
          "th_planc_lightk_boltzmanne_chargeta",
          "I_0"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0094",
      "name": "Blackbody Radiation - Planck Distribution",
      "equation": "8*π*h*c / (λ^5 * (exp(h*c/(λ*k*T)) - 1))",
      "equation_hash": "4e35204073ea6f4e",
      "branch": "Statistical Mechanics",
      "category": "Planck Distribution",
      "difficulty": "advanced",
      "description": "Blackbody Radiation in Planck Distribution",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "h",
        "lambda",
        "_chargexp",
        "c",
        "k_boltzmann",
        "c",
        "T"
      ],
      "sympy_repr": "8*pi*c*c*h/(5*lambda*(-1 + _chargexp*c*c*e*h/(T*k_boltzmann*lambda)))",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "h_planc_lightk_boltzmann",
          "lamda",
          "_chargexp",
          "_light",
          "k_boltzmann",
          "c",
          "T"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h",
          "lamda": "lambda",
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0095",
      "name": "Blackbody Radiation - Planck Distribution (hfc)",
      "equation": "2*h*f³ / (c² * (exp(h*f/(k*T)) - 1))",
      "equation_hash": "af404f5ff32ede09",
      "branch": "Statistical Mechanics",
      "category": "Planck Distribution",
      "difficulty": "advanced",
      "description": "Blackbody Radiation in Planck Distribution",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "h",
        "_chargexp",
        "_light2",
        "f3",
        "f",
        "k_boltzmann",
        "c",
        "T"
      ],
      "sympy_repr": "2*f3*h/(_light2*c*(-1 + _chargexp*e*f*h/(T*k_boltzmann)))",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "h_planc_lightk_boltzmann",
          "_chargexp",
          "_light2",
          "f3",
          "f",
          "k_boltzmann",
          "c",
          "T"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0096",
      "name": "Blackbody Radiation - Planck Distribution (σT)",
      "equation": "σ * T^4",
      "equation_hash": "571b9c06da460d8e",
      "branch": "Statistical Mechanics",
      "category": "Planck Distribution",
      "difficulty": "beginner",
      "description": "Blackbody Radiation in Planck Distribution",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "sigma",
        "T"
      ],
      "sympy_repr": "4*T*sigma"
    },
    {
      "id": "adv_0097",
      "name": "Wien Displacement - Peak Wavelength",
      "equation": "b / T",
      "equation_hash": "dd2b64d48aabb5d9",
      "branch": "Quantum Mechanics",
      "category": "Peak Wavelength",
      "difficulty": "beginner",
      "description": "Wien Displacement in Peak Wavelength",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "b",
        "T_period"
      ],
      "sympy_repr": "b/T_period",
      "cleaning_metadata": {
        "original_variables": [
          "b",
          "T"
        ],
        "replacements": {
          "T": "T_period"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0098",
      "name": "Wien Displacement - Peak Wavelength (T)",
      "equation": "2.898*10^-3 / T",
      "equation_hash": "86990dd846252da0",
      "branch": "Quantum Mechanics",
      "category": "Peak Wavelength",
      "difficulty": "intermediate",
      "description": "Wien Displacement in Peak Wavelength",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "T_period"
      ],
      "sympy_repr": "0.002898/T_period",
      "cleaning_metadata": {
        "original_variables": [
          "T"
        ],
        "replacements": {
          "T": "T_period"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0099",
      "name": "Photoelectric Effect - Einstein Equation",
      "equation": "h*f - φ",
      "equation_hash": "affafb3f158cc4d2",
      "branch": "Electromagnetism",
      "category": "Einstein Equation",
      "difficulty": "beginner",
      "description": "Photoelectric Effect in Einstein Equation",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "phi",
        "f",
        "h"
      ],
      "sympy_repr": "f*h - phi",
      "cleaning_metadata": {
        "original_variables": [
          "ph_planc_lightk_boltzmanni",
          "f",
          "h_planc_lightk_boltzmann"
        ],
        "replacements": {
          "ph_planc_lightk_boltzmanni": "phi",
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0100",
      "name": "Photoelectric Effect - Einstein Equation (hcλ)",
      "equation": "h*c/λ - φ",
      "equation_hash": "4a7f9336216a572d",
      "branch": "Electromagnetism",
      "category": "Einstein Equation",
      "difficulty": "beginner",
      "description": "Photoelectric Effect in Einstein Equation",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "phi",
        "c",
        "h",
        "lambda",
        "c"
      ],
      "sympy_repr": "c*c*h/lambda - phi",
      "cleaning_metadata": {
        "original_variables": [
          "ph_planc_lightk_boltzmanni",
          "_light",
          "h_planc_lightk_boltzmann",
          "lamda",
          "c"
        ],
        "replacements": {
          "ph_planc_lightk_boltzmanni": "phi",
          "_light": "c",
          "h_planc_lightk_boltzmann": "h",
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0101",
      "name": "Photoelectric Effect - Einstein Equation (mvm)",
      "equation": "(1/2)*m*v_max²",
      "equation_hash": "b5701053d5d48566",
      "branch": "Electromagnetism",
      "category": "Einstein Equation",
      "difficulty": "intermediate",
      "description": "Photoelectric Effect in Einstein Equation",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v_max2",
        "m"
      ],
      "sympy_repr": "m*v_max2/2"
    },
    {
      "id": "adv_0102",
      "name": "Compton Scattering - Wavelength Shift",
      "equation": "λ' - λ = (h/(m_e*c)) * (1 - cos(θ))",
      "equation_hash": "4b324def0a20d10e",
      "branch": "Quantum Mechanics",
      "category": "Wavelength Shift",
      "difficulty": "advanced",
      "description": "Compton Scattering in Wavelength Shift",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m_e",
        "c",
        "h"
      ],
      "sympy_repr": "Eq(m_e, c)"
    },
    {
      "id": "adv_0103",
      "name": "Compton Scattering - Wavelength Shift (λCc)",
      "equation": "λ_C * (1 - cos(θ))",
      "equation_hash": "c9518499b4f41b0b",
      "branch": "Quantum Mechanics",
      "category": "Wavelength Shift",
      "difficulty": "intermediate",
      "description": "Compton Scattering in Wavelength Shift",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "_lightos",
        "theta",
        "lamda_C"
      ],
      "sympy_repr": "lamda_C*(-_lightos*c*theta + 1)",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_lightos",
          "th_planc_lightk_boltzmanne_chargeta",
          "lamda_C"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0104",
      "name": "Compton Scattering - Wavelength Shift (cos)",
      "equation": "2.426*10^-12 * (1 - cos(θ))",
      "equation_hash": "a4628156e1a2d245",
      "branch": "Quantum Mechanics",
      "category": "Wavelength Shift",
      "difficulty": "advanced",
      "description": "Compton Scattering in Wavelength Shift",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "_lightos",
        "theta"
      ],
      "sympy_repr": "-2.426e-12*_lightos*c*theta + 2.426e-12",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_lightos",
          "th_planc_lightk_boltzmanne_chargeta"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0105",
      "name": "Rydberg Formula - Hydrogen Spectrum",
      "equation": "R_H * (1/n_1² - 1/n_2²)",
      "equation_hash": "8d51e371ee9b933c",
      "branch": "Atomic and Nuclear Physics",
      "category": "Hydrogen Spectrum",
      "difficulty": "intermediate",
      "description": "Rydberg Formula in Hydrogen Spectrum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "n_22",
        "R_gas_H",
        "n_12"
      ],
      "sympy_repr": "R_gas_H*(-1/n_22 + 1/n_12)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0106",
      "name": "Rydberg Formula - Hydrogen Spectrum (nn)",
      "equation": "1.097*10^7 * (1/n_1² - 1/n_2²)",
      "equation_hash": "dd97f8a3b61020a3",
      "branch": "Atomic and Nuclear Physics",
      "category": "Hydrogen Spectrum",
      "difficulty": "advanced",
      "description": "Rydberg Formula in Hydrogen Spectrum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "n_22",
        "n_12"
      ],
      "sympy_repr": "-76.79/n_22 + 76.79/n_12",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0107",
      "name": "Schrödinger Equation - Time-dependent",
      "equation": "iℏ * ∂ψ/∂t = Ĥψ",
      "equation_hash": "7578f3b93a07a1a2",
      "branch": "Quantum Mechanics",
      "category": "Time-dependent",
      "difficulty": "intermediate",
      "description": "Schrödinger Equation in Time-dependent",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "diffpsi",
        "Ĥpsi",
        "difft",
        "ih_planc_lightk_boltzmannbar"
      ],
      "sympy_repr": "Eq(diffpsi*ih_planc_lightk_boltzmannbar/difft, Ĥpsi)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0108",
      "name": "Schrödinger Equation - Time-dependent (ℏmψ)",
      "equation": "-ℏ²/(2m) * ∇²ψ + V*ψ = E*ψ",
      "equation_hash": "a8f88e2771d30151",
      "branch": "Quantum Mechanics",
      "category": "Time-dependent",
      "difficulty": "advanced",
      "description": "Schrödinger Equation in Time-dependent",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "nabla2",
        "m",
        "h_planc_lightk_boltzmannbar2",
        "V",
        "psi"
      ],
      "sympy_repr": "Eq(V*psi - h_planc_lightk_boltzmannbar2*nabla2*psi/(2*m), E*psi)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0109",
      "name": "Particle in a Box - Infinite Square Well",
      "equation": "n² * π² * ℏ² / (2*m*L²)",
      "equation_hash": "75b5291a9a310b50",
      "branch": "Quantum Mechanics",
      "category": "Infinite Square Well",
      "difficulty": "intermediate",
      "description": "Particle in a Box in Infinite Square Well",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "pi2",
        "m",
        "h_planc_lightk_boltzmannbar2",
        "n2",
        "L2"
      ],
      "sympy_repr": "h_planc_lightk_boltzmannbar2*n2*pi2/(2*L2*m)"
    },
    {
      "id": "adv_0110",
      "name": "Particle in a Box - Infinite Square Well (sqr)",
      "equation": "sqrt(2/L) * sin(n*π*x/L)",
      "equation_hash": "35a3ce8402d74c26",
      "branch": "Quantum Mechanics",
      "category": "Infinite Square Well",
      "difficulty": "intermediate",
      "description": "Particle in a Box in Infinite Square Well",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "L",
        "π",
        "n",
        "x"
      ],
      "sympy_repr": "sqrt(2)*sqrt(1/L)*sin(n*x*π/L)"
    },
    {
      "id": "adv_0111",
      "name": "Harmonic Oscillator - Quantum",
      "equation": "ℏ*ω * (n + 1/2)",
      "equation_hash": "d7507eb24a1c3c41",
      "branch": "Quantum Mechanics",
      "category": "Quantum",
      "difficulty": "intermediate",
      "description": "Harmonic Oscillator in Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "hbar",
        "omega",
        "n"
      ],
      "sympy_repr": "hbar*omega*(n + 1/2)",
      "cleaning_metadata": {
        "original_variables": [
          "h_planc_lightk_boltzmannbar",
          "ome_chargega",
          "n"
        ],
        "replacements": {
          "h_planc_lightk_boltzmannbar": "hbar",
          "ome_chargega": "omega"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0112",
      "name": "Harmonic Oscillator - Quantum (sqr)",
      "equation": "sqrt(k/m) * ℏ * (n + 1/2)",
      "equation_hash": "449250312989f0b0",
      "branch": "Quantum Mechanics",
      "category": "Quantum",
      "difficulty": "advanced",
      "description": "Harmonic Oscillator in Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "n",
        "s",
        "k",
        "sqrt"
      ],
      "sympy_repr": "sqrt*s*t(k/m)**(n + 1/2)",
      "cleaning_metadata": {
        "original_variables": [
          "m",
          "n",
          "s",
          "k",
          "qr"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0113",
      "name": "Angular Momentum - Quantum",
      "equation": "ℏ * sqrt(l*(l+1))",
      "equation_hash": "abbdb11f7228bd25",
      "branch": "Quantum Mechanics",
      "category": "Quantum",
      "difficulty": "intermediate",
      "description": "Angular Momentum in Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "l",
        "ℏ"
      ],
      "sympy_repr": "ℏ*sqrt(l*(l + 1))"
    },
    {
      "id": "adv_0114",
      "name": "Angular Momentum - Quantum (ℏml)",
      "equation": "ℏ * m_l",
      "equation_hash": "61c678f0d612e1fc",
      "branch": "Quantum Mechanics",
      "category": "Quantum",
      "difficulty": "beginner",
      "description": "Angular Momentum in Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "hbar",
        "m_l"
      ],
      "sympy_repr": "hbar*m_l",
      "cleaning_metadata": {
        "original_variables": [
          "h_planc_lightk_boltzmannbar",
          "m_l"
        ],
        "replacements": {
          "h_planc_lightk_boltzmannbar": "hbar"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0115",
      "name": "Fluid Pressure - Hydrostatic (ρgh)",
      "equation": "ρ * g * h",
      "equation_hash": "9ae1d7e20b7a9ebf",
      "branch": "Thermodynamics",
      "category": "Hydrostatic",
      "difficulty": "beginner",
      "description": "Fluid Pressure in Hydrostatic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "g",
        "h",
        "rho"
      ],
      "sympy_repr": "g*h*rho",
      "cleaning_metadata": {
        "original_variables": [
          "g",
          "h_planc_lightk_boltzmann",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h",
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0116",
      "name": "Fluid Pressure - Hydrostatic (Pρg)",
      "equation": "P_0 + ρ * g * h",
      "equation_hash": "fa15a25d5f4c5f87",
      "branch": "Thermodynamics",
      "category": "Hydrostatic",
      "difficulty": "intermediate",
      "description": "Fluid Pressure in Hydrostatic",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "P_0",
        "h",
        "rho",
        "g"
      ],
      "sympy_repr": "P_0 + g*h*rho",
      "cleaning_metadata": {
        "original_variables": [
          "P_0",
          "h_planc_lightk_boltzmann",
          "rh_planc_lightk_boltzmanno",
          "g"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h",
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0118",
      "name": "Bernoulli Equation - Fluid Dynamics",
      "equation": "P + (1/2)*ρ*v² + ρ*g*h = constant",
      "equation_hash": "d223bade7d1d1e8f",
      "branch": "Fluid Mechanics",
      "category": "Fluid Dynamics",
      "difficulty": "advanced",
      "description": "Bernoulli Equation in Fluid Dynamics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v2",
        "h",
        "_lightonstant",
        "P",
        "c",
        "g",
        "rho"
      ],
      "sympy_repr": "Eq(P + g*h*rho + rho*v2/2, _lightonstant*c)",
      "cleaning_metadata": {
        "original_variables": [
          "v2",
          "h_planc_lightk_boltzmann",
          "_lightonstant",
          "P",
          "c",
          "g",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h",
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0119",
      "name": "Bernoulli Equation - Fluid Dynamics (Pρv)",
      "equation": "P_1 + (1/2)*ρ*v_1² = P_2 + (1/2)*ρ*v_2²",
      "equation_hash": "08a91117af937967",
      "branch": "Fluid Mechanics",
      "category": "Fluid Dynamics",
      "difficulty": "advanced",
      "description": "Bernoulli Equation in Fluid Dynamics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v_22",
        "P_2",
        "v_12",
        "P_1",
        "rho"
      ],
      "sympy_repr": "Eq(P_1 + rho*v_12/2, P_2 + rho*v_22/2)",
      "cleaning_metadata": {
        "original_variables": [
          "v_22",
          "P_2",
          "v_12",
          "P_1",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0120",
      "name": "Viscosity - Newton's Law",
      "equation": "F = η * A * (du/dy)",
      "equation_hash": "39da08422c349df0",
      "branch": "Fluid Mechanics",
      "category": "Newton's Law",
      "difficulty": "intermediate",
      "description": "Viscosity in Newton's Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "eta",
        "e",
        "F",
        "du",
        "A",
        "dy"
      ],
      "sympy_repr": "Eq(F, A*eta*du*e/dy)",
      "cleaning_metadata": {
        "original_variables": [
          "_chargeta",
          "e",
          "F",
          "du",
          "A",
          "dy"
        ],
        "replacements": {
          "_chargeta": "eta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0121",
      "name": "Viscosity - Newton's Law (τηd)",
      "equation": "τ = η * (dv/dy)",
      "equation_hash": "c619c380c99dd0fa",
      "branch": "Fluid Mechanics",
      "category": "Newton's Law",
      "difficulty": "intermediate",
      "description": "Viscosity in Newton's Law",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "eta",
        "e",
        "dv",
        "dy",
        "tau"
      ],
      "sympy_repr": "Eq(tau, eta*dv*e/dy)",
      "cleaning_metadata": {
        "original_variables": [
          "_chargeta",
          "e",
          "dv",
          "dy",
          "tau"
        ],
        "replacements": {
          "_chargeta": "eta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0122",
      "name": "Reynolds Number - Fluid Flow",
      "equation": "ρ * v * L / η",
      "equation_hash": "af796825f5a0602e",
      "branch": "Fluid Mechanics",
      "category": "Fluid Flow",
      "difficulty": "intermediate",
      "description": "Reynolds Number in Fluid Flow",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "eta",
        "L",
        "e",
        "v",
        "rho"
      ],
      "sympy_repr": "L*eta*rho*v/e",
      "cleaning_metadata": {
        "original_variables": [
          "_chargeta",
          "L",
          "e",
          "v",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "_chargeta": "eta",
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0123",
      "name": "Reynolds Number - Fluid Flow (vLν)",
      "equation": "v * L / ν",
      "equation_hash": "7b0539279592d1d4",
      "branch": "Fluid Mechanics",
      "category": "Fluid Flow",
      "difficulty": "beginner",
      "description": "Reynolds Number in Fluid Flow",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "nu",
        "L",
        "v"
      ],
      "sympy_repr": "L*v/nu"
    },
    {
      "id": "adv_0124",
      "name": "Sound Speed - Waves in Media",
      "equation": "sqrt(B / ρ)",
      "equation_hash": "e2bf9f2860608ba7",
      "branch": "Quantum Mechanics",
      "category": "Waves in Media",
      "difficulty": "intermediate",
      "description": "Sound Speed in Waves in Media",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "ρ"
      ],
      "sympy_repr": "sqrt(B/ρ)"
    },
    {
      "id": "adv_0125",
      "name": "Sound Speed - Waves in Media (sqr)",
      "equation": "sqrt(γ * R * T / M)",
      "equation_hash": "d5bb05863780497d",
      "branch": "Quantum Mechanics",
      "category": "Waves in Media",
      "difficulty": "intermediate",
      "description": "Sound Speed in Waves in Media",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "M",
        "R",
        "T_period",
        "γ"
      ],
      "sympy_repr": "sqrt(R*T_period*γ/M)",
      "cleaning_metadata": {
        "original_variables": [
          "M",
          "R",
          "T",
          "γ"
        ],
        "replacements": {
          "T": "T_period"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0126",
      "name": "Sound Speed - Waves in Media (v3)",
      "equation": "f * λ",
      "equation_hash": "57ded8310959787e",
      "branch": "Quantum Mechanics",
      "category": "Waves in Media",
      "difficulty": "beginner",
      "description": "Sound Speed in Waves in Media",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "f",
        "lambda"
      ],
      "sympy_repr": "f*lambda",
      "cleaning_metadata": {
        "original_variables": [
          "f",
          "lamda"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0129",
      "name": "Doppler Effect - Sound Waves",
      "equation": "f_0 * (v ± v_r) / (v ± v_s)",
      "equation_hash": "ea80883a5042485f",
      "branch": "Quantum Mechanics",
      "category": "Sound Waves",
      "difficulty": "advanced",
      "description": "Doppler Effect in Sound Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v",
        "v_s",
        "f_0",
        "v_r"
      ],
      "sympy_repr": "f_0*(v + v_r)/(v + v_s)"
    },
    {
      "id": "adv_0130",
      "name": "Doppler Effect - Sound Waves (fsq)",
      "equation": "f_0 * sqrt((v + v_r)/(v - v_s))",
      "equation_hash": "141634515cc9dc3b",
      "branch": "Quantum Mechanics",
      "category": "Sound Waves",
      "difficulty": "advanced",
      "description": "Doppler Effect in Sound Waves",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "sqrt",
        "s",
        "v",
        "v_s",
        "f_0",
        "v_r"
      ],
      "sympy_repr": "f_0*sqrt*s*t((v + v_r)/(v - v_s))",
      "cleaning_metadata": {
        "original_variables": [
          "qr",
          "s",
          "v",
          "v_s",
          "f_0",
          "v_r"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0131",
      "name": "Standing Waves - Resonance",
      "equation": "n * λ / 2",
      "equation_hash": "6354f926cc73df4c",
      "branch": "Quantum Mechanics",
      "category": "Resonance",
      "difficulty": "beginner",
      "description": "Standing Waves in Resonance",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "lambda",
        "n"
      ],
      "sympy_repr": "lambda*n/2",
      "cleaning_metadata": {
        "original_variables": [
          "lamda",
          "n"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0132",
      "name": "Standing Waves - Resonance (nλ)",
      "equation": "(2n-1) * λ / 4",
      "equation_hash": "71d3d0294916a90c",
      "branch": "Quantum Mechanics",
      "category": "Resonance",
      "difficulty": "intermediate",
      "description": "Standing Waves in Resonance",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "lambda",
        "n"
      ],
      "sympy_repr": "lambda*(2*n - 1)/4",
      "cleaning_metadata": {
        "original_variables": [
          "lamda",
          "n"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0133",
      "name": "Standing Waves - Resonance (nvL)",
      "equation": "n * v / (2*L)",
      "equation_hash": "c71682d216186d36",
      "branch": "Quantum Mechanics",
      "category": "Resonance",
      "difficulty": "intermediate",
      "description": "Standing Waves in Resonance",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v",
        "n",
        "L"
      ],
      "sympy_repr": "n*v/(2*L)"
    },
    {
      "id": "adv_0134",
      "name": "Crystal Lattice - Solid State",
      "equation": "2 * d * sin(θ) = n * λ",
      "equation_hash": "7e08764196db9631",
      "branch": "Condensed Matter Physics",
      "category": "Solid State",
      "difficulty": "intermediate",
      "description": "Crystal Lattice in Solid State",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d",
        "λ",
        "θ",
        "n"
      ],
      "sympy_repr": "Eq(2*d*sin(θ), n*λ)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0135",
      "name": "Crystal Lattice - Solid State (asq)",
      "equation": "a / sqrt(h² + k² + l²)",
      "equation_hash": "7f6fb710cd2a771b",
      "branch": "Condensed Matter Physics",
      "category": "Solid State",
      "difficulty": "intermediate",
      "description": "Crystal Lattice in Solid State",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "l",
        "s",
        "k",
        "h",
        "sqrt",
        "a"
      ],
      "sympy_repr": "a*sqrt*t(h + k + l)/s",
      "cleaning_metadata": {
        "original_variables": [
          "l",
          "s",
          "k",
          "h",
          "qr",
          "a"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0136",
      "name": "Band Gap - Semiconductors",
      "equation": "E_c - E_v",
      "equation_hash": "26962c43ee14a6ff",
      "branch": "Condensed Matter Physics",
      "category": "Semiconductors",
      "difficulty": "beginner",
      "description": "Band Gap in Semiconductors",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "E_v",
        "E_c_light"
      ],
      "sympy_repr": "E_c_light - E_v",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0137",
      "name": "Band Gap - Semiconductors (hcλ)",
      "equation": "h*c / λ_cutoff",
      "equation_hash": "06fba98e8e89e51d",
      "branch": "Condensed Matter Physics",
      "category": "Semiconductors",
      "difficulty": "intermediate",
      "description": "Band Gap in Semiconductors",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "c",
        "lamda_c_lightutoff",
        "h"
      ],
      "sympy_repr": "c*c*h/lamda_c_lightutoff",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_light",
          "lamda_c_lightutoff",
          "h_planc_lightk_boltzmann"
        ],
        "replacements": {
          "_light": "c",
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0138",
      "name": "Band Gap - Semiconductors (kTl)",
      "equation": "k*T * ln(N_c*N_v / n_i²)",
      "equation_hash": "1115071877808fdf",
      "branch": "Condensed Matter Physics",
      "category": "Semiconductors",
      "difficulty": "intermediate",
      "description": "Band Gap in Semiconductors",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "l",
        "n_i",
        "N_c",
        "k",
        "T",
        "N_v"
      ],
      "sympy_repr": "T*k*l*n(N_c*N_v/n_i)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0139",
      "name": "Hall Effect - Charge Carriers",
      "equation": "I*B / (n*q*t)",
      "equation_hash": "6cbaa720ef4a01ae",
      "branch": "Electromagnetism",
      "category": "Charge Carriers",
      "difficulty": "intermediate",
      "description": "Hall Effect in Charge Carriers",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "q_charge",
        "t",
        "n"
      ],
      "sympy_repr": "I*B/(n*q_charge*t)",
      "cleaning_metadata": {
        "original_variables": [
          "B",
          "q",
          "t",
          "n"
        ],
        "replacements": {
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0140",
      "name": "Hall Effect - Charge Carriers (RHI)",
      "equation": "R_H * I * B / t",
      "equation_hash": "d344bc53038f58b3",
      "branch": "Electromagnetism",
      "category": "Charge Carriers",
      "difficulty": "intermediate",
      "description": "Hall Effect in Charge Carriers",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "B",
        "t",
        "R_gas_H"
      ],
      "sympy_repr": "I*B*R_gas_H/t"
    },
    {
      "id": "adv_0141",
      "name": "Hall Effect - Charge Carriers (nq)",
      "equation": "1 / (n*q)",
      "equation_hash": "3fb9b96595304860",
      "branch": "Electromagnetism",
      "category": "Charge Carriers",
      "difficulty": "beginner",
      "description": "Hall Effect in Charge Carriers",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "q_charge",
        "n"
      ],
      "sympy_repr": "1/(n*q_charge)",
      "cleaning_metadata": {
        "original_variables": [
          "q",
          "n"
        ],
        "replacements": {
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0142",
      "name": "Superconductivity - Critical Temperature",
      "equation": "T_c ∝ ω_D * exp(-1/(N(0)*V))",
      "equation_hash": "bb512437d8dcb35e",
      "branch": "Thermodynamics",
      "category": "Critical Temperature",
      "difficulty": "advanced",
      "description": "Superconductivity in Critical Temperature",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "T_c_D"
      ],
      "sympy_repr": "T_c_D*e*xp(zoo)"
    },
    {
      "id": "adv_0143",
      "name": "Superconductivity - Critical Temperature (kTc)",
      "equation": "3.5 * k * T_c",
      "equation_hash": "8ec58fef646b8f45",
      "branch": "Thermodynamics",
      "category": "Critical Temperature",
      "difficulty": "intermediate",
      "description": "Superconductivity in Critical Temperature",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "T_c_light",
        "k_boltzmann"
      ],
      "sympy_repr": "3.5*T_c_light*k_boltzmann"
    },
    {
      "id": "adv_0144",
      "name": "Plasma Frequency - Plasma Physics",
      "equation": "sqrt(n*e² / (ε_0*m))",
      "equation_hash": "bd6ca1cc172dc2f4",
      "branch": "Electromagnetism",
      "category": "Plasma Physics",
      "difficulty": "intermediate",
      "description": "Plasma Frequency in Plasma Physics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "m",
        "_0",
        "n",
        "s",
        "sqrt"
      ],
      "sympy_repr": "sqrt*s*t(e*n/(_0*m))",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "m",
          "_0",
          "n",
          "s",
          "qr"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0145",
      "name": "Plasma Frequency - Plasma Physics (sqr)",
      "equation": "sqrt(4*π*n*e² / m)",
      "equation_hash": "3fffc48d49f80394",
      "branch": "Electromagnetism",
      "category": "Plasma Physics",
      "difficulty": "intermediate",
      "description": "Plasma Frequency in Plasma Physics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "m",
        "n",
        "s",
        "sqrt"
      ],
      "sympy_repr": "sqrt*s*t(4**n*e/m)",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "m",
          "n",
          "s",
          "qr"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0146",
      "name": "Debye Length - Plasma Shielding",
      "equation": "sqrt(ε_0*k*T / (n*e²))",
      "equation_hash": "55baa26d4ec07389",
      "branch": "Electromagnetism",
      "category": "Plasma Shielding",
      "difficulty": "intermediate",
      "description": "Debye Length in Plasma Shielding",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "_0",
        "n",
        "s",
        "k",
        "sqrt",
        "T"
      ],
      "sympy_repr": "sqrt*s*t(T*_0*k/(e*n))",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "_0",
          "n",
          "s",
          "k",
          "qr",
          "T"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0147",
      "name": "Debye Length - Plasma Shielding (sqr)",
      "equation": "sqrt(k*T / (4*π*n*e²))",
      "equation_hash": "23724af5ce023f15",
      "branch": "Electromagnetism",
      "category": "Plasma Shielding",
      "difficulty": "intermediate",
      "description": "Debye Length in Plasma Shielding",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "n",
        "s",
        "k",
        "sqrt",
        "T"
      ],
      "sympy_repr": "sqrt*s*t(T*k/(4**n*e))",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "n",
          "s",
          "k",
          "qr",
          "T"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0152",
      "name": "Hubble Law - Cosmology",
      "equation": "H_0 * d",
      "equation_hash": "31dd143cf8b2ad93",
      "branch": "Astrophysics",
      "category": "Cosmology",
      "difficulty": "beginner",
      "description": "Hubble Law in Cosmology",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "d",
        "H_0"
      ],
      "sympy_repr": "H_0*d",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0153",
      "name": "Hubble Law - Cosmology (v2)",
      "equation": "c * z",
      "equation_hash": "ee68f168981f82eb",
      "branch": "Astrophysics",
      "category": "Cosmology",
      "difficulty": "beginner",
      "description": "Hubble Law in Cosmology",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "c",
        "z"
      ],
      "sympy_repr": "c*c*z",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_light",
          "z"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0154",
      "name": "Luminosity Distance - Astrophysics",
      "equation": "sqrt(L / (4*π*F))",
      "equation_hash": "6f41a7742468ad02",
      "branch": "Astrophysics",
      "category": "Astrophysics",
      "difficulty": "intermediate",
      "description": "Luminosity Distance in Astrophysics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "L",
        "sqrt",
        "F",
        "s"
      ],
      "sympy_repr": "sqrt*s*t(L/4**F)",
      "cleaning_metadata": {
        "original_variables": [
          "L",
          "qr",
          "F",
          "s"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0155",
      "name": "Luminosity Distance - Astrophysics (zr)",
      "equation": "(1+z) * r",
      "equation_hash": "84856c516e477edc",
      "branch": "Astrophysics",
      "category": "Astrophysics",
      "difficulty": "beginner",
      "description": "Luminosity Distance in Astrophysics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "z",
        "r"
      ],
      "sympy_repr": "r*(z + 1)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0156",
      "name": "Stellar Luminosity - Main Sequence",
      "equation": "4*π*R² * σ * T_eff⁴",
      "equation_hash": "e7ee71a3a84861c0",
      "branch": "Astrophysics",
      "category": "Main Sequence",
      "difficulty": "intermediate",
      "description": "Stellar Luminosity in Main Sequence",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "sigma",
        "T_e_chargeff4",
        "R_gas2"
      ],
      "sympy_repr": "4*pi*R_gas2*T_e_chargeff4*sigma",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0157",
      "name": "Stellar Luminosity - Main Sequence (Lsu)",
      "equation": "L_sun * (M/M_sun)^3.5",
      "equation_hash": "a96123fa66e5cc17",
      "branch": "Astrophysics",
      "category": "Main Sequence",
      "difficulty": "intermediate",
      "description": "Stellar Luminosity in Main Sequence",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "M",
        "M_sun",
        "L_sun"
      ],
      "sympy_repr": "3.5*L_sun*M/M_sun",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0158",
      "name": "Chandrasekhar Limit - White Dwarf",
      "equation": "1.4 * M_sun",
      "equation_hash": "be2df2e060c16ce4",
      "branch": "Astrophysics",
      "category": "White Dwarf",
      "difficulty": "intermediate",
      "description": "Chandrasekhar Limit in White Dwarf",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "M_sun"
      ],
      "sympy_repr": "1.4*M_sun",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0159",
      "name": "Chandrasekhar Limit - White Dwarf (μeM)",
      "equation": "5.87 / (μ_e)² * M_sun",
      "equation_hash": "10ee63f419a085ec",
      "branch": "Astrophysics",
      "category": "White Dwarf",
      "difficulty": "intermediate",
      "description": "Chandrasekhar Limit in White Dwarf",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "mu_e_charge",
        "M_sun"
      ],
      "sympy_repr": "11.74*M_sun/mu_e_charge",
      "original_branch": "Modern Physics"
    },
    {
      "id": "adv_0160",
      "name": "Maxwell Distribution - Statistical Mechanics",
      "equation": "4*π * (m/(2*π*k*T))^(3/2) * v² * exp(-m*v²/(2*k*T))",
      "equation_hash": "2958b52d9cbec760",
      "branch": "Statistical Mechanics",
      "category": "Statistical Mechanics",
      "difficulty": "advanced",
      "description": "Maxwell Distribution in Statistical Mechanics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v2",
        "e",
        "k_B",
        "m",
        "_chargexp",
        "T"
      ],
      "sympy_repr": "-3*_chargexp*e*m**2*v2**2/(2*T**2*k_B**2)",
      "cleaning_metadata": {
        "original_variables": [
          "v2",
          "e",
          "k_boltzmann",
          "m",
          "_chargexp",
          "T"
        ],
        "replacements": {
          "k_boltzmann": "k_B"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0161",
      "name": "Maxwell Distribution - Statistical Mechanics (sqr)",
      "equation": "sqrt(8*k*T / (π*m))",
      "equation_hash": "716109693afd6eb0",
      "branch": "Statistical Mechanics",
      "category": "Statistical Mechanics",
      "difficulty": "intermediate",
      "description": "Maxwell Distribution in Statistical Mechanics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "T",
        "π",
        "k"
      ],
      "sympy_repr": "2*sqrt(2)*sqrt(T*k/(m*π))"
    },
    {
      "id": "adv_0162",
      "name": "Maxwell Distribution - Statistical Mechanics (sqr)",
      "equation": "sqrt(2*k*T / m)",
      "equation_hash": "82bc9874619680d9",
      "branch": "Statistical Mechanics",
      "category": "Statistical Mechanics",
      "difficulty": "intermediate",
      "description": "Maxwell Distribution in Statistical Mechanics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "s",
        "k",
        "sqrt",
        "T"
      ],
      "sympy_repr": "sqrt*s*t(2*T*k/m)",
      "cleaning_metadata": {
        "original_variables": [
          "m",
          "s",
          "k",
          "qr",
          "T"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0163",
      "name": "Boltzmann Distribution - Energy States",
      "equation": "N_0 * exp(-E / (k*T))",
      "equation_hash": "786919c5da4ac24c",
      "branch": "Statistical Mechanics",
      "category": "Energy States",
      "difficulty": "intermediate",
      "description": "Boltzmann Distribution in Energy States",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "k_boltzmann",
        "_chargexp",
        "N_0",
        "T"
      ],
      "sympy_repr": "-E*N_0*_chargexp*e/(T*k_boltzmann)"
    },
    {
      "id": "adv_0164",
      "name": "Boltzmann Distribution - Energy States (gex)",
      "equation": "g * exp(-E / (k*T)) / Z",
      "equation_hash": "d5f386b11b03d4d5",
      "branch": "Statistical Mechanics",
      "category": "Energy States",
      "difficulty": "intermediate",
      "description": "Boltzmann Distribution in Energy States",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "k_boltzmann",
        "Z",
        "_chargexp",
        "g",
        "T"
      ],
      "sympy_repr": "-E*_chargexp*e*g/(T*Z*k_boltzmann)"
    },
    {
      "id": "adv_0165",
      "name": "Fermi-Dirac Distribution - Fermions",
      "equation": "1 / (exp((E-μ)/(k*T)) + 1)",
      "equation_hash": "6e9b55a061368f26",
      "branch": "Statistical Mechanics",
      "category": "Fermions",
      "difficulty": "advanced",
      "description": "Fermi-Dirac Distribution in Fermions",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "k_boltzmann",
        "mu",
        "_chargexp",
        "T"
      ],
      "sympy_repr": "1/(1 + _chargexp*e*(E - mu)/(T*k_boltzmann))"
    },
    {
      "id": "adv_0166",
      "name": "Fermi-Dirac Distribution - Fermions (exp)",
      "equation": "1 / (exp((E-E_F)/(k*T)) + 1)",
      "equation_hash": "f8bd8b3b0e981529",
      "branch": "Statistical Mechanics",
      "category": "Fermions",
      "difficulty": "advanced",
      "description": "Fermi-Dirac Distribution in Fermions",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "k_boltzmann",
        "E_F",
        "_chargexp",
        "T"
      ],
      "sympy_repr": "1/(1 + _chargexp*e*(E - E_F)/(T*k_boltzmann))"
    },
    {
      "id": "adv_0167",
      "name": "Bose-Einstein Distribution - Bosons",
      "equation": "1 / (exp((E-μ)/(k*T)) - 1)",
      "equation_hash": "1351f634446ad053",
      "branch": "Statistical Mechanics",
      "category": "Bosons",
      "difficulty": "advanced",
      "description": "Bose-Einstein Distribution in Bosons",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "k_boltzmann",
        "mu",
        "_chargexp",
        "T"
      ],
      "sympy_repr": "1/(-1 + _chargexp*e*(E - mu)/(T*k_boltzmann))"
    },
    {
      "id": "adv_0168",
      "name": "Bose-Einstein Distribution - Bosons (exp)",
      "equation": "1 / (exp(E/(k*T)) - 1)",
      "equation_hash": "f94be7ab66b544a5",
      "branch": "Statistical Mechanics",
      "category": "Bosons",
      "difficulty": "intermediate",
      "description": "Bose-Einstein Distribution in Bosons",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "e",
        "k_boltzmann",
        "T",
        "_chargexp"
      ],
      "sympy_repr": "1/(-1 + E*_chargexp*e/(T*k_boltzmann))"
    },
    {
      "id": "adv_0169",
      "name": "Cross Section - Particle Physics",
      "equation": "λ_interaction / (n * L)",
      "equation_hash": "9a413fac659ada69",
      "branch": "Quantum Mechanics",
      "category": "Particle Physics",
      "difficulty": "intermediate",
      "description": "Cross Section in Particle Physics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "L",
        "lamda_inte_chargerac_lighttion",
        "n"
      ],
      "sympy_repr": "lamda_inte_chargerac_lighttion/(L*n)"
    },
    {
      "id": "adv_0170",
      "name": "Cross Section - Particle Physics (Mfl)",
      "equation": "|M|² / (flux * density)",
      "equation_hash": "5abb66b1f46c3a89",
      "branch": "Quantum Mechanics",
      "category": "Particle Physics",
      "difficulty": "intermediate",
      "description": "Cross Section in Particle Physics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "M2",
        "de_chargensity",
        "flux"
      ],
      "sympy_repr": "M2/(de_chargensity*flux)"
    },
    {
      "id": "adv_0171",
      "name": "Cross Section - Particle Physics (πr)",
      "equation": "π * r²",
      "equation_hash": "99212bd357346505",
      "branch": "Quantum Mechanics",
      "category": "Particle Physics",
      "difficulty": "beginner",
      "description": "Cross Section in Particle Physics",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "r2"
      ],
      "sympy_repr": "pi*r2"
    },
    {
      "id": "adv_0172",
      "name": "Relativistic Momentum - Special Relativity",
      "equation": "γ * m * v",
      "equation_hash": "ef58871774537815",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "beginner",
      "description": "Relativistic Momentum in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "v",
        "m",
        "γ"
      ],
      "sympy_repr": "m*v*γ"
    },
    {
      "id": "adv_0173",
      "name": "Relativistic Momentum - Special Relativity (mvs)",
      "equation": "m * v / sqrt(1 - v²/c²)",
      "equation_hash": "0fb3c379ce602277",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Relativistic Momentum in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "s",
        "c",
        "v",
        "sqrt"
      ],
      "sympy_repr": "m*sqrt*v*t(1 - v/c)/s",
      "cleaning_metadata": {
        "original_variables": [
          "m",
          "s",
          "c",
          "v",
          "qr"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0174",
      "name": "Relativistic Momentum - Special Relativity (Evc)",
      "equation": "E * v / c²",
      "equation_hash": "fc7c21a56493335f",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Relativistic Momentum in Special Relativity",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "_light2",
        "v",
        "c"
      ],
      "sympy_repr": "E*_light2*v/c"
    },
    {
      "id": "adv_0175",
      "name": "Four-Momentum - Relativistic Invariant",
      "equation": "sqrt(E² - (p*c)²) = m*c²",
      "equation_hash": "a85ede142dd31bcc",
      "branch": "Relativity",
      "category": "Relativistic Invariant",
      "difficulty": "intermediate",
      "description": "Four-Momentum in Relativistic Invariant",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "p",
        "s",
        "c",
        "sqrt"
      ],
      "sympy_repr": "Eq(sqrt*s*t(-c*p + E), c*m)",
      "cleaning_metadata": {
        "original_variables": [
          "m",
          "p",
          "s",
          "c",
          "qr"
        ],
        "replacements": {
          "qr": "sqrt"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0176",
      "name": "Four-Momentum - Relativistic Invariant (pμp)",
      "equation": "p_μ * p^μ = (m*c)²",
      "equation_hash": "db36c9565b340d85",
      "branch": "Relativity",
      "category": "Relativistic Invariant",
      "difficulty": "intermediate",
      "description": "Four-Momentum in Relativistic Invariant",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "c",
        "mu",
        "m",
        "p_mu",
        "c",
        "p"
      ],
      "sympy_repr": "Eq(mu*p*p_mu, 2*c*c*m)",
      "cleaning_metadata": {
        "original_variables": [
          "_light",
          "mu",
          "m",
          "p_mu",
          "c",
          "p"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0177",
      "name": "Klein-Gordon Equation - Relativistic Quantum",
      "equation": "(∂²/∂t² - c²*∇² + (m*c²/ℏ)²)*ψ = 0",
      "equation_hash": "cb12038e79bfc811",
      "branch": "Quantum Mechanics",
      "category": "Relativistic Quantum",
      "difficulty": "advanced",
      "description": "Klein-Gordon Equation in Relativistic Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "nabla2",
        "m",
        "diff2",
        "_light2",
        "hbar",
        "c",
        "difft2",
        "psi"
      ],
      "sympy_repr": "Eq(psi*(-_light2*c*nabla2 + 2*_light2*c*m/hbar + diff2/difft2), 0)",
      "cleaning_metadata": {
        "original_variables": [
          "nabla2",
          "m",
          "diff2",
          "_light2",
          "h_planc_lightk_boltzmannbar",
          "c",
          "difft2",
          "psi"
        ],
        "replacements": {
          "h_planc_lightk_boltzmannbar": "hbar"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0178",
      "name": "Klein-Gordon Equation - Relativistic Quantum (tcm)",
      "equation": "((∂/∂t)² - c²*∇² + (m*c/ℏ)²)*φ = 0",
      "equation_hash": "42d6cfeeb5c87287",
      "branch": "Quantum Mechanics",
      "category": "Relativistic Quantum",
      "difficulty": "advanced",
      "description": "Klein-Gordon Equation in Relativistic Quantum",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "∂",
        "m",
        "∇",
        "ℏ",
        "c",
        "∂t",
        "φ"
      ],
      "sympy_repr": "Eq(φ*(c**2*m**2/ℏ**2 - c**2*∇**2 + ∂**2/∂t**2), 0)"
    },
    {
      "id": "adv_0179",
      "name": "Dirac Equation - Relativistic Fermions",
      "equation": "(iγ^μ*∂_μ - m*c/ℏ)*ψ = 0",
      "equation_hash": "dd96382346b85081",
      "branch": "Relativity",
      "category": "Relativistic Fermions",
      "difficulty": "intermediate",
      "description": "Dirac Equation in Relativistic Fermions",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "m",
        "diff_mu",
        "igamma",
        "hbar",
        "c",
        "mu",
        "c",
        "psi"
      ],
      "sympy_repr": "Eq(psi*(-c*c*m/hbar + diff_mu*igamma*mu), 0)",
      "cleaning_metadata": {
        "original_variables": [
          "m",
          "diff_mu",
          "igamma",
          "h_planc_lightk_boltzmannbar",
          "_light",
          "mu",
          "c",
          "psi"
        ],
        "replacements": {
          "h_planc_lightk_boltzmannbar": "hbar",
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "adv_0180",
      "name": "Dirac Equation - Relativistic Fermions (γμp)",
      "equation": "γ^μ*p_μ*ψ = m*c*ψ",
      "equation_hash": "03296dce6b2510fe",
      "branch": "Relativity",
      "category": "Relativistic Fermions",
      "difficulty": "intermediate",
      "description": "Dirac Equation in Relativistic Fermions",
      "source_file": "150.json",
      "parse_success": true,
      "variables": [
        "p_μ",
        "m",
        "γ",
        "c",
        "ψ",
        "μ"
      ],
      "sympy_repr": "Eq(p_μ*γ**μ*ψ, c*m*ψ)"
    },
    {
      "id": "bal_0000",
      "name": "Ohm's Law",
      "equation": "V = I × R",
      "equation_hash": "348fdce084f52409",
      "branch": "Electromagnetism",
      "category": "Basic Circuits",
      "difficulty": "beginner",
      "description": "Voltage equals current times resistance",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_elec",
        "V"
      ],
      "sympy_repr": "Eq(V, I*R_elec)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "V"
        ],
        "replacements": {
          "R_gas": "R_elec"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0001",
      "name": "Electrical Power",
      "equation": "P = V × I",
      "equation_hash": "b4f0751e490502c4",
      "branch": "Electromagnetism",
      "category": "Basic Circuits",
      "difficulty": "beginner",
      "description": "Power equals voltage times current",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "V_voltage",
        "P_power"
      ],
      "sympy_repr": "Eq(P_power, I*V_voltage)",
      "cleaning_metadata": {
        "original_variables": [
          "V",
          "P"
        ],
        "replacements": {
          "V": "V_voltage",
          "P": "P_power"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0002",
      "name": "Electrical Power (Resistance)",
      "equation": "P = I² × R",
      "equation_hash": "6bcb32ef2befc366",
      "branch": "Electromagnetism",
      "category": "Basic Circuits",
      "difficulty": "beginner",
      "description": "Power equals current squared times resistance",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_elec",
        "I2",
        "P_power"
      ],
      "sympy_repr": "Eq(P_power, I2*R_elec)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "I2",
          "P"
        ],
        "replacements": {
          "R_gas": "R_elec",
          "P": "P_power"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0003",
      "name": "Electrical Power (Voltage)",
      "equation": "P = V²/R",
      "equation_hash": "b4067ac0f488dc36",
      "branch": "Electromagnetism",
      "category": "Basic Circuits",
      "difficulty": "beginner",
      "description": "Power equals voltage squared divided by resistance",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_elec",
        "V2",
        "P_power"
      ],
      "sympy_repr": "Eq(P_power, V2/R_elec)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "V2",
          "P"
        ],
        "replacements": {
          "R_gas": "R_elec",
          "P": "P_power"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0004",
      "name": "Kirchhoff's Current Law",
      "equation": "Σ I_in = Σ I_out",
      "equation_hash": "886b55cab6299b56",
      "branch": "Electromagnetism",
      "category": "Circuit Analysis",
      "difficulty": "intermediate",
      "description": "Sum of currents entering equals sum leaving a node",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "SigmaI_out",
        "SigmaI_in"
      ],
      "sympy_repr": "Eq(SigmaI_in, SigmaI_out)"
    },
    {
      "id": "bal_0005",
      "name": "Kirchhoff's Voltage Law",
      "equation": "Σ V = 0",
      "equation_hash": "1f720e2feadbf1c2",
      "branch": "Electromagnetism",
      "category": "Circuit Analysis",
      "difficulty": "intermediate",
      "description": "Sum of voltages around a closed loop equals zero",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "SigmaV"
      ],
      "sympy_repr": "Eq(SigmaV, 0)"
    },
    {
      "id": "bal_0008",
      "name": "Coulomb's Law",
      "equation": "F = k × q₁ × q₂ / r²",
      "equation_hash": "3017a3eb7108e346",
      "branch": "Electromagnetism",
      "category": "Electrostatics",
      "difficulty": "intermediate",
      "description": "Force between two point charges",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "q1",
        "k_e",
        "F",
        "r2",
        "q2"
      ],
      "sympy_repr": "Eq(F, k_e*q1*q2/r2)",
      "cleaning_metadata": {
        "original_variables": [
          "q1",
          "k_boltzmann",
          "F",
          "r2",
          "q2"
        ],
        "replacements": {
          "k_boltzmann": "k_e"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0009",
      "name": "Electric Field (Point Charge)",
      "equation": "E = k × q / r²",
      "equation_hash": "6325c7c89a8d4378",
      "branch": "Electromagnetism",
      "category": "Electrostatics",
      "difficulty": "intermediate",
      "description": "Electric field from a point charge",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "k_e",
        "r2",
        "q_charge"
      ],
      "sympy_repr": "Eq(E, k_e*q_charge/r2)",
      "cleaning_metadata": {
        "original_variables": [
          "k_boltzmann",
          "r2",
          "q"
        ],
        "replacements": {
          "k_boltzmann": "k_e",
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0010",
      "name": "Electric Potential (Point Charge)",
      "equation": "V = k × q / r",
      "equation_hash": "04a84e6d8365e8f2",
      "branch": "Electromagnetism",
      "category": "Electrostatics",
      "difficulty": "intermediate",
      "description": "Electric potential from a point charge",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "V_voltage",
        "r",
        "q_charge",
        "k_e"
      ],
      "sympy_repr": "Eq(V_voltage, k_e*q_charge/r)",
      "cleaning_metadata": {
        "original_variables": [
          "V",
          "r",
          "q",
          "k_boltzmann"
        ],
        "replacements": {
          "V": "V_voltage",
          "q": "q_charge",
          "k_boltzmann": "k_e"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0011",
      "name": "Electric Force on Charge",
      "equation": "F = q × E",
      "equation_hash": "8849e49aa5e48bb0",
      "branch": "Electromagnetism",
      "category": "Electrostatics",
      "difficulty": "beginner",
      "description": "Force on charge in electric field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "q_charge",
        "F"
      ],
      "sympy_repr": "Eq(F, E*q_charge)",
      "cleaning_metadata": {
        "original_variables": [
          "q",
          "F"
        ],
        "replacements": {
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0012",
      "name": "Capacitance",
      "equation": "C = Q / V",
      "equation_hash": "dad5101c1f7da8e6",
      "branch": "Electromagnetism",
      "category": "Capacitors",
      "difficulty": "beginner",
      "description": "Capacitance equals charge divided by voltage",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Q",
        "C",
        "V"
      ],
      "sympy_repr": "Eq(Q, C)"
    },
    {
      "id": "bal_0013",
      "name": "Parallel Plate Capacitor",
      "equation": "C = ε₀ × A / d",
      "equation_hash": "8b44754f4350302c",
      "branch": "Electromagnetism",
      "category": "Capacitors",
      "difficulty": "intermediate",
      "description": "Capacitance of parallel plate capacitor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "d",
        "_chargepsilon0",
        "C",
        "A"
      ],
      "sympy_repr": "Eq(C, A*_chargepsilon0*e/d)"
    },
    {
      "id": "bal_0014",
      "name": "Energy in Capacitor",
      "equation": "U = 1/2 × C × V²",
      "equation_hash": "548ab20a69757a9a",
      "branch": "Electromagnetism",
      "category": "Capacitors",
      "difficulty": "intermediate",
      "description": "Energy stored in a capacitor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "C",
        "U",
        "V2"
      ],
      "sympy_repr": "Eq(U, C*V2/2)"
    },
    {
      "id": "bal_0017",
      "name": "Current Definition",
      "equation": "I = Q / t",
      "equation_hash": "13051c40cab6c40d",
      "branch": "Electromagnetism",
      "category": "Current and Magnetism",
      "difficulty": "beginner",
      "description": "Current is charge per unit time",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "I",
        "Q",
        "t"
      ],
      "sympy_repr": "Eq(I, Q)"
    },
    {
      "id": "bal_0018",
      "name": "Current Density",
      "equation": "J = I / A",
      "equation_hash": "0af515ae91cc37c0",
      "branch": "Electromagnetism",
      "category": "Current and Magnetism",
      "difficulty": "intermediate",
      "description": "Current density is current per unit area",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "A",
        "J"
      ],
      "sympy_repr": "Eq(J, I/A)"
    },
    {
      "id": "bal_0019",
      "name": "Magnetic Force on Moving Charge",
      "equation": "F = q × v × B × sin(θ)",
      "equation_hash": "7ac710fe2515285e",
      "branch": "Electromagnetism",
      "category": "Current and Magnetism",
      "difficulty": "intermediate",
      "description": "Lorentz force on moving charge",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "si",
        "q_charge",
        "F",
        "vB"
      ],
      "sympy_repr": "Eq(F, q_charge*si*vB*n())",
      "cleaning_metadata": {
        "original_variables": [
          "si",
          "q",
          "F",
          "vB"
        ],
        "replacements": {
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0020",
      "name": "Magnetic Force on Current",
      "equation": "F = I × L × B × sin(θ)",
      "equation_hash": "224c8bc67312415c",
      "branch": "Electromagnetism",
      "category": "Current and Magnetism",
      "difficulty": "intermediate",
      "description": "Force on current-carrying conductor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "LB",
        "si",
        "F"
      ],
      "sympy_repr": "Eq(F, I*LB*si*n())"
    },
    {
      "id": "bal_0021",
      "name": "Biot-Savart Law (Straight Wire)",
      "equation": "B = μ₀ × I / (2π × r)",
      "equation_hash": "2f7699dfd281ca57",
      "branch": "Electromagnetism",
      "category": "Current and Magnetism",
      "difficulty": "advanced",
      "description": "Magnetic field around straight current-carrying wire",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "B",
        "mu0",
        "r"
      ],
      "sympy_repr": "Eq(B, I*mu0/(2*pi*r))"
    },
    {
      "id": "bal_0022",
      "name": "Solenoid Magnetic Field",
      "equation": "B = μ₀ × n × I",
      "equation_hash": "d29100c1a7f32098",
      "branch": "Electromagnetism",
      "category": "Current and Magnetism",
      "difficulty": "intermediate",
      "description": "Magnetic field inside a solenoid",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "B",
        "mu0",
        "n"
      ],
      "sympy_repr": "Eq(B, I*mu0*n)"
    },
    {
      "id": "bal_0023",
      "name": "Faraday's Law",
      "equation": "ε = -dΦ_B / dt",
      "equation_hash": "49be4dec56cce197",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Induction",
      "difficulty": "advanced",
      "description": "Induced EMF equals negative rate of change of magnetic flux",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "epsilon",
        "dPh_planc_lightk_boltzmanni_B",
        "dt"
      ],
      "sympy_repr": "Eq(epsilon*e, -dPh_planc_lightk_boltzmanni_B/dt)",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "_chargepsilon",
          "dPh_planc_lightk_boltzmanni_B",
          "dt"
        ],
        "replacements": {
          "_chargepsilon": "epsilon"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0024",
      "name": "Magnetic Flux",
      "equation": "Φ_B = B × A × cos(θ)",
      "equation_hash": "42545fac3f57fb49",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Induction",
      "difficulty": "intermediate",
      "description": "Magnetic flux through a surface",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Ph_planc_lightk_boltzmanni_B",
        "theta",
        "B",
        "A",
        "c",
        "_lightos"
      ],
      "sympy_repr": "Eq(Ph_planc_lightk_boltzmanni_B, A*B*_lightos*c*theta)",
      "cleaning_metadata": {
        "original_variables": [
          "Ph_planc_lightk_boltzmanni_B",
          "th_planc_lightk_boltzmanne_chargeta",
          "B",
          "A",
          "c",
          "_lightos"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0025",
      "name": "Motional EMF",
      "equation": "ε = B × L × v",
      "equation_hash": "3e168e98644a646d",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Induction",
      "difficulty": "intermediate",
      "description": "EMF induced in moving conductor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "v",
        "L",
        "B",
        "epsilon"
      ],
      "sympy_repr": "Eq(epsilon*e, B*L*v)",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "v",
          "L",
          "B",
          "_chargepsilon"
        ],
        "replacements": {
          "_chargepsilon": "epsilon"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0026",
      "name": "Self-Inductance",
      "equation": "L = Φ_B / I",
      "equation_hash": "19f94dbfbab5b3d8",
      "branch": "Electromagnetism",
      "category": "Inductance",
      "difficulty": "intermediate",
      "description": "Self-inductance defined by flux per current",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "Ph_planc_lightk_boltzmanni_B"
      ],
      "sympy_repr": "Eq(L, -I*Ph_planc_lightk_boltzmanni_B)"
    },
    {
      "id": "bal_0027",
      "name": "Inductance EMF",
      "equation": "ε = -L × dI/dt",
      "equation_hash": "567dbdc180b4f523",
      "branch": "Electromagnetism",
      "category": "Inductance",
      "difficulty": "intermediate",
      "description": "EMF due to changing current in inductor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "L",
        "dt",
        "dI",
        "epsilon"
      ],
      "sympy_repr": "Eq(epsilon*e, -L*dI/dt)",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "L",
          "dt",
          "dI",
          "_chargepsilon"
        ],
        "replacements": {
          "_chargepsilon": "epsilon"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0028",
      "name": "Energy in Inductor",
      "equation": "U = 1/2 × L × I²",
      "equation_hash": "1dad3de05069ad41",
      "branch": "Electromagnetism",
      "category": "Inductance",
      "difficulty": "intermediate",
      "description": "Energy stored in an inductor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "U",
        "I2",
        "L"
      ],
      "sympy_repr": "Eq(U, I2*L/2)"
    },
    {
      "id": "bal_0029",
      "name": "RC Time Constant",
      "equation": "τ = R × C",
      "equation_hash": "4ff8fd14dc4ef376",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "intermediate",
      "description": "Time constant for RC circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "C",
        "tau",
        "R_elec"
      ],
      "sympy_repr": "Eq(tau, C*R_elec)",
      "cleaning_metadata": {
        "original_variables": [
          "C",
          "tau",
          "R_gas"
        ],
        "replacements": {
          "R_gas": "R_elec"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0030",
      "name": "RL Time Constant",
      "equation": "τ = L / R",
      "equation_hash": "00b2a5c19b2ac49f",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "intermediate",
      "description": "Time constant for RL circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_elec",
        "L",
        "tau"
      ],
      "sympy_repr": "Eq(tau, L/R_elec)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas",
          "L",
          "tau"
        ],
        "replacements": {
          "R_gas": "R_elec"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0031",
      "name": "Capacitive Reactance",
      "equation": "X_C = 1 / (ω × C)",
      "equation_hash": "4417b311c5a98da3",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "intermediate",
      "description": "Reactance of capacitor in AC circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "C",
        "X_C",
        "omega"
      ],
      "sympy_repr": "Eq(X_C, 1/(C*omega))",
      "cleaning_metadata": {
        "original_variables": [
          "C",
          "X_C",
          "ome_chargega"
        ],
        "replacements": {
          "ome_chargega": "omega"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0032",
      "name": "Inductive Reactance",
      "equation": "X_L = ω × L",
      "equation_hash": "63463f4c352e7c84",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "intermediate",
      "description": "Reactance of inductor in AC circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "X_L",
        "L",
        "omega"
      ],
      "sympy_repr": "Eq(X_L, L*omega)",
      "cleaning_metadata": {
        "original_variables": [
          "X_L",
          "L",
          "ome_chargega"
        ],
        "replacements": {
          "ome_chargega": "omega"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0033",
      "name": "AC Impedance",
      "equation": "Z = √(R² + (X_L - X_C)²)",
      "equation_hash": "5437959548ccf0f6",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "advanced",
      "description": "Impedance of RLC circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "X_L",
        "X_C",
        "R",
        "Z"
      ],
      "sympy_repr": "Eq(Z, R - X_C + X_L)"
    },
    {
      "id": "bal_0034",
      "name": "Resonant Frequency",
      "equation": "f₀ = 1 / (2π × √(L × C))",
      "equation_hash": "27a24cd5a8a37975",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "intermediate",
      "description": "Resonant frequency of LC circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "f₀",
        "C"
      ],
      "sympy_repr": "Eq(L, f₀)"
    },
    {
      "id": "bal_0037",
      "name": "AC Power",
      "equation": "P = V_rms × I_rms × cos(φ)",
      "equation_hash": "5275fa33d631f56f",
      "branch": "Electromagnetism",
      "category": "AC Circuits",
      "difficulty": "intermediate",
      "description": "Average power in AC circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "phi",
        "V_rms",
        "I_rms",
        "c",
        "_lightos",
        "P_power"
      ],
      "sympy_repr": "Eq(P_power, I_rms*V_rms*_lightos*c*phi)",
      "cleaning_metadata": {
        "original_variables": [
          "ph_planc_lightk_boltzmanni",
          "V_rms",
          "I_rms",
          "c",
          "_lightos",
          "P"
        ],
        "replacements": {
          "ph_planc_lightk_boltzmanni": "phi",
          "P": "P_power"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0038",
      "name": "Transformer Voltage Ratio",
      "equation": "V₂/V₁ = N₂/N₁",
      "equation_hash": "9f474ba40bc6dfc0",
      "branch": "Electromagnetism",
      "category": "Transformers",
      "difficulty": "intermediate",
      "description": "Voltage transformation ratio",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "N2",
        "N1",
        "V1",
        "V2"
      ],
      "sympy_repr": "Eq(V2/V1, N2/N1)"
    },
    {
      "id": "bal_0039",
      "name": "Transformer Current Ratio",
      "equation": "I₂/I₁ = N₁/N₂",
      "equation_hash": "e1c24cbca58b0432",
      "branch": "Electromagnetism",
      "category": "Transformers",
      "difficulty": "intermediate",
      "description": "Current transformation ratio",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "I2",
        "N2",
        "N1",
        "I1"
      ],
      "sympy_repr": "Eq(I2/I1, N1/N2)"
    },
    {
      "id": "bal_0040",
      "name": "Maxwell's First Equation (Gauss)",
      "equation": "∇ · E = ρ/ε₀",
      "equation_hash": "7bd72e8cb8f7bd43",
      "branch": "Electromagnetism",
      "category": "Maxwell Equations",
      "difficulty": "advanced",
      "description": "Gauss's law for electricity",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "_chargepsilon0",
        "e",
        "nabla",
        "rho"
      ],
      "sympy_repr": "Eq(E*nabla, _chargepsilon0*rho/e)",
      "cleaning_metadata": {
        "original_variables": [
          "_chargepsilon0",
          "e",
          "nabla",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0041",
      "name": "Maxwell's Second Equation (No Magnetic Monopole)",
      "equation": "∇ · B = 0",
      "equation_hash": "4753e9ce32c90be5",
      "branch": "Electromagnetism",
      "category": "Maxwell Equations",
      "difficulty": "advanced",
      "description": "Gauss's law for magnetism",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "B",
        "nabla"
      ],
      "sympy_repr": "Eq(B*nabla, 0)"
    },
    {
      "id": "bal_0042",
      "name": "Maxwell's Third Equation (Faraday)",
      "equation": "∇ × E = -∂B/∂t",
      "equation_hash": "6c215707205764d0",
      "branch": "Electromagnetism",
      "category": "Maxwell Equations",
      "difficulty": "advanced",
      "description": "Faraday's law in differential form",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "nabla",
        "diffB",
        "difft"
      ],
      "sympy_repr": "Eq(E*nabla, -diffB/difft)"
    },
    {
      "id": "bal_0043",
      "name": "Maxwell's Fourth Equation (Ampère-Maxwell)",
      "equation": "∇ × B = μ₀J + μ₀ε₀∂E/∂t",
      "equation_hash": "87b3fb5be809acfd",
      "branch": "Electromagnetism",
      "category": "Maxwell Equations",
      "difficulty": "advanced",
      "description": "Ampère's law with Maxwell's correction",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "J",
        "B",
        "mu0",
        "difft",
        "diffE",
        "_chargepsilon0",
        "nabla"
      ],
      "sympy_repr": "Eq(B*nabla, J*mu0 + _chargepsilon0*diffE*e*mu0/difft)"
    },
    {
      "id": "bal_0044",
      "name": "Wave Equation for E-field",
      "equation": "∇²E = μ₀ε₀∂²E/∂t²",
      "equation_hash": "fc49f4bd82ca4fea",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Waves",
      "difficulty": "advanced",
      "description": "Wave equation for electric field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "nabla2",
        "e",
        "diff2",
        "_chargepsilon0",
        "mu0",
        "difft2"
      ],
      "sympy_repr": "Eq(E*nabla2, E*_chargepsilon0*diff2*e*mu0/difft2)"
    },
    {
      "id": "bal_0045",
      "name": "Wave Equation for B-field",
      "equation": "∇²B = μ₀ε₀∂²B/∂t²",
      "equation_hash": "82c17c0efdf08093",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Waves",
      "difficulty": "advanced",
      "description": "Wave equation for magnetic field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "nabla2",
        "e",
        "diff2",
        "B",
        "mu0",
        "_chargepsilon0",
        "difft2"
      ],
      "sympy_repr": "Eq(B*nabla2, B*_chargepsilon0*diff2*e*mu0/difft2)"
    },
    {
      "id": "bal_0046",
      "name": "Speed of Light",
      "equation": "c = 1/√(μ₀ε₀)",
      "equation_hash": "850a8024c9b92aaa",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Waves",
      "difficulty": "intermediate",
      "description": "Speed of light from electromagnetic constants",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "μ₀ε₀"
      ],
      "sympy_repr": "Eq(c, 1/√(μ₀ε₀))"
    },
    {
      "id": "bal_0047",
      "name": "Electromagnetic Wave Relation",
      "equation": "E = c × B",
      "equation_hash": "e14616ca25ce1b63",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Waves",
      "difficulty": "intermediate",
      "description": "Relation between E and B in EM wave",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "B",
        "c"
      ],
      "sympy_repr": "Eq(E, B*c*c)",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "B",
          "_light"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0048",
      "name": "Poynting Vector",
      "equation": "S = (1/μ₀) × E × B",
      "equation_hash": "047c8845b134cfd4",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Waves",
      "difficulty": "advanced",
      "description": "Energy flux density of electromagnetic wave",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "S",
        "E",
        "B"
      ],
      "sympy_repr": "Eq(S, E)"
    },
    {
      "id": "bal_0049",
      "name": "Electromagnetic Energy Density",
      "equation": "u = 1/2(ε₀E² + B²/μ₀)",
      "equation_hash": "cf88e4b77a407784",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Waves",
      "difficulty": "advanced",
      "description": "Energy density of electromagnetic field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "mu0",
        "e",
        "_chargepsilon0",
        "B2",
        "u",
        "E2"
      ],
      "sympy_repr": "Eq(u, B2/(2*mu0) + E2*_chargepsilon0*e/2)"
    },
    {
      "id": "bal_0050",
      "name": "Radiation Pressure",
      "equation": "p = I/c",
      "equation_hash": "21f36482270f8ccb",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Waves",
      "difficulty": "intermediate",
      "description": "Pressure exerted by electromagnetic radiation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "c",
        "p"
      ],
      "sympy_repr": "Eq(p, I*c/c)",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_light",
          "p"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0051",
      "name": "Dipole Moment",
      "equation": "p = q × d",
      "equation_hash": "dfde63c6b64db0f9",
      "branch": "Electromagnetism",
      "category": "Electric Dipoles",
      "difficulty": "beginner",
      "description": "Electric dipole moment",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "d",
        "q_charge",
        "p"
      ],
      "sympy_repr": "Eq(p, d*q_charge)",
      "cleaning_metadata": {
        "original_variables": [
          "d",
          "q",
          "p"
        ],
        "replacements": {
          "q": "q_charge"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0052",
      "name": "Dipole Field (Axial)",
      "equation": "E = (1/4πε₀) × (2p/r³)",
      "equation_hash": "89b1b641f990e5da",
      "branch": "Electromagnetism",
      "category": "Electric Dipoles",
      "difficulty": "advanced",
      "description": "Electric field along dipole axis",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "r3",
        "e_chargepsilon0",
        "p"
      ],
      "sympy_repr": "Eq(E, pi*e_chargepsilon0*p/(2*r3))"
    },
    {
      "id": "bal_0053",
      "name": "Dipole Field (Equatorial)",
      "equation": "E = (1/4πε₀) × (p/r³)",
      "equation_hash": "e7b6c7b519ddf9a8",
      "branch": "Electromagnetism",
      "category": "Electric Dipoles",
      "difficulty": "advanced",
      "description": "Electric field in equatorial plane",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "r3",
        "e_chargepsilon0",
        "p"
      ],
      "sympy_repr": "Eq(E, pi*e_chargepsilon0*p/(4*r3))"
    },
    {
      "id": "bal_0054",
      "name": "Dipole Potential Energy",
      "equation": "U = -p · E",
      "equation_hash": "abe9422c8fa047c4",
      "branch": "Electromagnetism",
      "category": "Electric Dipoles",
      "difficulty": "intermediate",
      "description": "Potential energy of dipole in external field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "U",
        "p"
      ],
      "sympy_repr": "Eq(U, -E*p)"
    },
    {
      "id": "bal_0055",
      "name": "Magnetic Dipole Moment",
      "equation": "μ = I × A",
      "equation_hash": "ddbdc7be534a867c",
      "branch": "Electromagnetism",
      "category": "Magnetic Dipoles",
      "difficulty": "intermediate",
      "description": "Magnetic dipole moment of current loop",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "mu",
        "A"
      ],
      "sympy_repr": "Eq(mu, I*A)"
    },
    {
      "id": "bal_0056",
      "name": "Magnetic Dipole Energy",
      "equation": "U = -μ · B",
      "equation_hash": "278dd0a15ed575f0",
      "branch": "Electromagnetism",
      "category": "Magnetic Dipoles",
      "difficulty": "intermediate",
      "description": "Energy of magnetic dipole in field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "U",
        "mu",
        "B"
      ],
      "sympy_repr": "Eq(U, -B*mu)"
    },
    {
      "id": "bal_0057",
      "name": "Torque on Magnetic Dipole",
      "equation": "τ = μ × B",
      "equation_hash": "07203467a5206953",
      "branch": "Electromagnetism",
      "category": "Magnetic Dipoles",
      "difficulty": "intermediate",
      "description": "Torque on magnetic dipole",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "B",
        "mu",
        "tau"
      ],
      "sympy_repr": "Eq(tau, B*mu)"
    },
    {
      "id": "bal_0058",
      "name": "Hall Effect",
      "equation": "V_H = (I × B) / (n × q × t)",
      "equation_hash": "42998d932b18f00d",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Effects",
      "difficulty": "advanced",
      "description": "Hall voltage in conductor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "t",
        "n",
        "B",
        "V_H",
        "q"
      ],
      "sympy_repr": "Eq(V_H, I*B/(n*q*t))"
    },
    {
      "id": "bal_0059",
      "name": "Skin Depth",
      "equation": "δ = √(2/(ωμσ))",
      "equation_hash": "ad340de21a1a479e",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Effects",
      "difficulty": "advanced",
      "description": "Penetration depth of electromagnetic wave in conductor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "δ",
        "ωμσ"
      ],
      "sympy_repr": "Eq(δ, √(2/ωμσ))"
    },
    {
      "id": "bal_0060",
      "name": "Displacement Current",
      "equation": "I_D = ε₀ × dΦ_E/dt",
      "equation_hash": "718d23b56aa3b486",
      "branch": "Electromagnetism",
      "category": "Advanced Electromagnetic Theory",
      "difficulty": "advanced",
      "description": "Maxwell's displacement current",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "I_D",
        "e",
        "dPh_planc_lightk_boltzmanni_E",
        "dt",
        "_chargepsilon0"
      ],
      "sympy_repr": "Eq(I_D, _chargepsilon0*dPh_planc_lightk_boltzmanni_E*e/dt)"
    },
    {
      "id": "bal_0061",
      "name": "Cyclotron Frequency",
      "equation": "f_c = qB/(2πm)",
      "equation_hash": "f0f7067ff703f0a2",
      "branch": "Electromagnetism",
      "category": "Charged Particle Motion",
      "difficulty": "intermediate",
      "description": "Frequency of circular motion in magnetic field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m",
        "f_c_light",
        "qB"
      ],
      "sympy_repr": "Eq(f_c_light, qB/(2*pi*m))"
    },
    {
      "id": "bal_0062",
      "name": "Larmor Radius",
      "equation": "r_L = mv/(qB)",
      "equation_hash": "8f2b4b81da55394b",
      "branch": "Electromagnetism",
      "category": "Charged Particle Motion",
      "difficulty": "intermediate",
      "description": "Radius of charged particle spiral in magnetic field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "mv",
        "r_L",
        "qB"
      ],
      "sympy_repr": "Eq(r_L, mv/qB)"
    },
    {
      "id": "bal_0063",
      "name": "Debye Length",
      "equation": "λ_D = √(ε₀kT/(nq²))",
      "equation_hash": "c97465b137b8e685",
      "branch": "Electromagnetism",
      "category": "Plasma Physics",
      "difficulty": "advanced",
      "description": "Characteristic screening length in plasma",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "n",
        "k",
        "_D",
        "q",
        "T"
      ],
      "sympy_repr": "Eq(_D, T*k/(n*q))"
    },
    {
      "id": "bal_0064",
      "name": "Plasma Frequency",
      "equation": "ω_p = √(nq²/(ε₀m))",
      "equation_hash": "451901fc778989c7",
      "branch": "Electromagnetism",
      "category": "Plasma Physics",
      "difficulty": "advanced",
      "description": "Natural oscillation frequency of plasma",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "q",
        "m",
        "_p",
        "n"
      ],
      "sympy_repr": "Eq(_p, n*q/m)"
    },
    {
      "id": "bal_0065",
      "name": "Dielectric Constant",
      "equation": "κ = C/C₀",
      "equation_hash": "abdc35775ed46f9c",
      "branch": "Electromagnetism",
      "category": "Dielectrics",
      "difficulty": "intermediate",
      "description": "Dielectric constant as capacitance ratio",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "C",
        "k_boltzmannappa",
        "C0"
      ],
      "sympy_repr": "Eq(k_boltzmannappa, C/C0)"
    },
    {
      "id": "bal_0066",
      "name": "Electric Susceptibility",
      "equation": "χ_e = κ - 1",
      "equation_hash": "cb917102098b74d6",
      "branch": "Electromagnetism",
      "category": "Dielectrics",
      "difficulty": "intermediate",
      "description": "Electric susceptibility of material",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "k_boltzmannappa",
        "_lighth_planc_lightk_boltzmanni_e_charge"
      ],
      "sympy_repr": "Eq(_lighth_planc_lightk_boltzmanni_e_charge*c, k_boltzmannappa - 1)"
    },
    {
      "id": "bal_0067",
      "name": "Gauss's Law (Dielectric)",
      "equation": "∇ · D = ρ_f",
      "equation_hash": "5481d915577ea963",
      "branch": "Electromagnetism",
      "category": "Dielectrics",
      "difficulty": "advanced",
      "description": "Gauss's law with displacement field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "rh_planc_lightk_boltzmanno_f",
        "nabla",
        "D"
      ],
      "sympy_repr": "Eq(D*nabla, rh_planc_lightk_boltzmanno_f)"
    },
    {
      "id": "bal_0068",
      "name": "Electric Displacement",
      "equation": "D = ε₀E + P",
      "equation_hash": "30e04614eba87fb9",
      "branch": "Electromagnetism",
      "category": "Dielectrics",
      "difficulty": "advanced",
      "description": "Electric displacement field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "_chargepsilon0",
        "e",
        "P",
        "D"
      ],
      "sympy_repr": "Eq(D, P + E*_chargepsilon0*e)"
    },
    {
      "id": "bal_0069",
      "name": "Polarization",
      "equation": "P = ε₀χ_eE",
      "equation_hash": "5b67511481cfb0b7",
      "branch": "Electromagnetism",
      "category": "Dielectrics",
      "difficulty": "intermediate",
      "description": "Electric polarization in linear dielectric",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "_chargepsilon0",
        "c",
        "_lighth_planc_lightk_boltzmanni_e_chargeE",
        "P"
      ],
      "sympy_repr": "Eq(P, _chargepsilon0*_lighth_planc_lightk_boltzmanni_e_chargeE*c*e)"
    },
    {
      "id": "bal_0070",
      "name": "Magnetic Permeability",
      "equation": "μ_r = B/(μ₀H)",
      "equation_hash": "a2864ec33d6f6634",
      "branch": "Electromagnetism",
      "category": "Magnetic Materials",
      "difficulty": "intermediate",
      "description": "Relative magnetic permeability",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "B",
        "mu_r",
        "mu0",
        "H"
      ],
      "sympy_repr": "Eq(mu_r, B/(H*mu0))"
    },
    {
      "id": "bal_0071",
      "name": "Magnetic Susceptibility",
      "equation": "χ_m = μ_r - 1",
      "equation_hash": "99a8ff2b0612d7eb",
      "branch": "Electromagnetism",
      "category": "Magnetic Materials",
      "difficulty": "intermediate",
      "description": "Magnetic susceptibility",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "mu_r",
        "_lighth_planc_lightk_boltzmanni_m"
      ],
      "sympy_repr": "Eq(_lighth_planc_lightk_boltzmanni_m*c, mu_r - 1)"
    },
    {
      "id": "bal_0072",
      "name": "Magnetization",
      "equation": "M = χ_mH",
      "equation_hash": "02556c7a971ce65c",
      "branch": "Electromagnetism",
      "category": "Magnetic Materials",
      "difficulty": "intermediate",
      "description": "Magnetization in linear magnetic material",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "M",
        "_lighth_planc_lightk_boltzmanni_mH"
      ],
      "sympy_repr": "Eq(M, _lighth_planc_lightk_boltzmanni_mH*c)"
    },
    {
      "id": "bal_0073",
      "name": "Magnetic Field Relation",
      "equation": "B = μ₀(H + M)",
      "equation_hash": "04bf57faeefea752",
      "branch": "Electromagnetism",
      "category": "Magnetic Materials",
      "difficulty": "advanced",
      "description": "Relation between B, H, and M",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "B",
        "M",
        "H",
        "mu0"
      ],
      "sympy_repr": "Eq(B, mu0*(H + M))"
    },
    {
      "id": "bal_0074",
      "name": "Curie Law",
      "equation": "χ_m = C/T",
      "equation_hash": "d5177de3e9ccf664",
      "branch": "Electromagnetism",
      "category": "Magnetic Materials",
      "difficulty": "intermediate",
      "description": "Temperature dependence of paramagnetic susceptibility",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "_lighth_planc_lightk_boltzmanni_m",
        "T",
        "C"
      ],
      "sympy_repr": "Eq(_lighth_planc_lightk_boltzmanni_m*c, C/T)"
    },
    {
      "id": "bal_0075",
      "name": "Lorentz Force (Complete)",
      "equation": "F = q(E + v × B)",
      "equation_hash": "55026b4aefed5c57",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Force",
      "difficulty": "intermediate",
      "description": "Complete electromagnetic force on charge",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "B",
        "q",
        "F",
        "v"
      ],
      "sympy_repr": "Eq(F, q*(B*v + E))"
    },
    {
      "id": "bal_0076",
      "name": "Ampère's Force Law",
      "equation": "dF = I₁dl₁ × (μ₀I₂/4π) ∫(dl₂ × r̂/r²)",
      "equation_hash": "6939e35fdfb01420",
      "branch": "Electromagnetism",
      "category": "Current Interactions",
      "difficulty": "advanced",
      "description": "Force between current elements",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "I₁dl₁",
        "dl₂",
        "r"
      ],
      "sympy_repr": "Eq(I₁dl₁, dl₂)"
    },
    {
      "id": "bal_0077",
      "name": "Force Between Parallel Wires",
      "equation": "F/L = μ₀I₁I₂/(2πd)",
      "equation_hash": "d3371552f956fd83",
      "branch": "Electromagnetism",
      "category": "Current Interactions",
      "difficulty": "intermediate",
      "description": "Force per unit length between parallel current-carrying wires",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "I2",
        "F",
        "I1",
        "d",
        "mu0"
      ],
      "sympy_repr": "Eq(F/L, I1*I2*mu0/(2*pi*d))"
    },
    {
      "id": "bal_0078",
      "name": "Mutual Inductance",
      "equation": "M₁₂ = Φ₁₂/I₂",
      "equation_hash": "801e0d2a91dd8d7d",
      "branch": "Electromagnetism",
      "category": "Inductance",
      "difficulty": "intermediate",
      "description": "Mutual inductance between two circuits",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Ph_planc_lightk_boltzmanni12",
        "I2",
        "M12"
      ],
      "sympy_repr": "Eq(M12, Ph_planc_lightk_boltzmanni12/I2)"
    },
    {
      "id": "bal_0079",
      "name": "Neumann Formula",
      "equation": "M = (μ₀/4π) ∮∮ (dl₁ · dl₂)/r₁₂",
      "equation_hash": "ff8a38d5ccb92910",
      "branch": "Electromagnetism",
      "category": "Inductance",
      "difficulty": "advanced",
      "description": "Mutual inductance calculation formula",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "r₁₂",
        "dl₁",
        "dl₂"
      ],
      "sympy_repr": "Eq(r₁₂, dl₁)"
    },
    {
      "id": "bal_0080",
      "name": "Solenoid Self-Inductance",
      "equation": "L = μ₀n²Al",
      "equation_hash": "fe79720c02fb4b4a",
      "branch": "Electromagnetism",
      "category": "Inductance",
      "difficulty": "intermediate",
      "description": "Self-inductance of solenoid",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "mu0",
        "Al",
        "n2"
      ],
      "sympy_repr": "Eq(L, Al*mu0*n2)"
    },
    {
      "id": "bal_0081",
      "name": "Toroidal Inductor",
      "equation": "L = μ₀N²A/(2πr)",
      "equation_hash": "a33faab4488d33f1",
      "branch": "Electromagnetism",
      "category": "Inductance",
      "difficulty": "intermediate",
      "description": "Inductance of toroidal coil",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "N2",
        "A",
        "mu0",
        "r"
      ],
      "sympy_repr": "Eq(L, A*N2*mu0/(2*pi*r))"
    },
    {
      "id": "bal_0082",
      "name": "Lenz's Law Direction",
      "equation": "ε = -dΦ/dt",
      "equation_hash": "6f1038a92be7a49d",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Induction",
      "difficulty": "intermediate",
      "description": "Direction of induced EMF opposes flux change",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "dPh_planc_lightk_boltzmanni",
        "e",
        "epsilon",
        "dt"
      ],
      "sympy_repr": "Eq(epsilon*e, -dPh_planc_lightk_boltzmanni/dt)",
      "cleaning_metadata": {
        "original_variables": [
          "dPh_planc_lightk_boltzmanni",
          "e",
          "_chargepsilon",
          "dt"
        ],
        "replacements": {
          "_chargepsilon": "epsilon"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0083",
      "name": "Eddy Current Loss",
      "equation": "P = σV(dB/dt)²",
      "equation_hash": "030580d00c2c67a4",
      "branch": "Electromagnetism",
      "category": "Electromagnetic Induction",
      "difficulty": "advanced",
      "description": "Power loss due to eddy currents",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "dB",
        "sigmaV",
        "dt",
        "P"
      ],
      "sympy_repr": "Eq(P, 2*dB*sigmaV/dt)"
    },
    {
      "id": "bal_0084",
      "name": "Hysteresis Loss",
      "equation": "P = ηfB_max^n",
      "equation_hash": "bb610a88946093d8",
      "branch": "Electromagnetism",
      "category": "Magnetic Materials",
      "difficulty": "advanced",
      "description": "Power loss in magnetic hysteresis",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "_chargetafB_max",
        "n",
        "P"
      ],
      "sympy_repr": "Eq(P, _chargetafB_max*e*n)"
    },
    {
      "id": "bal_0085",
      "name": "Transmission Line Impedance",
      "equation": "Z₀ = √(L/C)",
      "equation_hash": "9c09d256b4ae33fd",
      "branch": "Electromagnetism",
      "category": "Transmission Lines",
      "difficulty": "intermediate",
      "description": "Characteristic impedance of transmission line",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "C",
        "L",
        "Z"
      ],
      "sympy_repr": "Eq(Z, L/C)"
    },
    {
      "id": "bal_0087",
      "name": "Reflection Coefficient",
      "equation": "Γ = (Z_L - Z₀)/(Z_L + Z₀)",
      "equation_hash": "c22b6e8ade2d7789",
      "branch": "Electromagnetism",
      "category": "Transmission Lines",
      "difficulty": "advanced",
      "description": "Voltage reflection coefficient at load",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "_gravamma",
        "G",
        "Z0",
        "Z_L"
      ],
      "sympy_repr": "Eq(G*_gravamma, (-Z0 + Z_L)/(Z0 + Z_L))"
    },
    {
      "id": "bal_0088",
      "name": "VSWR",
      "equation": "VSWR = (1 + |Γ|)/(1 - |Γ|)",
      "equation_hash": "42df59d8d6bad181",
      "branch": "Electromagnetism",
      "category": "Transmission Lines",
      "difficulty": "advanced",
      "description": "Voltage standing wave ratio",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "_gravamma",
        "G",
        "VSWR_gas"
      ],
      "sympy_repr": "Eq(VSWR_gas, (G*_gravamma + 1)/(-G*_gravamma + 1))"
    },
    {
      "id": "bal_0089",
      "name": "Antenna Radiation Resistance",
      "equation": "R_r = 2P_rad/I²",
      "equation_hash": "6f74e96fb143ad27",
      "branch": "Electromagnetism",
      "category": "Antennas",
      "difficulty": "advanced",
      "description": "Radiation resistance of antenna",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "P_rad",
        "I2",
        "R_gas_r"
      ],
      "sympy_repr": "Eq(R_gas_r, 2*P_rad/I2)"
    },
    {
      "id": "bal_0090",
      "name": "Dipole Antenna Resistance",
      "equation": "R_r = 73Ω",
      "equation_hash": "5e6a5430314dc0ea",
      "branch": "Electromagnetism",
      "category": "Antennas",
      "difficulty": "intermediate",
      "description": "Radiation resistance of half-wave dipole",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Ome_chargega",
        "R_gas_r"
      ],
      "sympy_repr": "Eq(R_gas_r, 73*Ome_chargega)"
    },
    {
      "id": "bal_0091",
      "name": "Antenna Directivity",
      "equation": "D = 4π × U_max/P_rad",
      "equation_hash": "ebd6cee946eb1927",
      "branch": "Electromagnetism",
      "category": "Antennas",
      "difficulty": "advanced",
      "description": "Directivity of antenna",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "U_max",
        "P_rad",
        "D"
      ],
      "sympy_repr": "Eq(D, 4*pi*U_max/P_rad)"
    },
    {
      "id": "bal_0092",
      "name": "Friis Transmission Equation",
      "equation": "P_r/P_t = G_tG_r(λ/4πR)²",
      "equation_hash": "4b76f85e33ccc923",
      "branch": "Electromagnetism",
      "category": "Antennas",
      "difficulty": "advanced",
      "description": "Power transmission between antennas",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "G",
        "lambda",
        "P_r",
        "_grav_tG_grav_r",
        "R_gas",
        "P_t"
      ],
      "sympy_repr": "Eq(P_r/P_t, pi*G*R_gas*_grav_tG_grav_r*lambda/2)",
      "cleaning_metadata": {
        "original_variables": [
          "G",
          "lamda",
          "P_r",
          "_grav_tG_grav_r",
          "R_gas",
          "P_t"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0093",
      "name": "Effective Aperture",
      "equation": "A_e = Gλ²/(4π)",
      "equation_hash": "0544baa463ef5ef4",
      "branch": "Electromagnetism",
      "category": "Antennas",
      "difficulty": "intermediate",
      "description": "Effective aperture of antenna",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "_gravlamda2",
        "G",
        "A_e_charge"
      ],
      "sympy_repr": "Eq(A_e_charge, G*_gravlamda2/(4*pi))"
    },
    {
      "id": "bal_0094",
      "name": "Far Field Distance",
      "equation": "R_ff = 2D²/λ",
      "equation_hash": "3ce1efc59354644e",
      "branch": "Electromagnetism",
      "category": "Antennas",
      "difficulty": "intermediate",
      "description": "Far field distance for antenna",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_gas_ff",
        "lambda",
        "D2"
      ],
      "sympy_repr": "Eq(R_gas_ff, 2*D2/lambda)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas_ff",
          "lamda",
          "D2"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0095",
      "name": "Waveguide Cutoff Frequency",
      "equation": "f_c = c/(2√(εᵣ)) × √((m/a)² + (n/b)²)",
      "equation_hash": "a89d0324b37f5a5c",
      "branch": "Electromagnetism",
      "category": "Waveguides",
      "difficulty": "advanced",
      "description": "Cutoff frequency for rectangular waveguide",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m",
        "n",
        "c"
      ],
      "sympy_repr": "Eq(m, n)"
    },
    {
      "id": "bal_0096",
      "name": "Waveguide Phase Velocity",
      "equation": "v_p = c/√(1 - (f_c/f)²)",
      "equation_hash": "269ff8e547ce13ad",
      "branch": "Electromagnetism",
      "category": "Waveguides",
      "difficulty": "advanced",
      "description": "Phase velocity in waveguide",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "f",
        "v_p",
        "f_c"
      ],
      "sympy_repr": "Eq(v_p, c/(1 - f_c/f))"
    },
    {
      "id": "bal_0097",
      "name": "Waveguide Group Velocity",
      "equation": "v_g = c × √(1 - (f_c/f)²)",
      "equation_hash": "323e59f10731e953",
      "branch": "Electromagnetism",
      "category": "Waveguides",
      "difficulty": "advanced",
      "description": "Group velocity in waveguide",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "f_c",
        "f",
        "v_g"
      ],
      "sympy_repr": "Eq(v_g, c(1 - f_c/f))"
    },
    {
      "id": "bal_0098",
      "name": "Quality Factor",
      "equation": "Q = ωU/P",
      "equation_hash": "9015c727f0c65102",
      "branch": "Electromagnetism",
      "category": "Resonators",
      "difficulty": "intermediate",
      "description": "Quality factor of resonator",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Q",
        "U",
        "P"
      ],
      "sympy_repr": "Eq(Q, U)"
    },
    {
      "id": "bal_0099",
      "name": "Bandwidth",
      "equation": "BW = f₀/Q",
      "equation_hash": "1dae09ebde96334e",
      "branch": "Electromagnetism",
      "category": "Resonators",
      "difficulty": "intermediate",
      "description": "Bandwidth of resonant circuit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Q",
        "BW",
        "f₀"
      ],
      "sympy_repr": "Eq(Q, BW)"
    },
    {
      "id": "bal_0100",
      "name": "First Law of Thermodynamics",
      "equation": "dU = δQ - δW",
      "equation_hash": "a48805d7726e0862",
      "branch": "Thermodynamics",
      "category": "Fundamental Laws",
      "difficulty": "intermediate",
      "description": "Change in internal energy equals heat added minus work done",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "de_chargeltaW",
        "de_chargeltaQ",
        "dU"
      ],
      "sympy_repr": "Eq(dU, de_chargeltaQ - de_chargeltaW)"
    },
    {
      "id": "bal_0101",
      "name": "Second Law of Thermodynamics (Entropy)",
      "equation": "dS ≥ δQ/T",
      "equation_hash": "522748524ad01035",
      "branch": "Thermodynamics",
      "category": "Fundamental Laws",
      "difficulty": "intermediate",
      "description": "Entropy change is greater than or equal to heat transfer divided by temperature",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "dS"
      ],
      "sympy_repr": "dS"
    },
    {
      "id": "bal_0102",
      "name": "Third Law of Thermodynamics",
      "equation": "S(T→0) = 0",
      "equation_hash": "364ea5ee21f896fd",
      "branch": "Thermodynamics",
      "category": "Fundamental Laws",
      "difficulty": "intermediate",
      "description": "Entropy approaches zero as temperature approaches absolute zero",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "T0"
      ],
      "sympy_repr": "Eq(T0, 0)"
    },
    {
      "id": "bal_0103",
      "name": "Ideal Gas Law",
      "equation": "PV = nRT",
      "equation_hash": "c6729537ea7d170d",
      "branch": "Thermodynamics",
      "category": "Gas Laws",
      "difficulty": "beginner",
      "description": "Equation of state for ideal gas",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "nR_gasT",
        "PV"
      ],
      "sympy_repr": "Eq(PV, nR_gasT)"
    },
    {
      "id": "bal_0104",
      "name": "Boyle's Law",
      "equation": "P₁V₁ = P₂V₂",
      "equation_hash": "e233034231e12fb7",
      "branch": "Thermodynamics",
      "category": "Gas Laws",
      "difficulty": "beginner",
      "description": "Pressure and volume are inversely proportional at constant temperature",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "V2",
        "P1",
        "P2",
        "V1"
      ],
      "sympy_repr": "Eq(P1*V1, P2*V2)"
    },
    {
      "id": "bal_0105",
      "name": "Charles's Law",
      "equation": "V₁/T₁ = V₂/T₂",
      "equation_hash": "1b51652c0e2950f3",
      "branch": "Thermodynamics",
      "category": "Gas Laws",
      "difficulty": "beginner",
      "description": "Volume and temperature are directly proportional at constant pressure",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "V2",
        "T2",
        "T1",
        "V1"
      ],
      "sympy_repr": "Eq(V1/T1, V2/T2)"
    },
    {
      "id": "bal_0106",
      "name": "Gay-Lussac's Law",
      "equation": "P₁/T₁ = P₂/T₂",
      "equation_hash": "0ca24e7f86e39743",
      "branch": "Thermodynamics",
      "category": "Gas Laws",
      "difficulty": "beginner",
      "description": "Pressure and temperature are directly proportional at constant volume",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "P2",
        "T2",
        "P1",
        "T1"
      ],
      "sympy_repr": "Eq(P1/T1, P2/T2)"
    },
    {
      "id": "bal_0107",
      "name": "Combined Gas Law",
      "equation": "P₁V₁/T₁ = P₂V₂/T₂",
      "equation_hash": "37f40bb4bbfcf00d",
      "branch": "Thermodynamics",
      "category": "Gas Laws",
      "difficulty": "intermediate",
      "description": "Combined form of gas laws",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "P1",
        "P2",
        "V1",
        "V2",
        "T2",
        "T1"
      ],
      "sympy_repr": "Eq(P1*V1/T1, P2*V2/T2)"
    },
    {
      "id": "bal_0108",
      "name": "Avogadro's Law",
      "equation": "V₁/n₁ = V₂/n₂",
      "equation_hash": "597fed8442d01cca",
      "branch": "Thermodynamics",
      "category": "Gas Laws",
      "difficulty": "beginner",
      "description": "Volume is proportional to amount of gas",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "V2",
        "n1",
        "V1",
        "n2"
      ],
      "sympy_repr": "Eq(V1/n1, V2/n2)"
    },
    {
      "id": "bal_0109",
      "name": "Van der Waals Equation",
      "equation": "(P + a/V²)(V - b) = RT",
      "equation_hash": "16c4eb5ffe7988e6",
      "branch": "Thermodynamics",
      "category": "Real Gas Laws",
      "difficulty": "advanced",
      "description": "Equation of state for real gases",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_gasT",
        "V2",
        "V_volume",
        "b",
        "a",
        "P_pressure"
      ],
      "sympy_repr": "Eq((P_pressure + a/V2)*(V_volume - b), R_gasT)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gasT",
          "V2",
          "V",
          "b",
          "a",
          "P"
        ],
        "replacements": {
          "V": "V_volume",
          "P": "P_pressure"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0110",
      "name": "Heat Capacity at Constant Volume",
      "equation": "C_V = (∂U/∂T)_V",
      "equation_hash": "2bca6b621be8dbcc",
      "branch": "Thermodynamics",
      "category": "Heat Capacity",
      "difficulty": "intermediate",
      "description": "Heat capacity at constant volume",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "diffU",
        "diffT",
        "_V",
        "C_V"
      ],
      "sympy_repr": "Eq(C_V, _V*diffU/diffT)"
    },
    {
      "id": "bal_0111",
      "name": "Heat Capacity at Constant Pressure",
      "equation": "C_P = (∂H/∂T)_P",
      "equation_hash": "8136e2df9551445c",
      "branch": "Thermodynamics",
      "category": "Heat Capacity",
      "difficulty": "intermediate",
      "description": "Heat capacity at constant pressure",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "diffT",
        "diffH",
        "_P",
        "C_P"
      ],
      "sympy_repr": "Eq(C_P, _P*diffH/diffT)"
    },
    {
      "id": "bal_0112",
      "name": "Mayer's Relation",
      "equation": "C_P - C_V = R",
      "equation_hash": "b84404574ddff57f",
      "branch": "Thermodynamics",
      "category": "Heat Capacity",
      "difficulty": "intermediate",
      "description": "Relation between heat capacities for ideal gas",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "C_V",
        "R_gas",
        "C_P"
      ],
      "sympy_repr": "Eq(C_P - C_V, R_gas)"
    },
    {
      "id": "bal_0113",
      "name": "Adiabatic Index",
      "equation": "γ = C_P/C_V",
      "equation_hash": "55dfbe4f3f2c86ae",
      "branch": "Thermodynamics",
      "category": "Heat Capacity",
      "difficulty": "beginner",
      "description": "Ratio of heat capacities",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "C_P",
        "γ",
        "C_V"
      ],
      "sympy_repr": "Eq(γ, C_P/C_V)"
    },
    {
      "id": "bal_0114",
      "name": "Enthalpy Definition",
      "equation": "H = U + PV",
      "equation_hash": "ac2c81bc0b133285",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Functions",
      "difficulty": "intermediate",
      "description": "Enthalpy in terms of internal energy",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "U",
        "PV",
        "H"
      ],
      "sympy_repr": "Eq(H, PV + U)"
    },
    {
      "id": "bal_0115",
      "name": "Helmholtz Free Energy",
      "equation": "F = U - TS",
      "equation_hash": "44368907c433a584",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Functions",
      "difficulty": "intermediate",
      "description": "Helmholtz free energy",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "U",
        "TS",
        "F"
      ],
      "sympy_repr": "Eq(F, -TS + U)"
    },
    {
      "id": "bal_0116",
      "name": "Gibbs Free Energy",
      "equation": "G = H - TS",
      "equation_hash": "0568e6fc68508212",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Functions",
      "difficulty": "intermediate",
      "description": "Gibbs free energy",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "TS",
        "G",
        "H",
        "_grav"
      ],
      "sympy_repr": "Eq(G*_grav, H - TS)"
    },
    {
      "id": "bal_0117",
      "name": "Maxwell Relations (1)",
      "equation": "(∂T/∂V)_S = -(∂P/∂S)_V",
      "equation_hash": "6fa85878d7c9afb2",
      "branch": "Thermodynamics",
      "category": "Maxwell Relations",
      "difficulty": "advanced",
      "description": "First Maxwell relation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "diffT",
        "diffS",
        "diffP",
        "_S",
        "_V",
        "diffV"
      ],
      "sympy_repr": "Eq(_S*diffT/diffV, -_V*diffP/diffS)"
    },
    {
      "id": "bal_0118",
      "name": "Maxwell Relations (2)",
      "equation": "(∂T/∂P)_S = (∂V/∂S)_P",
      "equation_hash": "1f69fb43dfbe69bd",
      "branch": "Thermodynamics",
      "category": "Maxwell Relations",
      "difficulty": "advanced",
      "description": "Second Maxwell relation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "diffT",
        "diffS",
        "_P",
        "_S",
        "diffV",
        "diffP"
      ],
      "sympy_repr": "Eq(_S*diffT/diffP, _P*diffV/diffS)"
    },
    {
      "id": "bal_0119",
      "name": "Maxwell Relations (3)",
      "equation": "(∂S/∂V)_T = (∂P/∂T)_V",
      "equation_hash": "c28281d28173bd0f",
      "branch": "Thermodynamics",
      "category": "Maxwell Relations",
      "difficulty": "advanced",
      "description": "Third Maxwell relation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "diffT",
        "diffS",
        "diffP",
        "_T",
        "_V",
        "diffV"
      ],
      "sympy_repr": "Eq(_T*diffS/diffV, _V*diffP/diffT)"
    },
    {
      "id": "bal_0120",
      "name": "Maxwell Relations (4)",
      "equation": "(∂S/∂P)_T = -(∂V/∂T)_P",
      "equation_hash": "036525cbf2aeffe8",
      "branch": "Thermodynamics",
      "category": "Maxwell Relations",
      "difficulty": "advanced",
      "description": "Fourth Maxwell relation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "diffT",
        "diffS",
        "_P",
        "_T",
        "diffV",
        "diffP"
      ],
      "sympy_repr": "Eq(_T*diffS/diffP, -_P*diffV/diffT)"
    },
    {
      "id": "bal_0121",
      "name": "Clausius-Clapeyron Equation",
      "equation": "dP/dT = L/(T × ΔV)",
      "equation_hash": "9e95173070488521",
      "branch": "Thermodynamics",
      "category": "Phase Transitions",
      "difficulty": "advanced",
      "description": "Slope of phase boundary curve",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "dP",
        "L",
        "Delta_V",
        "dT",
        "T"
      ],
      "sympy_repr": "Eq(dP/dT, L/(Delta_V*T))",
      "cleaning_metadata": {
        "original_variables": [
          "dP",
          "L",
          "De_chargeltaV",
          "dT",
          "T"
        ],
        "replacements": {
          "De_chargeltaV": "Delta_V"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0122",
      "name": "Stefan-Boltzmann Law",
      "equation": "j = σT⁴",
      "equation_hash": "309f9c9e158e15dd",
      "branch": "Thermodynamics",
      "category": "Radiation",
      "difficulty": "intermediate",
      "description": "Energy flux from blackbody radiator",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "sigmaT4",
        "j"
      ],
      "sympy_repr": "Eq(j, sigmaT4)"
    },
    {
      "id": "bal_0123",
      "name": "Wien's Displacement Law",
      "equation": "λ_max = b/T",
      "equation_hash": "bf5f5feff6ec83c9",
      "branch": "Thermodynamics",
      "category": "Radiation",
      "difficulty": "intermediate",
      "description": "Peak wavelength of blackbody radiation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "b",
        "T",
        "lamda_max"
      ],
      "sympy_repr": "Eq(lamda_max, b/T)"
    },
    {
      "id": "bal_0124",
      "name": "Planck's Law",
      "equation": "B(λ,T) = (2hc²/λ⁵) × 1/(e^(hc/λkT) - 1)",
      "equation_hash": "ddd9b94c9ddf9d1e",
      "branch": "Thermodynamics",
      "category": "Radiation",
      "difficulty": "advanced",
      "description": "Spectral radiance of blackbody",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "T",
        "hc",
        "hc²"
      ],
      "sympy_repr": "Eq(T, hc)"
    },
    {
      "id": "bal_0125",
      "name": "Carnot Efficiency",
      "equation": "η = 1 - T_c/T_h",
      "equation_hash": "c61e84bc6bdbf447",
      "branch": "Thermodynamics",
      "category": "Heat Engines",
      "difficulty": "intermediate",
      "description": "Maximum efficiency of heat engine",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "eta",
        "e",
        "T_c_light",
        "T_h_planc_lightk_boltzmann"
      ],
      "sympy_repr": "Eq(eta*e, -T_c_light/T_h_planc_lightk_boltzmann + 1)",
      "cleaning_metadata": {
        "original_variables": [
          "_chargeta",
          "e",
          "T_c_light",
          "T_h_planc_lightk_boltzmann"
        ],
        "replacements": {
          "_chargeta": "eta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0126",
      "name": "Heat Engine Efficiency",
      "equation": "η = W/Q_h",
      "equation_hash": "dee315689ac7a8b4",
      "branch": "Thermodynamics",
      "category": "Heat Engines",
      "difficulty": "beginner",
      "description": "Efficiency as work output over heat input",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "eta",
        "e",
        "W",
        "Q_h_planc_lightk_boltzmann"
      ],
      "sympy_repr": "Eq(eta*e, W/Q_h_planc_lightk_boltzmann)",
      "cleaning_metadata": {
        "original_variables": [
          "_chargeta",
          "e",
          "W",
          "Q_h_planc_lightk_boltzmann"
        ],
        "replacements": {
          "_chargeta": "eta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0127",
      "name": "Coefficient of Performance (Refrigerator)",
      "equation": "COP_R = Q_c/W",
      "equation_hash": "e2d3a68974c04408",
      "branch": "Thermodynamics",
      "category": "Refrigeration",
      "difficulty": "intermediate",
      "description": "Efficiency of refrigerator",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Q_c_light",
        "COP_R_gas",
        "W"
      ],
      "sympy_repr": "Eq(COP_R_gas, Q_c_light/W)"
    },
    {
      "id": "bal_0128",
      "name": "Coefficient of Performance (Heat Pump)",
      "equation": "COP_HP = Q_h/W",
      "equation_hash": "df6c241a48e43e9d",
      "branch": "Thermodynamics",
      "category": "Heat Pumps",
      "difficulty": "intermediate",
      "description": "Efficiency of heat pump",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "W",
        "Q_h_planc_lightk_boltzmann",
        "COP_HP"
      ],
      "sympy_repr": "Eq(COP_HP, Q_h_planc_lightk_boltzmann/W)"
    },
    {
      "id": "bal_0129",
      "name": "Adiabatic Process (Ideal Gas)",
      "equation": "PV^γ = constant",
      "equation_hash": "f352d3807d26d7f0",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Processes",
      "difficulty": "intermediate",
      "description": "Adiabatic process for ideal gas",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "an",
        "t",
        "c",
        "on",
        "V_volume",
        "st",
        "P_pressure"
      ],
      "sympy_repr": "Eq(P_pressure*V_volume, an*c*on*st*t)",
      "cleaning_metadata": {
        "original_variables": [
          "an",
          "t",
          "c",
          "on",
          "V",
          "st",
          "P"
        ],
        "replacements": {
          "V": "V_volume",
          "P": "P_pressure"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0130",
      "name": "Isothermal Process",
      "equation": "PV = constant",
      "equation_hash": "95ae44c64b966d19",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Processes",
      "difficulty": "beginner",
      "description": "Isothermal process at constant temperature",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "PV",
        "_lightonstant"
      ],
      "sympy_repr": "Eq(PV, _lightonstant*c)"
    },
    {
      "id": "bal_0131",
      "name": "Isobaric Process",
      "equation": "V/T = constant",
      "equation_hash": "256156f320117c52",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Processes",
      "difficulty": "beginner",
      "description": "Isobaric process at constant pressure",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "V",
        "T",
        "_lightonstant"
      ],
      "sympy_repr": "Eq(V/T, _lightonstant*c)"
    },
    {
      "id": "bal_0132",
      "name": "Isochoric Process",
      "equation": "P/T = constant",
      "equation_hash": "8d68347ba7f0701f",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Processes",
      "difficulty": "beginner",
      "description": "Isochoric process at constant volume",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "_lightonstant",
        "T",
        "P"
      ],
      "sympy_repr": "Eq(P/T, _lightonstant*c)"
    },
    {
      "id": "bal_0133",
      "name": "Work in Isothermal Process",
      "equation": "W = nRT × ln(V₂/V₁)",
      "equation_hash": "99ff5e805aea24c7",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Work",
      "difficulty": "intermediate",
      "description": "Work done in isothermal expansion",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "W"
      ],
      "sympy_repr": "Eq(W, 0)"
    },
    {
      "id": "bal_0134",
      "name": "Work in Adiabatic Process",
      "equation": "W = (P₁V₁ - P₂V₂)/(γ - 1)",
      "equation_hash": "e1af7b642aeab42d",
      "branch": "Thermodynamics",
      "category": "Thermodynamic Work",
      "difficulty": "intermediate",
      "description": "Work done in adiabatic process",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "W"
      ],
      "sympy_repr": "Eq(W, 0)"
    },
    {
      "id": "bal_0135",
      "name": "Heat Conduction (Fourier's Law)",
      "equation": "q = -k × A × dT/dx",
      "equation_hash": "3aa45e5865d5ed2b",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Heat conduction rate",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "k_thermal",
        "A",
        "dT",
        "q_heat",
        "dx"
      ],
      "sympy_repr": "Eq(q_heat, -A*dT*k_thermal/dx)",
      "cleaning_metadata": {
        "original_variables": [
          "k_boltzmann",
          "A",
          "dT",
          "q",
          "dx"
        ],
        "replacements": {
          "k_boltzmann": "k_thermal",
          "q": "q_heat"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0136",
      "name": "Heat Convection",
      "equation": "q = h × A × ΔT",
      "equation_hash": "f223e6a38e55f94b",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Convective heat transfer",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Delta_T",
        "q_heat",
        "h",
        "A"
      ],
      "sympy_repr": "Eq(q_heat, A*Delta_T*h)",
      "cleaning_metadata": {
        "original_variables": [
          "De_chargeltaT",
          "q",
          "h_planc_lightk_boltzmann",
          "A"
        ],
        "replacements": {
          "De_chargeltaT": "Delta_T",
          "q": "q_heat",
          "h_planc_lightk_boltzmann": "h"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0137",
      "name": "Heat Radiation",
      "equation": "q = ε × σ × A × (T₁⁴ - T₂⁴)",
      "equation_hash": "76c4d8eee1f30d1b",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Radiative heat transfer",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "T14",
        "sigma",
        "T24",
        "q_heat",
        "epsilon",
        "A"
      ],
      "sympy_repr": "Eq(q_heat, A*epsilon*e*sigma*(T14 - T24))",
      "cleaning_metadata": {
        "original_variables": [
          "e",
          "T14",
          "sigma",
          "T24",
          "q",
          "_chargepsilon",
          "A"
        ],
        "replacements": {
          "q": "q_heat",
          "_chargepsilon": "epsilon"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0138",
      "name": "Thermal Resistance",
      "equation": "R_th = ΔT/q",
      "equation_hash": "c4dd79d0a35ca0d5",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Thermal resistance",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_gas_th_planc_lightk_boltzmann",
        "q_heat",
        "Delta_T"
      ],
      "sympy_repr": "Eq(R_gas_th_planc_lightk_boltzmann, Delta_T/q_heat)",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas_th_planc_lightk_boltzmann",
          "q",
          "De_chargeltaT"
        ],
        "replacements": {
          "q": "q_heat",
          "De_chargeltaT": "Delta_T"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0139",
      "name": "Thermal Conductivity",
      "equation": "k = q × L/(A × ΔT)",
      "equation_hash": "c5ec4175cca12c43",
      "branch": "Thermodynamics",
      "category": "Heat Transfer",
      "difficulty": "intermediate",
      "description": "Thermal conductivity",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "k_thermal",
        "Delta_T",
        "A",
        "q_heat"
      ],
      "sympy_repr": "Eq(k_thermal, L*q_heat/(A*Delta_T))",
      "cleaning_metadata": {
        "original_variables": [
          "L",
          "k_boltzmann",
          "De_chargeltaT",
          "A",
          "q"
        ],
        "replacements": {
          "k_boltzmann": "k_thermal",
          "De_chargeltaT": "Delta_T",
          "q": "q_heat"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0140",
      "name": "Maxwell-Boltzmann Distribution",
      "equation": "f(v) = 4π(m/2πkT)^(3/2) × v² × e^(-mv²/2kT)",
      "equation_hash": "37a2125553fd9934",
      "branch": "Thermodynamics",
      "category": "Statistical Mechanics",
      "difficulty": "advanced",
      "description": "Velocity distribution of gas molecules",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v2",
        "e",
        "m",
        "k_boltzmannT",
        "v",
        "f",
        "e",
        "mv2"
      ],
      "sympy_repr": "Eq(f*v, -3*pi**2*e*e*k_boltzmannT**2*m*mv2*v2/2)",
      "cleaning_metadata": {
        "original_variables": [
          "v2",
          "e",
          "m",
          "k_boltzmannT",
          "v",
          "f",
          "_charge",
          "mv2"
        ],
        "replacements": {
          "_charge": "e"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0141",
      "name": "Boltzmann Distribution",
      "equation": "N_i/N = (g_i/Z) × e^(-E_i/kT)",
      "equation_hash": "95b086acbe23db48",
      "branch": "Thermodynamics",
      "category": "Statistical Mechanics",
      "difficulty": "advanced",
      "description": "Population of energy states",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "g_i",
        "N",
        "N_i"
      ],
      "sympy_repr": "Eq(g_i, N)"
    },
    {
      "id": "bal_0142",
      "name": "Partition Function",
      "equation": "Z = Σ g_i × e^(-E_i/kT)",
      "equation_hash": "ff5d638454cc113a",
      "branch": "Thermodynamics",
      "category": "Statistical Mechanics",
      "difficulty": "advanced",
      "description": "Partition function",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "E_i",
        "e",
        "Z",
        "e",
        "k_boltzmannT",
        "Sigmag_i"
      ],
      "sympy_repr": "Eq(Z, -E_i*Sigmag_i*e*e/k_boltzmannT)",
      "cleaning_metadata": {
        "original_variables": [
          "E_i",
          "e",
          "Z",
          "_charge",
          "k_boltzmannT",
          "Sigmag_i"
        ],
        "replacements": {
          "_charge": "e"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0143",
      "name": "Entropy (Statistical)",
      "equation": "S = k × ln(Ω)",
      "equation_hash": "ff496bba010dda63",
      "branch": "Thermodynamics",
      "category": "Statistical Mechanics",
      "difficulty": "advanced",
      "description": "Boltzmann entropy formula",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "S",
        "k",
        "ln"
      ],
      "sympy_repr": "Eq(S, k)"
    },
    {
      "id": "bal_0144",
      "name": "Mean Kinetic Energy",
      "equation": "⟨E_k⟩ = (3/2)kT",
      "equation_hash": "d06c0a30e6395b61",
      "branch": "Thermodynamics",
      "category": "Kinetic Theory",
      "difficulty": "intermediate",
      "description": "Average kinetic energy of gas molecules",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "E_k",
        "kT"
      ],
      "sympy_repr": "Eq(E_k, kT)"
    },
    {
      "id": "bal_0145",
      "name": "Root Mean Square Speed",
      "equation": "v_rms = √(3kT/m)",
      "equation_hash": "76d055d9a9e265c2",
      "branch": "Thermodynamics",
      "category": "Kinetic Theory",
      "difficulty": "intermediate",
      "description": "RMS speed of gas molecules",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m",
        "ms",
        "k",
        "T",
        "v_r"
      ],
      "sympy_repr": "Eq(ms*v_r, 3*T*k/m)"
    },
    {
      "id": "bal_0146",
      "name": "Most Probable Speed",
      "equation": "v_mp = √(2kT/m)",
      "equation_hash": "4ee43bb5450769af",
      "branch": "Thermodynamics",
      "category": "Kinetic Theory",
      "difficulty": "intermediate",
      "description": "Most probable speed in Maxwell distribution",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m",
        "k",
        "v_m",
        "p",
        "T"
      ],
      "sympy_repr": "Eq(p*v_m, 2*T*k/m)"
    },
    {
      "id": "bal_0147",
      "name": "Average Speed",
      "equation": "⟨v⟩ = √(8kT/πm)",
      "equation_hash": "5f6f07bc8a93ff15",
      "branch": "Thermodynamics",
      "category": "Kinetic Theory",
      "difficulty": "intermediate",
      "description": "Average speed of gas molecules",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v",
        "m",
        "T",
        "k"
      ],
      "sympy_repr": "Eq(v, 8*T*k/m)"
    },
    {
      "id": "bal_0148",
      "name": "Pressure from Kinetic Theory",
      "equation": "P = (1/3) × n × m × ⟨v²⟩",
      "equation_hash": "52905a4c0d4bba1c",
      "branch": "Thermodynamics",
      "category": "Kinetic Theory",
      "difficulty": "intermediate",
      "description": "Pressure in terms of molecular motion",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v²",
        "P_pressure",
        "m"
      ],
      "sympy_repr": "Eq(v², P_pressure)",
      "cleaning_metadata": {
        "original_variables": [
          "v²",
          "P",
          "m"
        ],
        "replacements": {
          "P": "P_pressure"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0150",
      "name": "Collision Rate",
      "equation": "Z = n × σ × ⟨v⟩",
      "equation_hash": "fa6fe1d3e535ffb3",
      "branch": "Thermodynamics",
      "category": "Kinetic Theory",
      "difficulty": "intermediate",
      "description": "Rate of molecular collisions",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v",
        "Z",
        "n"
      ],
      "sympy_repr": "Eq(Z, n*v)"
    },
    {
      "id": "bal_0151",
      "name": "Diffusion Coefficient",
      "equation": "D = (1/3) × λ × ⟨v⟩",
      "equation_hash": "3fdc8708459c3434",
      "branch": "Thermodynamics",
      "category": "Transport Properties",
      "difficulty": "advanced",
      "description": "Molecular diffusion coefficient",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "λ",
        "⟨v⟩",
        "D"
      ],
      "sympy_repr": "Eq(D, λ*⟨v⟩/3)"
    },
    {
      "id": "bal_0152",
      "name": "Viscosity (Kinetic Theory)",
      "equation": "η = (1/2) × ρ × λ × ⟨v⟩",
      "equation_hash": "6c630a4cb80ac894",
      "branch": "Thermodynamics",
      "category": "Transport Properties",
      "difficulty": "advanced",
      "description": "Viscosity from kinetic theory",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "λ",
        "ρ",
        "η",
        "⟨v⟩"
      ],
      "sympy_repr": "Eq(η, λ*ρ*⟨v⟩/2)"
    },
    {
      "id": "bal_0153",
      "name": "Thermal Conductivity (Kinetic)",
      "equation": "k = (1/2) × ρ × λ × ⟨v⟩ × C_V",
      "equation_hash": "f99061fb65c4666b",
      "branch": "Thermodynamics",
      "category": "Transport Properties",
      "difficulty": "advanced",
      "description": "Thermal conductivity from kinetic theory",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "ρ",
        "k",
        "C_V",
        "λ",
        "⟨v⟩"
      ],
      "sympy_repr": "Eq(k, C_V*λ*ρ*⟨v⟩/2)"
    },
    {
      "id": "bal_0154",
      "name": "Joule-Thomson Coefficient",
      "equation": "μ_JT = (∂T/∂P)_H",
      "equation_hash": "9fc276f56f32cef9",
      "branch": "Thermodynamics",
      "category": "Real Gas Effects",
      "difficulty": "advanced",
      "description": "Temperature change with pressure at constant enthalpy",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "diffT",
        "_H",
        "mu_JT",
        "diffP"
      ],
      "sympy_repr": "Eq(mu_JT, _H*diffT/diffP)"
    },
    {
      "id": "bal_0155",
      "name": "Compressibility Factor",
      "equation": "Z = PV/(nRT)",
      "equation_hash": "f5a5110cf6c958ea",
      "branch": "Thermodynamics",
      "category": "Real Gas Effects",
      "difficulty": "intermediate",
      "description": "Deviation from ideal gas behavior",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "nR_gasT",
        "PV",
        "Z"
      ],
      "sympy_repr": "Eq(Z, PV/nR_gasT)"
    },
    {
      "id": "bal_0160",
      "name": "Snell's Law",
      "equation": "n₁sin(θ₁) = n₂sin(θ₂)",
      "equation_hash": "c9d410039afa97c0",
      "branch": "Optics",
      "category": "Geometric Optics",
      "difficulty": "beginner",
      "description": "Law of refraction",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "θ₁",
        "θ₂"
      ],
      "sympy_repr": "True"
    },
    {
      "id": "bal_0161",
      "name": "Law of Reflection",
      "equation": "θᵢ = θᵣ",
      "equation_hash": "21a38e20588acbc5",
      "branch": "Optics",
      "category": "Geometric Optics",
      "difficulty": "beginner",
      "description": "Angle of incidence equals angle of reflection",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "th_planc_lightk_boltzmanne_chargetar",
        "th_planc_lightk_boltzmanne_chargetai"
      ],
      "sympy_repr": "Eq(th_planc_lightk_boltzmanne_chargetai, th_planc_lightk_boltzmanne_chargetar)"
    },
    {
      "id": "bal_0167",
      "name": "Critical Angle",
      "equation": "θ_c = arcsin(n₂/n₁)",
      "equation_hash": "217bf1a48e2c9ee8",
      "branch": "Optics",
      "category": "Total Internal Reflection",
      "difficulty": "intermediate",
      "description": "Critical angle for total internal reflection",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "th_planc_lightk_boltzmanne_chargeta_c_light",
        "n1",
        "arc_lightsin",
        "n2"
      ],
      "sympy_repr": "Eq(th_planc_lightk_boltzmanne_chargeta_c_light, arc_lightsin*n2/n1)"
    },
    {
      "id": "bal_0168",
      "name": "Brewster's Angle",
      "equation": "θ_B = arctan(n₂/n₁)",
      "equation_hash": "9befb8ea5b68ee62",
      "branch": "Optics",
      "category": "Polarization",
      "difficulty": "intermediate",
      "description": "Angle of complete polarization",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "th_planc_lightk_boltzmanne_chargeta_B",
        "n1",
        "arc_lighttan",
        "n2"
      ],
      "sympy_repr": "Eq(th_planc_lightk_boltzmanne_chargeta_B, arc_lighttan*n2/n1)"
    },
    {
      "id": "bal_0169",
      "name": "Malus's Law",
      "equation": "I = I₀cos²(θ)",
      "equation_hash": "9920718807c8048a",
      "branch": "Optics",
      "category": "Polarization",
      "difficulty": "intermediate",
      "description": "Intensity through polarizer",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "_lightos2",
        "c",
        "theta",
        "I0"
      ],
      "sympy_repr": "Eq(I, I0*_lightos2*c*theta)",
      "cleaning_metadata": {
        "original_variables": [
          "_lightos2",
          "c",
          "th_planc_lightk_boltzmanne_chargeta",
          "I0"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0170",
      "name": "Young's Double Slit (Bright Fringes)",
      "equation": "d sin(θ) = mλ",
      "equation_hash": "a431b249eb2674e0",
      "branch": "Optics",
      "category": "Interference",
      "difficulty": "intermediate",
      "description": "Condition for constructive interference",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "theta",
        "dsin",
        "mlamda"
      ],
      "sympy_repr": "Eq(dsin*theta, mlamda)",
      "cleaning_metadata": {
        "original_variables": [
          "th_planc_lightk_boltzmanne_chargeta",
          "dsin",
          "mlamda"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0171",
      "name": "Young's Double Slit (Dark Fringes)",
      "equation": "d sin(θ) = (m + 1/2)λ",
      "equation_hash": "7d586c0488b716b5",
      "branch": "Optics",
      "category": "Interference",
      "difficulty": "intermediate",
      "description": "Condition for destructive interference",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m",
        "lambda",
        "theta",
        "dsin"
      ],
      "sympy_repr": "Eq(dsin*theta, lambda*(m + 1/2))",
      "cleaning_metadata": {
        "original_variables": [
          "m",
          "lamda",
          "th_planc_lightk_boltzmanne_chargeta",
          "dsin"
        ],
        "replacements": {
          "lamda": "lambda",
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0172",
      "name": "Fringe Spacing",
      "equation": "Δy = λL/d",
      "equation_hash": "836d2cf4bb65ed53",
      "branch": "Optics",
      "category": "Interference",
      "difficulty": "intermediate",
      "description": "Spacing between interference fringes",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "d",
        "De_chargeltay",
        "lamdaL"
      ],
      "sympy_repr": "Eq(De_chargeltay, lamdaL/d)"
    },
    {
      "id": "bal_0173",
      "name": "Single Slit Diffraction (Minima)",
      "equation": "a sin(θ) = mλ",
      "equation_hash": "da160103f9451a49",
      "branch": "Optics",
      "category": "Diffraction",
      "difficulty": "intermediate",
      "description": "Condition for diffraction minima",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "si",
        "m",
        "a"
      ],
      "sympy_repr": "Eq(a*si*n(), m)"
    },
    {
      "id": "bal_0174",
      "name": "Rayleigh Criterion",
      "equation": "θ = 1.22λ/D",
      "equation_hash": "89a51eb890dc5fd2",
      "branch": "Optics",
      "category": "Diffraction",
      "difficulty": "intermediate",
      "description": "Angular resolution limit",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "theta",
        "lambda",
        "D"
      ],
      "sympy_repr": "Eq(theta, 1.22*lambda/D)",
      "cleaning_metadata": {
        "original_variables": [
          "th_planc_lightk_boltzmanne_chargeta",
          "lamda",
          "D"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta",
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0177",
      "name": "Bragg's Law",
      "equation": "2d sin(θ) = mλ",
      "equation_hash": "189b3f82c178b70f",
      "branch": "Optics",
      "category": "X-ray Diffraction",
      "difficulty": "intermediate",
      "description": "X-ray diffraction from crystal lattice",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "theta",
        "dsin",
        "mlamda"
      ],
      "sympy_repr": "Eq(2*dsin*theta, mlamda)",
      "cleaning_metadata": {
        "original_variables": [
          "th_planc_lightk_boltzmanne_chargeta",
          "dsin",
          "mlamda"
        ],
        "replacements": {
          "th_planc_lightk_boltzmanne_chargeta": "theta"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0178",
      "name": "Fresnel Number",
      "equation": "F = a²/(λz)",
      "equation_hash": "bb76ef270788e08b",
      "branch": "Optics",
      "category": "Fresnel Diffraction",
      "difficulty": "advanced",
      "description": "Parameter for near-field diffraction",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "a2",
        "F",
        "lamdaz"
      ],
      "sympy_repr": "Eq(F, a2/lamdaz)"
    },
    {
      "id": "bal_0179",
      "name": "Numerical Aperture",
      "equation": "NA = n sin(θ_max)",
      "equation_hash": "0d88994d2332fff8",
      "branch": "Optics",
      "category": "Fiber Optics",
      "difficulty": "intermediate",
      "description": "Light-gathering ability of optical fiber",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "NA",
        "th_planc_lightk_boltzmanne_chargeta_max",
        "nsin"
      ],
      "sympy_repr": "Eq(NA, nsin*th_planc_lightk_boltzmanne_chargeta_max)"
    },
    {
      "id": "bal_0180",
      "name": "Acceptance Angle",
      "equation": "θ_max = arcsin(√(n₁² - n₂²)/n₀)",
      "equation_hash": "89571053f7f9c1d7",
      "branch": "Optics",
      "category": "Fiber Optics",
      "difficulty": "intermediate",
      "description": "Maximum acceptance angle for fiber",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "a",
        "_m",
        "si",
        "rc",
        "ax"
      ],
      "sympy_repr": "Eq(_m*ax, a*rc*si*n(0))"
    },
    {
      "id": "bal_0181",
      "name": "Dispersion",
      "equation": "dn/dλ",
      "equation_hash": "958cdefa5b0df7bd",
      "branch": "Optics",
      "category": "Dispersion",
      "difficulty": "intermediate",
      "description": "Rate of change of refractive index with wavelength",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "dn",
        "dlamda"
      ],
      "sympy_repr": "dn/dlamda"
    },
    {
      "id": "bal_0182",
      "name": "Group Velocity",
      "equation": "v_g = c/(n - λ(dn/dλ))",
      "equation_hash": "d9e2ed1a4b5b6b4e",
      "branch": "Optics",
      "category": "Dispersion",
      "difficulty": "advanced",
      "description": "Velocity of wave packet",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "dn",
        "lambda",
        "n",
        "c",
        "dlamda",
        "v_g"
      ],
      "sympy_repr": "Eq(v_g, c*c/(n - dn*lambda/dlamda))",
      "cleaning_metadata": {
        "original_variables": [
          "_light",
          "dn",
          "lamda",
          "n",
          "c",
          "dlamda",
          "v_g"
        ],
        "replacements": {
          "_light": "c",
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0183",
      "name": "Phase Velocity",
      "equation": "v_p = c/n",
      "equation_hash": "be7a38e836f3dbf8",
      "branch": "Optics",
      "category": "Wave Optics",
      "difficulty": "intermediate",
      "description": "Velocity of wave phase",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "c",
        "v_p",
        "n"
      ],
      "sympy_repr": "Eq(v_p, c*c/n)",
      "cleaning_metadata": {
        "original_variables": [
          "c",
          "_light",
          "v_p",
          "n"
        ],
        "replacements": {
          "_light": "c"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0184",
      "name": "Gaussian Beam Waist",
      "equation": "w₀ = √(λz_R/π)",
      "equation_hash": "37e967af62e1526e",
      "branch": "Optics",
      "category": "Laser Optics",
      "difficulty": "advanced",
      "description": "Minimum beam radius",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "λz_R",
        "π",
        "w₀"
      ],
      "sympy_repr": "Eq(w₀, √(λz_R/π))"
    },
    {
      "id": "bal_0185",
      "name": "Rayleigh Range",
      "equation": "z_R = πw₀²/λ",
      "equation_hash": "d10806b0df42c857",
      "branch": "Optics",
      "category": "Laser Optics",
      "difficulty": "advanced",
      "description": "Distance over which beam remains collimated",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "w02",
        "lambda",
        "z_R_gas"
      ],
      "sympy_repr": "Eq(z_R_gas, pi*w02/lambda)",
      "cleaning_metadata": {
        "original_variables": [
          "w02",
          "lamda",
          "z_R_gas"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0186",
      "name": "Gaussian Beam Radius",
      "equation": "w(z) = w₀√(1 + (z/z_R)²)",
      "equation_hash": "e276d52c02a44e50",
      "branch": "Optics",
      "category": "Laser Optics",
      "difficulty": "advanced",
      "description": "Beam radius at distance z",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "z",
        "z_R"
      ],
      "sympy_repr": "Eq(w(z), w(z/z_R + 1))"
    },
    {
      "id": "bal_0187",
      "name": "Fabry-Pérot Free Spectral Range",
      "equation": "Δλ = λ²/(2nL)",
      "equation_hash": "05a4aabb6159e069",
      "branch": "Optics",
      "category": "Interferometry",
      "difficulty": "advanced",
      "description": "Wavelength spacing between orders",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "lamda2",
        "nL",
        "De_chargeltalamda"
      ],
      "sympy_repr": "Eq(De_chargeltalamda, lamda2/(2*nL))"
    },
    {
      "id": "bal_0188",
      "name": "Finesse",
      "equation": "F = FSR/FWHM",
      "equation_hash": "e2e139ad33277fc1",
      "branch": "Optics",
      "category": "Interferometry",
      "difficulty": "advanced",
      "description": "Quality factor of Fabry-Pérot cavity",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "F",
        "FWHM",
        "FSR_gas"
      ],
      "sympy_repr": "Eq(F, FSR_gas/FWHM)"
    },
    {
      "id": "bal_0189",
      "name": "Michelson Fringe Shift",
      "equation": "Δm = 2ΔL/λ",
      "equation_hash": "b3521d7189925074",
      "branch": "Optics",
      "category": "Interferometry",
      "difficulty": "intermediate",
      "description": "Fringe shift in Michelson interferometer",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "De_chargeltam",
        "lambda",
        "De_chargeltaL"
      ],
      "sympy_repr": "Eq(De_chargeltam, 2*De_chargeltaL/lambda)",
      "cleaning_metadata": {
        "original_variables": [
          "De_chargeltam",
          "lamda",
          "De_chargeltaL"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0190",
      "name": "Coherence Length",
      "equation": "l_c = λ²/Δλ",
      "equation_hash": "74a53a33818ed72a",
      "branch": "Optics",
      "category": "Coherence",
      "difficulty": "intermediate",
      "description": "Spatial coherence length",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "lamda2",
        "l_c_light",
        "De_chargeltalamda"
      ],
      "sympy_repr": "Eq(l_c_light, lamda2/De_chargeltalamda)"
    },
    {
      "id": "bal_0191",
      "name": "Coherence Time",
      "equation": "τ_c = 1/Δf",
      "equation_hash": "dd840b8f6edc418d",
      "branch": "Optics",
      "category": "Coherence",
      "difficulty": "intermediate",
      "description": "Temporal coherence time",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "De_chargeltaf",
        "tau_c_light"
      ],
      "sympy_repr": "Eq(tau_c_light, 1/De_chargeltaf)"
    },
    {
      "id": "bal_0192",
      "name": "Optical Path Length",
      "equation": "OPL = ∫ n(s) ds",
      "equation_hash": "d76e9fd1b114f896",
      "branch": "Optics",
      "category": "Wave Optics",
      "difficulty": "intermediate",
      "description": "Path length weighted by refractive index",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "OPL",
        "s",
        "ds"
      ],
      "sympy_repr": "Eq(OPL, s)"
    },
    {
      "id": "bal_0193",
      "name": "Fermat's Principle",
      "equation": "δ∫ n ds = 0",
      "equation_hash": "3a8312ba9e0a2d68",
      "branch": "Optics",
      "category": "Optical Principles",
      "difficulty": "advanced",
      "description": "Light follows path of stationary optical path",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "de_chargeltainte_chargegrate_chargends"
      ],
      "sympy_repr": "Eq(de_chargeltainte_chargegrate_chargends, 0)"
    },
    {
      "id": "bal_0197",
      "name": "Sellmeier Equation",
      "equation": "n²(λ) = 1 + Σ(B_i λ²)/(λ² - C_i)",
      "equation_hash": "03137abaa972ac95",
      "branch": "Optics",
      "category": "Material Dispersion",
      "difficulty": "advanced",
      "description": "Empirical formula for refractive index dispersion",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "lamda2",
        "C_i",
        "B_ilamda2",
        "lambda",
        "Sigma",
        "n2"
      ],
      "sympy_repr": "Eq(lambda*n2, B_ilamda2*Sigma/(-C_i + lamda2) + 1)",
      "cleaning_metadata": {
        "original_variables": [
          "lamda2",
          "C_i",
          "B_ilamda2",
          "lamda",
          "Sigma",
          "n2"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0198",
      "name": "Cauchy's Equation",
      "equation": "n(λ) = A + B/λ² + C/λ⁴",
      "equation_hash": "1ee9d9edd2b3418c",
      "branch": "Optics",
      "category": "Material Dispersion",
      "difficulty": "intermediate",
      "description": "Approximate dispersion formula",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "lamda2",
        "lamda4",
        "lambda",
        "n",
        "A",
        "C",
        "B"
      ],
      "sympy_repr": "Eq(lambda*n, A + B/lamda2 + C/lamda4)",
      "cleaning_metadata": {
        "original_variables": [
          "lamda2",
          "lamda4",
          "lamda",
          "n",
          "A",
          "C",
          "B"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      }
    },
    {
      "id": "bal_0199",
      "name": "Abbe Number",
      "equation": "V = (n_d - 1)/(n_F - n_C)",
      "equation_hash": "d6d05626621d1449",
      "branch": "Optics",
      "category": "Material Properties",
      "difficulty": "intermediate",
      "description": "Measure of material dispersion",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "V",
        "n_F",
        "n_C",
        "n_d"
      ],
      "sympy_repr": "Eq(V, (n_d - 1)/(-n_C + n_F))"
    },
    {
      "id": "bal_0200",
      "name": "Planck's Energy Equation",
      "equation": "E = hf",
      "equation_hash": "1508c7579f22bffc",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "beginner",
      "description": "Energy of a photon",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "h_planc_lightk_boltzmannf"
      ],
      "sympy_repr": "Eq(E, h_planc_lightk_boltzmannf)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0201",
      "name": "de Broglie Wavelength",
      "equation": "λ = h/p",
      "equation_hash": "f21794204462cab9",
      "branch": "Quantum Mechanics",
      "category": "Wave-Particle Duality",
      "difficulty": "intermediate",
      "description": "Wavelength of matter wave",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "p",
        "h",
        "lambda"
      ],
      "sympy_repr": "Eq(lambda, h/p)",
      "cleaning_metadata": {
        "original_variables": [
          "p",
          "h_planc_lightk_boltzmann",
          "lamda"
        ],
        "replacements": {
          "h_planc_lightk_boltzmann": "h",
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.069851"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0202",
      "name": "Heisenberg Uncertainty Principle",
      "equation": "Δx Δp ≥ ℏ/2",
      "equation_hash": "438d8390db03f6dc",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "intermediate",
      "description": "Position-momentum uncertainty relation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "De_chargeltaxDe_chargeltap"
      ],
      "sympy_repr": "De_chargeltaxDe_chargeltap",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0203",
      "name": "Energy-Time Uncertainty",
      "equation": "ΔE Δt ≥ ℏ/2",
      "equation_hash": "eced9502199c1f7d",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "intermediate",
      "description": "Energy-time uncertainty relation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "De_chargeltaEDe_chargeltat"
      ],
      "sympy_repr": "De_chargeltaEDe_chargeltat",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0204",
      "name": "Schrödinger Equation (Time-dependent)",
      "equation": "iℏ ∂ψ/∂t = Ĥψ",
      "equation_hash": "0b5c4f18bf666fef",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "advanced",
      "description": "Time evolution of quantum states",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Ĥpsi",
        "difft",
        "ih_planc_lightk_boltzmannbardiffpsi"
      ],
      "sympy_repr": "Eq(ih_planc_lightk_boltzmannbardiffpsi/difft, Ĥpsi)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0205",
      "name": "Schrödinger Equation (Time-independent)",
      "equation": "Ĥψ = Eψ",
      "equation_hash": "2160b95a50ca9019",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "advanced",
      "description": "Eigenvalue equation for energy states",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Ĥpsi",
        "Epsi"
      ],
      "sympy_repr": "Eq(Ĥpsi, Epsi)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0206",
      "name": "Einstein's Mass-Energy Equivalence",
      "equation": "E = mc²",
      "equation_hash": "f60f71e85f042afc",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "beginner",
      "description": "Rest mass energy equivalence",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "mc_light2"
      ],
      "sympy_repr": "Eq(E, mc_light2)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0207",
      "name": "Relativistic Energy",
      "equation": "E = γmc²",
      "equation_hash": "33775ec83007d4d5",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Total relativistic energy",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "gammamc_light2"
      ],
      "sympy_repr": "Eq(E, gammamc_light2)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0208",
      "name": "Lorentz Factor",
      "equation": "γ = 1/√(1 - v²/c²)",
      "equation_hash": "1a8930a3cb34d724",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Relativistic correction factor",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "c",
        "v",
        "γ"
      ],
      "sympy_repr": "Eq(γ, 1/√(1 - v**2/c**2))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0209",
      "name": "Relativistic Momentum",
      "equation": "p = γmv",
      "equation_hash": "2ee7676738ee0a48",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Momentum in special relativity",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "p",
        "gammamv"
      ],
      "sympy_repr": "Eq(p, gammamv)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0210",
      "name": "Energy-Momentum Relation",
      "equation": "E² = (pc)² + (mc²)²",
      "equation_hash": "3b0c988e1e33f38e",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Relativistic energy-momentum relation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "pc_light",
        "mc_light2",
        "E2"
      ],
      "sympy_repr": "Eq(E2, 2*mc_light2 + 2*pc_light)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0211",
      "name": "Time Dilation",
      "equation": "Δt = γΔt₀",
      "equation_hash": "bb037f59ad2e32da",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Time dilation in moving frame",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "gammaDe_chargeltat0",
        "De_chargeltat"
      ],
      "sympy_repr": "Eq(De_chargeltat, gammaDe_chargeltat0)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0212",
      "name": "Length Contraction",
      "equation": "L = L₀/γ",
      "equation_hash": "3cc7e46466b74e65",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "intermediate",
      "description": "Length contraction in moving frame",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "L₀",
        "γ"
      ],
      "sympy_repr": "Eq(L, L₀/γ)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0213",
      "name": "Relativistic Doppler Effect",
      "equation": "f' = f√((1-β)/(1+β))",
      "equation_hash": "974a6ac899173c09",
      "branch": "Relativity",
      "category": "Special Relativity",
      "difficulty": "advanced",
      "description": "Frequency shift for moving source",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "f"
      ],
      "sympy_repr": "Eq(f, 1)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0214",
      "name": "Photoelectric Effect",
      "equation": "E_k = hf - φ",
      "equation_hash": "36b9f396c4e6c3e5",
      "branch": "Electromagnetism",
      "category": "Quantum Effects",
      "difficulty": "intermediate",
      "description": "Kinetic energy of photoelectrons",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "E_k_boltzmann",
        "h_planc_lightk_boltzmannf",
        "phi"
      ],
      "sympy_repr": "Eq(E_k_boltzmann, h_planc_lightk_boltzmannf - phi)",
      "cleaning_metadata": {
        "original_variables": [
          "E_k_boltzmann",
          "h_planc_lightk_boltzmannf",
          "ph_planc_lightk_boltzmanni"
        ],
        "replacements": {
          "ph_planc_lightk_boltzmanni": "phi"
        },
        "cleaned_date": "2025-07-16T21:04:36.085477"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0216",
      "name": "Hydrogen Energy Levels",
      "equation": "E_n = -13.6 eV/n²",
      "equation_hash": "c9c08a411b2b00ac",
      "branch": "Atomic and Nuclear Physics",
      "category": "Atomic Physics",
      "difficulty": "intermediate",
      "description": "Energy levels of hydrogen atom",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "V",
        "n",
        "E_n"
      ],
      "sympy_repr": "Eq(E_n, -13.6*V*e/n)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0217",
      "name": "Bohr Radius",
      "equation": "a₀ = ℏ²/(m_e k e²)",
      "equation_hash": "7e66402094d74627",
      "branch": "Atomic and Nuclear Physics",
      "category": "Atomic Physics",
      "difficulty": "intermediate",
      "description": "First Bohr orbital radius",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m_e_chargek_boltzmanne",
        "_charge2",
        "h_planc_lightk_boltzmannbar2",
        "a0"
      ],
      "sympy_repr": "Eq(a0, h_planc_lightk_boltzmannbar2/(_charge2*m_e_chargek_boltzmanne))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0218",
      "name": "Rydberg Formula",
      "equation": "1/λ = R_H(1/n₁² - 1/n₂²)",
      "equation_hash": "f134c89466514523",
      "branch": "Atomic and Nuclear Physics",
      "category": "Atomic Physics",
      "difficulty": "intermediate",
      "description": "Hydrogen spectral lines",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "R_gas_H",
        "n22",
        "lambda",
        "n12"
      ],
      "sympy_repr": "Eq(1/lambda, R_gas_H*(-1/n22 + 1/n12))",
      "cleaning_metadata": {
        "original_variables": [
          "R_gas_H",
          "n22",
          "lamda",
          "n12"
        ],
        "replacements": {
          "lamda": "lambda"
        },
        "cleaned_date": "2025-07-16T21:04:36.085477"
      },
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0219",
      "name": "Fine Structure Constant",
      "equation": "α = e²/(4πε₀ℏc)",
      "equation_hash": "5b178d5bf66266cd",
      "branch": "Atomic and Nuclear Physics",
      "category": "Fundamental Constants",
      "difficulty": "advanced",
      "description": "Dimensionless coupling constant",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "e",
        "alph_planc_lightk_boltzmanna",
        "_charge2",
        "e_chargepsilon0",
        "h_planc_lightk_boltzmannbarc_light"
      ],
      "sympy_repr": "Eq(alph_planc_lightk_boltzmanna, _charge2*e/(4*pi*e_chargepsilon0*h_planc_lightk_boltzmannbarc_light))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0220",
      "name": "Particle in a Box",
      "equation": "E_n = n²π²ℏ²/(2mL²)",
      "equation_hash": "b88803461af8e682",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "intermediate",
      "description": "Energy levels in infinite square well",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "pi2",
        "h_planc_lightk_boltzmannbar2",
        "n2",
        "mL2",
        "E_n"
      ],
      "sympy_repr": "Eq(E_n, h_planc_lightk_boltzmannbar2*n2*pi2/(2*mL2))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0221",
      "name": "Quantum Harmonic Oscillator",
      "equation": "E_n = ℏω(n + 1/2)",
      "equation_hash": "82f247943f6f623d",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "intermediate",
      "description": "Energy levels of harmonic oscillator",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "h_planc_lightk_boltzmannbarome_chargega",
        "n",
        "E_n"
      ],
      "sympy_repr": "Eq(E_n, h_planc_lightk_boltzmannbarome_chargega*(n + 1/2))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0222",
      "name": "Angular Momentum Quantization",
      "equation": "L = ℏ√(l(l+1))",
      "equation_hash": "4f3bcef09632733c",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "intermediate",
      "description": "Magnitude of angular momentum",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "l",
        "h_planc_lightk_boltzmannbarsqrt"
      ],
      "sympy_repr": "Eq(L, h_planc_lightk_boltzmannbarsqrt*l*(l + 1))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0223",
      "name": "Magnetic Quantum Number",
      "equation": "L_z = m_l ℏ",
      "equation_hash": "2c3fef8ae2ed6e3c",
      "branch": "Quantum Mechanics",
      "category": "Quantum Mechanics",
      "difficulty": "intermediate",
      "description": "z-component of angular momentum",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L_z",
        "m_lh_planc_lightk_boltzmannbar"
      ],
      "sympy_repr": "Eq(L_z, m_lh_planc_lightk_boltzmannbar)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0224",
      "name": "Radioactive Decay Law",
      "equation": "N(t) = N₀e^(-λt)",
      "equation_hash": "803073f1019c58ba",
      "branch": "Atomic and Nuclear Physics",
      "category": "Nuclear Physics",
      "difficulty": "intermediate",
      "description": "Exponential decay of radioactive nuclei",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "λt",
        "N₀e",
        "t"
      ],
      "sympy_repr": "Eq(t, N₀e**(-λt))",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0225",
      "name": "Half-Life",
      "equation": "t₁/₂ = ln(2)/λ",
      "equation_hash": "059668db0b41e1a0",
      "branch": "Atomic and Nuclear Physics",
      "category": "Nuclear Physics",
      "difficulty": "beginner",
      "description": "Time for half of nuclei to decay",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "₂",
        "λ",
        "t₁"
      ],
      "sympy_repr": "Eq(t₁/₂, log(2)/λ)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0226",
      "name": "Activity",
      "equation": "A = λN",
      "equation_hash": "ac7c71df99d6ab98",
      "branch": "Atomic and Nuclear Physics",
      "category": "Nuclear Physics",
      "difficulty": "beginner",
      "description": "Rate of radioactive decay",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "lamdaN",
        "A"
      ],
      "sympy_repr": "Eq(A, lamdaN)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0227",
      "name": "Mass Defect",
      "equation": "Δm = (Zm_p + Nm_n) - M",
      "equation_hash": "03152702a2899178",
      "branch": "Atomic and Nuclear Physics",
      "category": "Nuclear Physics",
      "difficulty": "intermediate",
      "description": "Mass difference in nuclear binding",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "De_chargeltam",
        "M",
        "Nm_n",
        "Zm_p"
      ],
      "sympy_repr": "Eq(De_chargeltam, -M + Nm_n + Zm_p)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0228",
      "name": "Binding Energy",
      "equation": "BE = Δm c²",
      "equation_hash": "ee48ba22b74b2567",
      "branch": "Atomic and Nuclear Physics",
      "category": "Nuclear Physics",
      "difficulty": "intermediate",
      "description": "Energy released in nuclear formation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "BE",
        "_light2",
        "De_chargeltamc"
      ],
      "sympy_repr": "Eq(BE, De_chargeltamc*_light2)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0229",
      "name": "Q-Value",
      "equation": "Q = (m_reactants - m_products)c²",
      "equation_hash": "ea743baf16cda63b",
      "branch": "Atomic and Nuclear Physics",
      "category": "Nuclear Physics",
      "difficulty": "intermediate",
      "description": "Energy released in nuclear reaction",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m_reactants",
        "Q",
        "c²"
      ],
      "sympy_repr": "Eq(m_reactants, Q)",
      "original_branch": "Modern Physics"
    },
    {
      "id": "bal_0230",
      "name": "Continuity Equation",
      "equation": "A₁v₁ = A₂v₂",
      "equation_hash": "54ff297a27792ccf",
      "branch": "Fluid Dynamics",
      "category": "Fluid Flow",
      "difficulty": "beginner",
      "description": "Conservation of mass in fluid flow",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v2",
        "v1",
        "A1",
        "A2"
      ],
      "sympy_repr": "Eq(A1*v1, A2*v2)"
    },
    {
      "id": "bal_0231",
      "name": "Bernoulli's Equation",
      "equation": "P + 1/2ρv² + ρgh = constant",
      "equation_hash": "167d935e6f9ba0dc",
      "branch": "Fluid Dynamics",
      "category": "Fluid Flow",
      "difficulty": "intermediate",
      "description": "Energy conservation in fluid flow",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "rh_planc_lightk_boltzmannogh_planc_lightk_boltzmann",
        "_lightonstant",
        "c",
        "rh_planc_lightk_boltzmannov2",
        "P"
      ],
      "sympy_repr": "Eq(P + rh_planc_lightk_boltzmannogh_planc_lightk_boltzmann + rh_planc_lightk_boltzmannov2/2, _lightonstant*c)"
    },
    {
      "id": "bal_0232",
      "name": "Torricelli's Law",
      "equation": "v = √(2gh)",
      "equation_hash": "e8f256cfe72ff97f",
      "branch": "Fluid Dynamics",
      "category": "Fluid Flow",
      "difficulty": "beginner",
      "description": "Speed of efflux from container",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v",
        "g",
        "h"
      ],
      "sympy_repr": "Eq(v, 2*g*h)"
    },
    {
      "id": "bal_0233",
      "name": "Hydrostatic Pressure",
      "equation": "P = P₀ + ρgh",
      "equation_hash": "15827074d43c39f6",
      "branch": "Fluid Dynamics",
      "category": "Fluid Statics",
      "difficulty": "beginner",
      "description": "Pressure variation with depth",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "rh_planc_lightk_boltzmannogh_planc_lightk_boltzmann",
        "P0",
        "P"
      ],
      "sympy_repr": "Eq(P, P0 + rh_planc_lightk_boltzmannogh_planc_lightk_boltzmann)"
    },
    {
      "id": "bal_0234",
      "name": "Archimedes' Principle",
      "equation": "F_b = ρ_fluid × V_displaced × g",
      "equation_hash": "74c039a876524452",
      "branch": "Fluid Dynamics",
      "category": "Buoyancy",
      "difficulty": "beginner",
      "description": "Buoyant force on submerged object",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "F_b",
        "g",
        "V_displac_lighte_charged",
        "rh_planc_lightk_boltzmanno_fluid"
      ],
      "sympy_repr": "Eq(F_b, V_displac_lighte_charged*g*rh_planc_lightk_boltzmanno_fluid)"
    },
    {
      "id": "bal_0235",
      "name": "Pascal's Principle",
      "equation": "ΔP = ρg Δh",
      "equation_hash": "3a84517faef8017d",
      "branch": "Fluid Dynamics",
      "category": "Fluid Statics",
      "difficulty": "beginner",
      "description": "Pressure transmission in fluid",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "Delta_P",
        "rh_planc_lightk_boltzmannogDe_chargeltah_planc_lightk_boltzmann"
      ],
      "sympy_repr": "Eq(Delta_P, rh_planc_lightk_boltzmannogDe_chargeltah_planc_lightk_boltzmann)",
      "cleaning_metadata": {
        "original_variables": [
          "De_chargeltaP",
          "rh_planc_lightk_boltzmannogDe_chargeltah_planc_lightk_boltzmann"
        ],
        "replacements": {
          "De_chargeltaP": "Delta_P"
        },
        "cleaned_date": "2025-07-16T21:04:36.085477"
      }
    },
    {
      "id": "bal_0236",
      "name": "Poiseuille's Law",
      "equation": "Q = πr⁴ΔP/(8ηL)",
      "equation_hash": "37ccc9a5d1a42e68",
      "branch": "Fluid Dynamics",
      "category": "Viscous Flow",
      "difficulty": "advanced",
      "description": "Flow rate through circular pipe",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "L",
        "r⁴ΔP",
        "Q"
      ],
      "sympy_repr": "Eq(L, r⁴ΔP)"
    },
    {
      "id": "bal_0237",
      "name": "Reynolds Number",
      "equation": "Re = ρvL/η",
      "equation_hash": "d8ec83b27430ed3d",
      "branch": "Fluid Dynamics",
      "category": "Viscous Flow",
      "difficulty": "intermediate",
      "description": "Ratio of inertial to viscous forces",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "eta",
        "R_gase_charge",
        "rh_planc_lightk_boltzmannovL",
        "e"
      ],
      "sympy_repr": "Eq(R_gase_charge, eta*rh_planc_lightk_boltzmannovL/e)",
      "cleaning_metadata": {
        "original_variables": [
          "_chargeta",
          "R_gase_charge",
          "rh_planc_lightk_boltzmannovL",
          "e"
        ],
        "replacements": {
          "_chargeta": "eta"
        },
        "cleaned_date": "2025-07-16T21:04:36.085477"
      }
    },
    {
      "id": "bal_0238",
      "name": "Stokes' Law",
      "equation": "F_d = 6πηrv",
      "equation_hash": "8477e1db43942afb",
      "branch": "Fluid Dynamics",
      "category": "Viscous Flow",
      "difficulty": "intermediate",
      "description": "Drag force on sphere in viscous fluid",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "F_d",
        "e_chargetarv"
      ],
      "sympy_repr": "Eq(F_d, 6*pi*e_chargetarv)"
    },
    {
      "id": "bal_0239",
      "name": "Terminal Velocity",
      "equation": "v_t = √(2mg/(ρAC_d))",
      "equation_hash": "c12c73322c4b7d05",
      "branch": "Fluid Dynamics",
      "category": "Drag",
      "difficulty": "intermediate",
      "description": "Final velocity of falling object",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "m",
        "v_t",
        "g",
        "A",
        "C_d"
      ],
      "sympy_repr": "Eq(v_t, 2*g*m/(A*C_d))"
    },
    {
      "id": "bal_0240",
      "name": "Drag Force",
      "equation": "F_d = 1/2ρv²AC_d",
      "equation_hash": "eee5c0c92c760772",
      "branch": "Fluid Dynamics",
      "category": "Drag",
      "difficulty": "intermediate",
      "description": "Force opposing motion through fluid",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "F_d",
        "rh_planc_lightk_boltzmannov2",
        "AC_d"
      ],
      "sympy_repr": "Eq(F_d, AC_d*rh_planc_lightk_boltzmannov2/2)"
    },
    {
      "id": "bal_0241",
      "name": "Lift Force",
      "equation": "F_L = 1/2ρv²AC_L",
      "equation_hash": "5bc27f974bd7fb68",
      "branch": "Fluid Dynamics",
      "category": "Aerodynamics",
      "difficulty": "intermediate",
      "description": "Force perpendicular to flow direction",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "AC_L",
        "rh_planc_lightk_boltzmannov2",
        "F_L"
      ],
      "sympy_repr": "Eq(F_L, AC_L*rh_planc_lightk_boltzmannov2/2)"
    },
    {
      "id": "bal_0242",
      "name": "Lift Coefficient",
      "equation": "C_L = 2πα",
      "equation_hash": "c9b55d6d008a0c0d",
      "branch": "Fluid Dynamics",
      "category": "Aerodynamics",
      "difficulty": "intermediate",
      "description": "Lift coefficient for thin airfoil",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "alph_planc_lightk_boltzmanna",
        "C_L"
      ],
      "sympy_repr": "Eq(C_L, 2*pi*alph_planc_lightk_boltzmanna)"
    },
    {
      "id": "bal_0244",
      "name": "Kutta-Joukowski Theorem",
      "equation": "F_L = ρvΓ",
      "equation_hash": "35dd57620f1a0220",
      "branch": "Fluid Dynamics",
      "category": "Aerodynamics",
      "difficulty": "advanced",
      "description": "Lift per unit length from circulation",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "rh_planc_lightk_boltzmannovG_gravamma",
        "F_L"
      ],
      "sympy_repr": "Eq(F_L, rh_planc_lightk_boltzmannovG_gravamma)"
    },
    {
      "id": "bal_0245",
      "name": "Navier-Stokes Equation",
      "equation": "ρ(∂v⃗/∂t + v⃗·∇v⃗) = -∇P + η∇²v⃗ + ρg⃗",
      "equation_hash": "1c10e47725d62912",
      "branch": "Fluid Dynamics",
      "category": "Viscous Flow",
      "difficulty": "advanced",
      "description": "Fundamental equation of fluid motion",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v⃗",
        "e",
        "nablav⃗",
        "nablaP",
        "rh_planc_lightk_boltzmannog⃗",
        "difft",
        "diffv⃗",
        "_chargetanabla2",
        "rho"
      ],
      "sympy_repr": "Eq(rho*(nablav⃗*v⃗ + diffv⃗/difft), _chargetanabla2*e*v⃗ - nablaP + rh_planc_lightk_boltzmannog⃗)",
      "cleaning_metadata": {
        "original_variables": [
          "v⃗",
          "e",
          "nablav⃗",
          "nablaP",
          "rh_planc_lightk_boltzmannog⃗",
          "difft",
          "diffv⃗",
          "_chargetanabla2",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.085477"
      }
    },
    {
      "id": "bal_0246",
      "name": "Euler's Equation",
      "equation": "ρ(∂v⃗/∂t + v⃗·∇v⃗) = -∇P + ρg⃗",
      "equation_hash": "45ab5465bd37349b",
      "branch": "Fluid Dynamics",
      "category": "Inviscid Flow",
      "difficulty": "advanced",
      "description": "Equation for inviscid fluid flow",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v⃗",
        "difft",
        "diffv⃗",
        "nablav⃗",
        "nablaP",
        "rh_planc_lightk_boltzmannog⃗",
        "rho"
      ],
      "sympy_repr": "Eq(rho*(nablav⃗*v⃗ + diffv⃗/difft), -nablaP + rh_planc_lightk_boltzmannog⃗)",
      "cleaning_metadata": {
        "original_variables": [
          "v⃗",
          "difft",
          "diffv⃗",
          "nablav⃗",
          "nablaP",
          "rh_planc_lightk_boltzmannog⃗",
          "rh_planc_lightk_boltzmanno"
        ],
        "replacements": {
          "rh_planc_lightk_boltzmanno": "rho"
        },
        "cleaned_date": "2025-07-16T21:04:36.085477"
      }
    },
    {
      "id": "bal_0247",
      "name": "Vorticity",
      "equation": "ω⃗ = ∇ × v⃗",
      "equation_hash": "eba0be1e4ab48f9d",
      "branch": "Fluid Dynamics",
      "category": "Rotational Flow",
      "difficulty": "advanced",
      "description": "Curl of velocity field",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v⃗",
        "nabla",
        "ome_chargega⃗"
      ],
      "sympy_repr": "Eq(ome_chargega⃗, nabla*v⃗)"
    },
    {
      "id": "bal_0249",
      "name": "Velocity Potential",
      "equation": "v⃗ = ∇φ",
      "equation_hash": "e1bbb83e18f6770a",
      "branch": "Fluid Dynamics",
      "category": "Potential Flow",
      "difficulty": "advanced",
      "description": "Velocity as gradient of potential",
      "source_file": "balanced_db.json",
      "parse_success": true,
      "variables": [
        "v⃗",
        "nablaph_planc_lightk_boltzmanni"
      ],
      "sympy_repr": "Eq(v⃗, nablaph_planc_lightk_boltzmanni)"
    }
  ]
}